{"id":"b558af6ae3255ae5f16e1b778f3704a0","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IERC5805.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Counters.sol\";\nimport \"../../utils/Checkpoints.sol\";\nimport \"../../utils/cryptography/EIP712.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_beforeTokenTransfer}).\n *\n * _Available since v4.5._\n */\nabstract contract Votes is Context, EIP712, IERC5805 {\n    using Checkpoints for Checkpoints.Trace224;\n    using Counters for Counters.Counter;\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegation;\n\n    /// @custom:oz-retyped-from mapping(address => Checkpoints.History)\n    mapping(address => Checkpoints.Trace224) private _delegateCheckpoints;\n\n    /// @custom:oz-retyped-from Checkpoints.History\n    Checkpoints.Trace224 private _totalCheckpoints;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"Votes: future lookup\");\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint32(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"Votes: future lookup\");\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint32(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegation[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegation[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint224(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint224(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) private {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint224(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint224(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    function _push(\n        Checkpoints.Trace224 storage store,\n        function(uint224, uint224) view returns (uint224) op,\n        uint224 delta\n    ) private returns (uint224, uint224) {\n        return store.push(SafeCast.toUint32(clock()), op(store.latest(), delta));\n    }\n\n    function _add(uint224 a, uint224 b) private pure returns (uint224) {\n        return a + b;\n    }\n\n    function _subtract(uint224 a, uint224 b) private pure returns (uint224) {\n        return a - b;\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev Returns an address nonce.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev Returns the contract's {EIP712} domain separator.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"contracts/interfaces/IERC2309.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (interfaces/IERC2309.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-2309: ERC-721 Consecutive Transfer Extension.\n *\n * _Available since v4.8._\n */\ninterface IERC2309 {\n    /**\n     * @dev Emitted when the tokens from `fromTokenId` to `toTokenId` are transferred from `fromAddress` to `toAddress`.\n     */\n    event ConsecutiveTransfer(\n        uint256 indexed fromTokenId,\n        uint256 toTokenId,\n        address indexed fromAddress,\n        address indexed toAddress\n    );\n}\n"},"contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n *\n * _Available since v4.5._\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"},"contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IERC2981.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n *\n * _Available since v4.5._\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual override returns (address, uint256) {\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\n\n        if (royalty.receiver == address(0)) {\n            royalty = _defaultRoyaltyInfo;\n        }\n\n        uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\n\n        return (royalty.receiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: invalid receiver\");\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: Invalid parameters\");\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"contracts/token/ERC721/extensions/draft-ERC721Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/draft-ERC721Votes.sol)\n\npragma solidity ^0.8.0;\n\n// ERC721Votes was marked as draft due to the EIP-712 dependency.\n// EIP-712 is Final as of 2022-08-11. This file is deprecated.\n\nimport \"./ERC721Votes.sol\";\n"},"contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _burn(tokenId);\n    }\n}\n"},"contracts/token/ERC721/extensions/ERC721Consecutive.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721Consecutive.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC2309.sol\";\nimport \"../../../utils/Checkpoints.sol\";\nimport \"../../../utils/structs/BitMaps.sol\";\n\n/**\n * @dev Implementation of the ERC2309 \"Consecutive Transfer Extension\" as defined in\n * https://eips.ethereum.org/EIPS/eip-2309[EIP-2309].\n *\n * This extension allows the minting of large batches of tokens, during contract construction only. For upgradeable\n * contracts this implies that batch minting is only available during proxy deployment, and not in subsequent upgrades.\n * These batches are limited to 5000 tokens at a time by default to accommodate off-chain indexers.\n *\n * Using this extension removes the ability to mint single tokens during contract construction. This ability is\n * regained after construction. During construction, only batch minting is allowed.\n *\n * IMPORTANT: This extension bypasses the hooks {_beforeTokenTransfer} and {_afterTokenTransfer} for tokens minted in\n * batch. When using this extension, you should consider the {_beforeConsecutiveTokenTransfer} and\n * {_afterConsecutiveTokenTransfer} hooks in addition to {_beforeTokenTransfer} and {_afterTokenTransfer}.\n *\n * IMPORTANT: When overriding {_afterTokenTransfer}, be careful about call ordering. {ownerOf} may return invalid\n * values during the {_afterTokenTransfer} execution if the super call is not called first. To be safe, execute the\n * super call before your custom logic.\n *\n * _Available since v4.8._\n */\nabstract contract ERC721Consecutive is IERC2309, ERC721 {\n    using BitMaps for BitMaps.BitMap;\n    using Checkpoints for Checkpoints.Trace160;\n\n    Checkpoints.Trace160 private _sequentialOwnership;\n    BitMaps.BitMap private _sequentialBurn;\n\n    /**\n     * @dev Maximum size of a batch of consecutive tokens. This is designed to limit stress on off-chain indexing\n     * services that have to record one entry per token, and have protections against \"unreasonably large\" batches of\n     * tokens.\n     *\n     * NOTE: Overriding the default value of 5000 will not cause on-chain issues, but may result in the asset not being\n     * correctly supported by off-chain indexing services (including marketplaces).\n     */\n    function _maxBatchSize() internal view virtual returns (uint96) {\n        return 5000;\n    }\n\n    /**\n     * @dev See {ERC721-_ownerOf}. Override that checks the sequential ownership structure for tokens that have\n     * been minted as part of a batch, and not yet transferred.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual override returns (address) {\n        address owner = super._ownerOf(tokenId);\n\n        // If token is owned by the core, or beyond consecutive range, return base value\n        if (owner != address(0) || tokenId > type(uint96).max) {\n            return owner;\n        }\n\n        // Otherwise, check the token was not burned, and fetch ownership from the anchors\n        // Note: no need for safe cast, we know that tokenId <= type(uint96).max\n        return _sequentialBurn.get(tokenId) ? address(0) : address(_sequentialOwnership.lowerLookup(uint96(tokenId)));\n    }\n\n    /**\n     * @dev Mint a batch of tokens of length `batchSize` for `to`. Returns the token id of the first token minted in the\n     * batch; if `batchSize` is 0, returns the number of consecutive ids minted so far.\n     *\n     * Requirements:\n     *\n     * - `batchSize` must not be greater than {_maxBatchSize}.\n     * - The function is called in the constructor of the contract (directly or indirectly).\n     *\n     * CAUTION: Does not emit a `Transfer` event. This is ERC721 compliant as long as it is done inside of the\n     * constructor, which is enforced by this function.\n     *\n     * CAUTION: Does not invoke `onERC721Received` on the receiver.\n     *\n     * Emits a {IERC2309-ConsecutiveTransfer} event.\n     */\n    function _mintConsecutive(address to, uint96 batchSize) internal virtual returns (uint96) {\n        uint96 first = _totalConsecutiveSupply();\n\n        // minting a batch of size 0 is a no-op\n        if (batchSize > 0) {\n            require(!Address.isContract(address(this)), \"ERC721Consecutive: batch minting restricted to constructor\");\n            require(to != address(0), \"ERC721Consecutive: mint to the zero address\");\n            require(batchSize <= _maxBatchSize(), \"ERC721Consecutive: batch too large\");\n\n            // hook before\n            _beforeTokenTransfer(address(0), to, first, batchSize);\n\n            // push an ownership checkpoint & emit event\n            uint96 last = first + batchSize - 1;\n            _sequentialOwnership.push(last, uint160(to));\n\n            // The invariant required by this function is preserved because the new sequentialOwnership checkpoint\n            // is attributing ownership of `batchSize` new tokens to account `to`.\n            __unsafe_increaseBalance(to, batchSize);\n\n            emit ConsecutiveTransfer(first, last, address(0), to);\n\n            // hook after\n            _afterTokenTransfer(address(0), to, first, batchSize);\n        }\n\n        return first;\n    }\n\n    /**\n     * @dev See {ERC721-_mint}. Override version that restricts normal minting to after construction.\n     *\n     * Warning: Using {ERC721Consecutive} prevents using {_mint} during construction in favor of {_mintConsecutive}.\n     * After construction, {_mintConsecutive} is no longer available and {_mint} becomes available.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual override {\n        require(Address.isContract(address(this)), \"ERC721Consecutive: can't mint during construction\");\n        super._mint(to, tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_afterTokenTransfer}. Burning of tokens that have been sequentially minted must be explicit.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        if (\n            to == address(0) && // if we burn\n            firstTokenId < _totalConsecutiveSupply() && // and the tokenId was minted in a batch\n            !_sequentialBurn.get(firstTokenId) // and the token was never marked as burnt\n        ) {\n            require(batchSize == 1, \"ERC721Consecutive: batch burn not supported\");\n            _sequentialBurn.set(firstTokenId);\n        }\n        super._afterTokenTransfer(from, to, firstTokenId, batchSize);\n    }\n\n    function _totalConsecutiveSupply() private view returns (uint96) {\n        (bool exists, uint96 latestId, ) = _sequentialOwnership.latestCheckpoint();\n        return exists ? latestId + 1 : 0;\n    }\n}\n"},"contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\n\n        if (batchSize > 1) {\n            // Will only trigger during construction. Batch transferring (minting) is not available afterwards.\n            revert(\"ERC721Enumerable: consecutive transfers not supported\");\n        }\n\n        uint256 tokenId = firstTokenId;\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"contracts/token/ERC721/extensions/ERC721Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/extensions/ERC721Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../security/Pausable.sol\";\n\n/**\n * @dev ERC721 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract unpausable.\n */\nabstract contract ERC721Pausable is ERC721, Pausable {\n    /**\n     * @dev See {ERC721-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\n\n        require(!paused(), \"ERC721Pausable: token transfer while paused\");\n    }\n}\n"},"contracts/token/ERC721/extensions/ERC721Royalty.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Royalty.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../common/ERC2981.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Extension of ERC721 with the ERC2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n * information.\n *\n * Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for\n * specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n *\n * _Available since v4.5._\n */\nabstract contract ERC721Royalty is ERC2981, ERC721 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC2981) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally clears the royalty information for the token.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n        _resetTokenRoyalty(tokenId);\n    }\n}\n"},"contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"contracts/token/ERC721/extensions/ERC721Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../governance/utils/Votes.sol\";\n\n/**\n * @dev Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts\n * as 1 vote unit.\n *\n * Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost\n * on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of\n * the votes in governance decisions, or they can delegate to themselves to be their own representative.\n *\n * _Available since v4.5._\n */\nabstract contract ERC721Votes is ERC721, Votes {\n    /**\n     * @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        _transferVotingUnits(from, to, batchSize);\n        super._afterTokenTransfer(from, to, firstTokenId, batchSize);\n    }\n\n    /**\n     * @dev Returns the balance of `account`.\n     *\n     * WARNING: Overriding this function will likely result in incorrect vote tracking.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n}\n"},"contracts/token/ERC721/extensions/ERC721Wrapper.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721Wrapper.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev Extension of the ERC721 token contract to support token wrapping.\n *\n * Users can deposit and withdraw an \"underlying token\" and receive a \"wrapped token\" with a matching tokenId. This is useful\n * in conjunction with other modules. For example, combining this wrapping mechanism with {ERC721Votes} will allow the\n * wrapping of an existing \"basic\" ERC721 into a governance token.\n *\n * _Available since v4.9.0_\n */\nabstract contract ERC721Wrapper is ERC721, IERC721Receiver {\n    IERC721 private immutable _underlying;\n\n    constructor(IERC721 underlyingToken) {\n        _underlying = underlyingToken;\n    }\n\n    /**\n     * @dev Allow a user to deposit underlying tokens and mint the corresponding tokenIds.\n     */\n    function depositFor(address account, uint256[] memory tokenIds) public virtual returns (bool) {\n        uint256 length = tokenIds.length;\n        for (uint256 i = 0; i < length; ++i) {\n            uint256 tokenId = tokenIds[i];\n\n            // This is an \"unsafe\" transfer that doesn't call any hook on the receiver. With underlying() being trusted\n            // (by design of this contract) and no other contracts expected to be called from there, we are safe.\n            // slither-disable-next-line reentrancy-no-eth\n            underlying().transferFrom(_msgSender(), address(this), tokenId);\n            _safeMint(account, tokenId);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Allow a user to burn wrapped tokens and withdraw the corresponding tokenIds of the underlying tokens.\n     */\n    function withdrawTo(address account, uint256[] memory tokenIds) public virtual returns (bool) {\n        uint256 length = tokenIds.length;\n        for (uint256 i = 0; i < length; ++i) {\n            uint256 tokenId = tokenIds[i];\n            require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Wrapper: caller is not token owner or approved\");\n            _burn(tokenId);\n            // Checks were already performed at this point, and there's no way to retake ownership or approval from\n            // the wrapped tokenId after this point, so it's safe to remove the reentrancy check for the next line.\n            // slither-disable-next-line reentrancy-no-eth\n            underlying().safeTransferFrom(address(this), account, tokenId);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Overrides {IERC721Receiver-onERC721Received} to allow minting on direct ERC721 transfers to\n     * this contract.\n     *\n     * In case there's data attached, it validates that the operator is this contract, so only trusted data\n     * is accepted from {depositFor}.\n     *\n     * WARNING: Doesn't work with unsafe transfers (eg. {IERC721-transferFrom}). Use {ERC721Wrapper-_recover}\n     * for recovering in that scenario.\n     */\n    function onERC721Received(\n        address,\n        address from,\n        uint256 tokenId,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        require(address(underlying()) == _msgSender(), \"ERC721Wrapper: caller is not underlying\");\n        _safeMint(from, tokenId);\n        return IERC721Receiver.onERC721Received.selector;\n    }\n\n    /**\n     * @dev Mint a wrapped token to cover any underlyingToken that would have been transferred by mistake. Internal\n     * function that can be exposed with access control if desired.\n     */\n    function _recover(address account, uint256 tokenId) internal virtual returns (uint256) {\n        require(underlying().ownerOf(tokenId) == address(this), \"ERC721Wrapper: wrapper is not token owner\");\n        _safeMint(account, tokenId);\n        return tokenId;\n    }\n\n    /**\n     * @dev Returns the underlying token.\n     */\n    function underlying() public view virtual returns (IERC721) {\n        return _underlying;\n    }\n}\n"},"contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../extensions/ERC721Enumerable.sol\";\nimport \"../extensions/ERC721Burnable.sol\";\nimport \"../extensions/ERC721Pausable.sol\";\nimport \"../../../access/AccessControlEnumerable.sol\";\nimport \"../../../utils/Context.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev {ERC721} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *  - token ID and URI autogeneration\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n *\n * _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\n */\ncontract ERC721PresetMinterPauserAutoId is\n    Context,\n    AccessControlEnumerable,\n    ERC721Enumerable,\n    ERC721Burnable,\n    ERC721Pausable\n{\n    using Counters for Counters.Counter;\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    Counters.Counter private _tokenIdTracker;\n\n    string private _baseTokenURI;\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\n     * See {ERC721-tokenURI}.\n     */\n    constructor(string memory name, string memory symbol, string memory baseTokenURI) ERC721(name, symbol) {\n        _baseTokenURI = baseTokenURI;\n\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    /**\n     * @dev Creates a new token for `to`. Its token ID will be automatically\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\n     * URI autogenerated based on the base URI passed at construction.\n     *\n     * See {ERC721-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\n\n        // We cannot just use balanceOf to create the new tokenId because tokens\n        // can be burned (destroyed), so we need a separate counter.\n        _mint(to, _tokenIdTracker.current());\n        _tokenIdTracker.increment();\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override(ERC721, ERC721Enumerable, ERC721Pausable) {\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(AccessControlEnumerable, ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"},"contracts/Tokenite.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./token/ERC721/ERC721.sol\";\nimport \"./token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"./utils/Counters.sol\";\n\ncontract Tokenite is ERC721, ERC721URIStorage {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    constructor() ERC721(\"Tokenite\", \"T\") {\n    }\n\n    function mintTokenite(address _receiver, string memory _tokenURI) public returns (uint256) {\n        _tokenIds.increment();\n        uint256 newTokenId = _tokenIds.current();\n        _mint(_receiver, newTokenId);\n        _setTokenURI(newTokenId, _tokenURI);\n\n        return newTokenId;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721URIStorage) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    function _burn(uint256 tokenId) internal virtual override(ERC721, ERC721URIStorage) {}\n    \n    function tokenURI(uint256 tokenId) public view virtual override(ERC721, ERC721URIStorage) returns (string memory) {}\n}"},"contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/utils/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SafeCast.sol\";\n\n/**\n * @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n *\n * _Available since v4.5._\n */\nlibrary Checkpoints {\n    struct History {\n        Checkpoint[] _checkpoints;\n    }\n\n    struct Checkpoint {\n        uint32 _blockNumber;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n     * block, the requested block number must be in the past, excluding the current block.\n     */\n    function getAtBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n     * checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n     * checkpoints.\n     */\n    function getAtProbablyRecentBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n     *\n     * Returns previous value and new value.\n     */\n    function push(History storage self, uint256 value) internal returns (uint256, uint256) {\n        return _insert(self._checkpoints, SafeCast.toUint32(block.number), SafeCast.toUint224(value));\n    }\n\n    /**\n     * @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n     * be set to `op(latest, delta)`.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        History storage self,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) internal returns (uint256, uint256) {\n        return push(self, op(latest(self), delta));\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(History storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(\n        History storage self\n    ) internal view returns (bool exists, uint32 _blockNumber, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._blockNumber, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(History storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            require(last._blockNumber <= key, \"Checkpoint: decreasing keys\");\n\n            // Update or push new checkpoint\n            if (last._blockNumber == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint({_blockNumber: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint({_blockNumber: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage self, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(Trace224 storage self, uint32 key, uint224 value) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint224[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            require(last._key <= key, \"Checkpoint: decreasing keys\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(Trace160 storage self, uint96 key, uint160 value) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint160[] storage self, uint96 key, uint160 value) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            require(last._key <= key, \"Checkpoint: decreasing keys\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/utils/structs/BitMaps.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/BitMaps.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing uint256 to bool mapping in a compact and efficient way, providing the keys are sequential.\n * Largely inspired by Uniswap's https://github.com/Uniswap/merkle-distributor/blob/master/contracts/MerkleDistributor.sol[merkle-distributor].\n */\nlibrary BitMaps {\n    struct BitMap {\n        mapping(uint256 => uint256) _data;\n    }\n\n    /**\n     * @dev Returns whether the bit at `index` is set.\n     */\n    function get(BitMap storage bitmap, uint256 index) internal view returns (bool) {\n        uint256 bucket = index >> 8;\n        uint256 mask = 1 << (index & 0xff);\n        return bitmap._data[bucket] & mask != 0;\n    }\n\n    /**\n     * @dev Sets the bit at `index` to the boolean `value`.\n     */\n    function setTo(BitMap storage bitmap, uint256 index, bool value) internal {\n        if (value) {\n            set(bitmap, index);\n        } else {\n            unset(bitmap, index);\n        }\n    }\n\n    /**\n     * @dev Sets the bit at `index`.\n     */\n    function set(BitMap storage bitmap, uint256 index) internal {\n        uint256 bucket = index >> 8;\n        uint256 mask = 1 << (index & 0xff);\n        bitmap._data[bucket] |= mask;\n    }\n\n    /**\n     * @dev Unsets the bit at `index`.\n     */\n    function unset(BitMap storage bitmap, uint256 index) internal {\n        uint256 bucket = index >> 8;\n        uint256 mask = 1 << (index & 0xff);\n        bitmap._data[bucket] &= ~mask;\n    }\n}\n"},"contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/Tokenite.sol":{"ast":{"absolutePath":"contracts/Tokenite.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"Counters":[6161],"ERC165":[7310],"ERC721":[2414],"ERC721URIStorage":[3474],"IERC165":[7322],"IERC4906":[1327],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SignedMath":[9834],"Strings":[6716],"Tokenite":[100]},"id":101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.4",".22","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:32:0"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"./token/ERC721/ERC721.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":101,"sourceUnit":2415,"src":"66:35:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"./token/ERC721/extensions/ERC721URIStorage.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":101,"sourceUnit":3475,"src":"102:56:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Counters.sol","file":"./utils/Counters.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":101,"sourceUnit":6162,"src":"159:30:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"212:6:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"212:6:0"},{"baseName":{"id":7,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"220:16:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"220:16:0"}],"canonicalName":"Tokenite","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":100,"linearizedBaseContracts":[100,3474,2414,3802,1327,2530,7310,7322,6087],"name":"Tokenite","nameLocation":"200:8:0","nodeType":"ContractDefinition","nodes":[{"id":12,"libraryName":{"id":9,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"249:8:0"},"nodeType":"UsingForDirective","src":"243:36:0","typeName":{"id":11,"nodeType":"UserDefinedTypeName","pathNode":{"id":10,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"262:16:0"},"referencedDeclaration":6093,"src":"262:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":15,"mutability":"mutable","name":"_tokenIds","nameLocation":"309:9:0","nodeType":"VariableDeclaration","scope":100,"src":"284:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter"},"typeName":{"id":14,"nodeType":"UserDefinedTypeName","pathNode":{"id":13,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"284:16:0"},"referencedDeclaration":6093,"src":"284:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"body":{"id":22,"nodeType":"Block","src":"363:7:0","statements":[]},"id":23,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"546f6b656e697465","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"346:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d0a9c01467ff54fb0c349cebd23ed4d227a06ef7a6e764c4fc375be5414e0a8","typeString":"literal_string \"Tokenite\""},"value":"Tokenite"},{"hexValue":"54","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"358:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc","typeString":"literal_string \"T\""},"value":"T"}],"id":20,"kind":"baseConstructorSpecifier","modifierName":{"id":17,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"339:6:0"},"nodeType":"ModifierInvocation","src":"339:23:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"336:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"363:0:0"},"scope":100,"src":"325:45:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":55,"nodeType":"Block","src":"467:199:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":32,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"477:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter storage ref"}},"id":34,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":6119,"src":"477:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$6093_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$6093_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"477:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36,"nodeType":"ExpressionStatement","src":"477:21:0"},{"assignments":[38],"declarations":[{"constant":false,"id":38,"mutability":"mutable","name":"newTokenId","nameLocation":"516:10:0","nodeType":"VariableDeclaration","scope":55,"src":"508:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":42,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":39,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"529:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter storage ref"}},"id":40,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":6105,"src":"529:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$6093_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$6093_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"529:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"508:40:0"},{"expression":{"arguments":[{"id":44,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"564:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"575:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":43,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"558:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"558:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"ExpressionStatement","src":"558:28:0"},{"expression":{"arguments":[{"id":49,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"609:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":50,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"621:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"596:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"596:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"596:35:0"},{"expression":{"id":53,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"649:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":31,"id":54,"nodeType":"Return","src":"642:17:0"}]},"functionSelector":"71ac0e50","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"mintTokenite","nameLocation":"385:12:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"_receiver","nameLocation":"406:9:0","nodeType":"VariableDeclaration","scope":56,"src":"398:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"_tokenURI","nameLocation":"431:9:0","nodeType":"VariableDeclaration","scope":56,"src":"417:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"397:44:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56,"src":"458:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"457:9:0"},"scope":100,"src":"376:290:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1581,3358],"body":{"id":78,"nodeType":"Block","src":"789:97:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":66,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"806:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":68,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"821:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":67,"name":"bytes4","nodeType":"ElementaryTypeName","src":"821:6:0","typeDescriptions":{}}},"id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"821:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"806:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":74,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"867:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":72,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"843:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Tokenite_$100_$","typeString":"type(contract super Tokenite)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3358,"src":"843:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"843:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"806:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":65,"id":77,"nodeType":"Return","src":"799:80:0"}]},"functionSelector":"01ffc9a7","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"681:17:0","nodeType":"FunctionDefinition","overrides":{"id":62,"nodeType":"OverrideSpecifier","overrides":[{"id":60,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"748:6:0"},{"id":61,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"756:16:0"}],"src":"739:34:0"},"parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"interfaceId","nameLocation":"706:11:0","nodeType":"VariableDeclaration","scope":79,"src":"699:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":57,"name":"bytes4","nodeType":"ElementaryTypeName","src":"699:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"698:20:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"783:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":63,"name":"bool","nodeType":"ElementaryTypeName","src":"783:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"782:6:0"},"scope":100,"src":"672:214:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2155,3473],"body":{"id":87,"nodeType":"Block","src":"976:2:0","statements":[]},"id":88,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"901:5:0","nodeType":"FunctionDefinition","overrides":{"id":85,"nodeType":"OverrideSpecifier","overrides":[{"id":83,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"950:6:0"},{"id":84,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"958:16:0"}],"src":"941:34:0"},"parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:0","nodeType":"VariableDeclaration","scope":88,"src":"907:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"906:17:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"976:0:0"},"scope":100,"src":"892:86:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1692,3417],"body":{"id":98,"nodeType":"Block","src":"1102:2:0","statements":[]},"functionSelector":"c87b56dd","id":99,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"997:8:0","nodeType":"FunctionDefinition","overrides":{"id":94,"nodeType":"OverrideSpecifier","overrides":[{"id":92,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"1052:6:0"},{"id":93,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"1060:16:0"}],"src":"1043:34:0"},"parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"tokenId","nameLocation":"1014:7:0","nodeType":"VariableDeclaration","scope":99,"src":"1006:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"1006:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1005:17:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":99,"src":"1087:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":95,"name":"string","nodeType":"ElementaryTypeName","src":"1087:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1086:15:0"},"scope":100,"src":"988:116:0","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":101,"src":"191:915:0","usedErrors":[]}],"src":"32:1074:0"},"id":0},"contracts/access/AccessControl.sol":{"ast":{"absolutePath":"contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[416],"Context":[6087],"ERC165":[7310],"IAccessControl":[614],"IERC165":[7322],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":417,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":102,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":417,"sourceUnit":615,"src":"133:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Context.sol","file":"../utils/Context.sol","id":104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":417,"sourceUnit":6088,"src":"164:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":417,"sourceUnit":6717,"src":"195:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":417,"sourceUnit":7311,"src":"226:43:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":108,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":6087,"src":"1967:7:1"},"id":109,"nodeType":"InheritanceSpecifier","src":"1967:7:1"},{"baseName":{"id":110,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":614,"src":"1976:14:1"},"id":111,"nodeType":"InheritanceSpecifier","src":"1976:14:1"},{"baseName":{"id":112,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":7310,"src":"1992:6:1"},"id":113,"nodeType":"InheritanceSpecifier","src":"1992:6:1"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"271:1660:1","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":416,"linearizedBaseContracts":[416,7310,7322,614,6087],"name":"AccessControl","nameLocation":"1950:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":120,"members":[{"constant":false,"id":117,"mutability":"mutable","name":"members","nameLocation":"2056:7:1","nodeType":"VariableDeclaration","scope":120,"src":"2031:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":116,"keyType":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":115,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:1","nodeType":"VariableDeclaration","scope":120,"src":"2073:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:1","nodeType":"StructDefinition","scope":416,"src":"2005:92:1","visibility":"public"},{"constant":false,"id":125,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:1","nodeType":"VariableDeclaration","scope":416,"src":"2103:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$120_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":124,"keyType":{"id":121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$120_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":123,"nodeType":"UserDefinedTypeName","pathNode":{"id":122,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":120,"src":"2122:8:1"},"referencedDeclaration":120,"src":"2122:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$120_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":128,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:1","nodeType":"VariableDeclaration","scope":416,"src":"2153:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":138,"nodeType":"Block","src":"2621:44:1","statements":[{"expression":{"arguments":[{"id":134,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"2642:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":133,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[193,232],"referencedDeclaration":193,"src":"2631:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2631:16:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2657:1:1"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"2209:375:1","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":139,"name":"onlyRole","nameLocation":"2598:8:1","nodeType":"ModifierDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"2615:4:1","nodeType":"VariableDeclaration","scope":139,"src":"2607:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:1"},"src":"2589:76:1","virtual":false,"visibility":"internal"},{"baseFunctions":[7309],"body":{"id":160,"nodeType":"Block","src":"2823:111:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":148,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2840:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":150,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"2860:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$614_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$614_$","typeString":"type(contract IAccessControl)"}],"id":149,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$614","typeString":"type(contract IAccessControl)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":156,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2915:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":154,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$416_$","typeString":"type(contract super AccessControl)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":7309,"src":"2891:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2891:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":147,"id":159,"nodeType":"Return","src":"2833:94:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"2671:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":161,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:1","nodeType":"FunctionDefinition","overrides":{"id":144,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:1"},"parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:1","nodeType":"VariableDeclaration","scope":161,"src":"2759:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":141,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"2817:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":145,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:1"},"scope":416,"src":"2732:202:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[581],"body":{"id":179,"nodeType":"Block","src":"3113:53:1","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":172,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"3130:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$120_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":174,"indexExpression":{"id":173,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3137:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$120_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":117,"src":"3130:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":177,"indexExpression":{"id":176,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3151:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":171,"id":178,"nodeType":"Return","src":"3123:36:1"}]},"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"2940:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":180,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:1","nodeType":"FunctionDefinition","overrides":{"id":168,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:1"},"parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"role","nameLocation":"3046:4:1","nodeType":"VariableDeclaration","scope":180,"src":"3038:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"account","nameLocation":"3060:7:1","nodeType":"VariableDeclaration","scope":180,"src":"3052:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:1"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"3107:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":169,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:1"},"scope":416,"src":"3021:145:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3516:47:1","statements":[{"expression":{"arguments":[{"id":187,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"3537:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":188,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3543:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[193,232],"referencedDeclaration":232,"src":"3526:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3526:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"3526:30:1"}]},"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"3172:283:1","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:1","nodeType":"FunctionDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"role","nameLocation":"3488:4:1","nodeType":"VariableDeclaration","scope":193,"src":"3480:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"3516:0:1"},"scope":416,"src":"3460:103:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"3917:406:1","statements":[{"condition":{"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:1","subExpression":{"arguments":[{"id":202,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3940:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":203,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"3946:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":201,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3932:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3932:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"IfStatement","src":"3927:390:1","trueBody":{"id":229,"nodeType":"Block","src":"3956:361:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":214,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"4135:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":212,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"4115:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$6716_$","typeString":"type(library Strings)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":6690,"src":"4115:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":221,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"4242:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:1","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4234:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":217,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"4214:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$6716_$","typeString":"type(library Strings)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":6670,"src":"4214:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4214:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":209,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:252:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:1","typeDescriptions":{}}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3994:298:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":206,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3970:336:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"ExpressionStatement","src":"3970:336:1"}]}}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"3569:270:1","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":232,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"role","nameLocation":"3872:4:1","nodeType":"VariableDeclaration","scope":232,"src":"3864:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"account","nameLocation":"3886:7:1","nodeType":"VariableDeclaration","scope":232,"src":"3878:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:1"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"3917:0:1"},"scope":416,"src":"3844:479:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[589],"body":{"id":246,"nodeType":"Block","src":"4587:46:1","statements":[{"expression":{"expression":{"baseExpression":{"id":241,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"4604:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$120_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":243,"indexExpression":{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4611:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$120_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":119,"src":"4604:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":240,"id":245,"nodeType":"Return","src":"4597:29:1"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"4329:170:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":247,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:1","nodeType":"FunctionDefinition","overrides":{"id":237,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:1"},"parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"4534:4:1","nodeType":"VariableDeclaration","scope":247,"src":"4526:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:1"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"4578:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:1"},"scope":416,"src":"4504:129:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[597],"body":{"id":266,"nodeType":"Block","src":"5032:42:1","statements":[{"expression":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"5053:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"5059:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":261,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5042:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"5042:25:1"}]},"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"4639:285:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":267,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":257,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"5025:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":256,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5012:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":259,"kind":"modifierInvocation","modifierName":{"id":255,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":139,"src":"5003:8:1"},"nodeType":"ModifierInvocation","src":"5003:28:1"}],"name":"grantRole","nameLocation":"4938:9:1","nodeType":"FunctionDefinition","overrides":{"id":254,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:1"},"parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"role","nameLocation":"4956:4:1","nodeType":"VariableDeclaration","scope":267,"src":"4948:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"account","nameLocation":"4970:7:1","nodeType":"VariableDeclaration","scope":267,"src":"4962:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:1"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"5032:0:1"},"scope":416,"src":"4929:145:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[605],"body":{"id":286,"nodeType":"Block","src":"5458:43:1","statements":[{"expression":{"arguments":[{"id":282,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5480:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"5486:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":281,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"5468:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5468:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"ExpressionStatement","src":"5468:26:1"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"5080:269:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":287,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":277,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5451:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":276,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5438:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":279,"kind":"modifierInvocation","modifierName":{"id":275,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":139,"src":"5429:8:1"},"nodeType":"ModifierInvocation","src":"5429:28:1"}],"name":"revokeRole","nameLocation":"5363:10:1","nodeType":"FunctionDefinition","overrides":{"id":274,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:1"},"parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"role","nameLocation":"5382:4:1","nodeType":"VariableDeclaration","scope":287,"src":"5374:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"account","nameLocation":"5396:7:1","nodeType":"VariableDeclaration","scope":287,"src":"5388:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:1"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"5458:0:1"},"scope":416,"src":"5354:147:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":309,"nodeType":"Block","src":"6115:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"6133:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":298,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"6144:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6144:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6125:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"ExpressionStatement","src":"6125:83:1"},{"expression":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"6231:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"6237:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6219:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6219:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"6219:26:1"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"5507:526:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":310,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:1","nodeType":"FunctionDefinition","overrides":{"id":294,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:1"},"parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"role","nameLocation":"6068:4:1","nodeType":"VariableDeclaration","scope":310,"src":"6060:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"account","nameLocation":"6082:7:1","nodeType":"VariableDeclaration","scope":310,"src":"6074:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:1"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[],"src":"6115:0:1"},"scope":416,"src":"6038:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":323,"nodeType":"Block","src":"7005:42:1","statements":[{"expression":{"arguments":[{"id":319,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"7026:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":320,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7032:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":318,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7015:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7015:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"7015:25:1"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"6258:674:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":324,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:1","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"role","nameLocation":"6965:4:1","nodeType":"VariableDeclaration","scope":324,"src":"6957:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"account","nameLocation":"6979:7:1","nodeType":"VariableDeclaration","scope":324,"src":"6971:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:1"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"7005:0:1"},"scope":416,"src":"6937:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"7245:174:1","statements":[{"assignments":[333],"declarations":[{"constant":false,"id":333,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:1","nodeType":"VariableDeclaration","scope":351,"src":"7255:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":337,"initialValue":{"arguments":[{"id":335,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7296:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":334,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7283:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:1"},{"expression":{"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":338,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"7311:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$120_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":340,"indexExpression":{"id":339,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7318:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$120_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":119,"src":"7311:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":342,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7336:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":344,"nodeType":"ExpressionStatement","src":"7311:34:1"},{"eventCall":{"arguments":[{"id":346,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7377:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":347,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"7383:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7402:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":345,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"7360:16:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":350,"nodeType":"EmitStatement","src":"7355:57:1"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"7053:114:1","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":352,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:1","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"role","nameLocation":"7203:4:1","nodeType":"VariableDeclaration","scope":352,"src":"7195:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:1","nodeType":"VariableDeclaration","scope":352,"src":"7209:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:1"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"7245:0:1"},"scope":416,"src":"7172:247:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":383,"nodeType":"Block","src":"7655:165:1","statements":[{"condition":{"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:1","subExpression":{"arguments":[{"id":361,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"7678:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":362,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"7684:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":360,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"7670:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7670:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":382,"nodeType":"IfStatement","src":"7665:149:1","trueBody":{"id":381,"nodeType":"Block","src":"7694:120:1","statements":[{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":365,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"7708:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$120_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":367,"indexExpression":{"id":366,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"7715:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$120_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":117,"src":"7708:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":370,"indexExpression":{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"7729:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"ExpressionStatement","src":"7708:36:1"},{"eventCall":{"arguments":[{"id":375,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"7775:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":376,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"7781:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"7790:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7790:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":374,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"7763:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7763:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"EmitStatement","src":"7758:45:1"}]}}]},"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"7425:157:1","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":384,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:1","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"role","nameLocation":"7615:4:1","nodeType":"VariableDeclaration","scope":384,"src":"7607:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"account","nameLocation":"7629:7:1","nodeType":"VariableDeclaration","scope":384,"src":"7621:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:1"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7655:0:1"},"scope":416,"src":"7587:233:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":414,"nodeType":"Block","src":"8060:165:1","statements":[{"condition":{"arguments":[{"id":393,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":394,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":392,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"8074:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8074:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"IfStatement","src":"8070:149:1","trueBody":{"id":412,"nodeType":"Block","src":"8098:121:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":396,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"8112:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$120_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":398,"indexExpression":{"id":397,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$120_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":117,"src":"8112:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8133:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":404,"nodeType":"ExpressionStatement","src":"8112:37:1"},{"eventCall":{"arguments":[{"id":406,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8180:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":407,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8186:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":408,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"8195:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8195:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":405,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"8168:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"EmitStatement","src":"8163:45:1"}]}}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"7826:160:1","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"role","nameLocation":"8020:4:1","nodeType":"VariableDeclaration","scope":415,"src":"8012:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"account","nameLocation":"8034:7:1","nodeType":"VariableDeclaration","scope":415,"src":"8026:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:1"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"8060:0:1"},"scope":416,"src":"7991:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":417,"src":"1932:6295:1","usedErrors":[]}],"src":"108:8120:1"},"id":1},"contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[416],"AccessControlEnumerable":[541],"Context":[6087],"ERC165":[7310],"EnumerableSet":[10585],"IAccessControl":[614],"IAccessControlEnumerable":[639],"IERC165":[7322],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":542,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":418,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:2"},{"absolutePath":"contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":542,"sourceUnit":640,"src":"143:40:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":542,"sourceUnit":417,"src":"184:29:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":542,"sourceUnit":10586,"src":"214:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":423,"name":"IAccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":639,"src":"400:24:2"},"id":424,"nodeType":"InheritanceSpecifier","src":"400:24:2"},{"baseName":{"id":425,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":416,"src":"426:13:2"},"id":426,"nodeType":"InheritanceSpecifier","src":"426:13:2"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"260:94:2","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":541,"linearizedBaseContracts":[541,416,7310,7322,639,614,6087],"name":"AccessControlEnumerable","nameLocation":"373:23:2","nodeType":"ContractDefinition","nodes":[{"id":430,"libraryName":{"id":427,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":10585,"src":"452:13:2"},"nodeType":"UsingForDirective","src":"446:49:2","typeName":{"id":429,"nodeType":"UserDefinedTypeName","pathNode":{"id":428,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"470:24:2"},"referencedDeclaration":10298,"src":"470:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":435,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:2","nodeType":"VariableDeclaration","scope":541,"src":"501:65:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10298_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":434,"keyType":{"id":431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10298_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":433,"nodeType":"UserDefinedTypeName","pathNode":{"id":432,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"520:24:2"},"referencedDeclaration":10298,"src":"520:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[161],"body":{"id":456,"nodeType":"Block","src":"725:121:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"742:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":446,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"762:24:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$639_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$639_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":445,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$639","typeString":"type(contract IAccessControlEnumerable)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":452,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"827:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":450,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$541_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":161,"src":"803:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"803:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":443,"id":455,"nodeType":"Return","src":"735:104:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"573:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":457,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:2","nodeType":"FunctionDefinition","overrides":{"id":440,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:2"},"parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:2","nodeType":"VariableDeclaration","scope":457,"src":"661:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":437,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"719:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":441,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:2"},"scope":541,"src":"634:212:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[630],"body":{"id":475,"nodeType":"Block","src":"1530:52:2","statements":[{"expression":{"arguments":[{"id":472,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1569:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":468,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1547:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10298_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":470,"indexExpression":{"id":469,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"1560:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":10421,"src":"1547:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$10298_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$10298_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1547:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":467,"id":474,"nodeType":"Return","src":"1540:35:2"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"852:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":476,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:2","nodeType":"FunctionDefinition","overrides":{"id":464,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:2"},"parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"role","nameLocation":"1462:4:2","nodeType":"VariableDeclaration","scope":476,"src":"1454:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"index","nameLocation":"1476:5:2","nodeType":"VariableDeclaration","scope":476,"src":"1468:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:2"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"1521:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:2"},"scope":541,"src":"1431:151:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[638],"body":{"id":491,"nodeType":"Block","src":"1839:51:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":485,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1856:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10298_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":487,"indexExpression":{"id":486,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"1869:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":10394,"src":"1856:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$10298_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$10298_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":484,"id":490,"nodeType":"Return","src":"1849:34:2"}]},"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"1588:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":492,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:2","nodeType":"FunctionDefinition","overrides":{"id":481,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:2"},"parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"role","nameLocation":"1786:4:2","nodeType":"VariableDeclaration","scope":492,"src":"1778:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"1830:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:2"},"scope":541,"src":"1750:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[384],"body":{"id":515,"nodeType":"Block","src":"2055:89:2","statements":[{"expression":{"arguments":[{"id":504,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2082:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":505,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"2088:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":501,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$541_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":384,"src":"2065:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"2065:31:2"},{"expression":{"arguments":[{"id":512,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"2129:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":508,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2106:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10298_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":510,"indexExpression":{"id":509,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2119:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":10325,"src":"2106:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$10298_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$10298_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2106:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":514,"nodeType":"ExpressionStatement","src":"2106:31:2"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"1896:77:2","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:2","nodeType":"FunctionDefinition","overrides":{"id":499,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:2"},"parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"role","nameLocation":"2006:4:2","nodeType":"VariableDeclaration","scope":516,"src":"1998:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"account","nameLocation":"2020:7:2","nodeType":"VariableDeclaration","scope":516,"src":"2012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"2055:0:2"},"scope":541,"src":"1978:166:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[415],"body":{"id":539,"nodeType":"Block","src":"2311:93:2","statements":[{"expression":{"arguments":[{"id":528,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2339:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":529,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2345:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":525,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$541_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":415,"src":"2321:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"2321:32:2"},{"expression":{"arguments":[{"id":536,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2389:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":532,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2363:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$10298_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":534,"indexExpression":{"id":533,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2376:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":10352,"src":"2363:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$10298_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$10298_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"ExpressionStatement","src":"2363:34:2"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"2150:78:2","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":540,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:2","nodeType":"FunctionDefinition","overrides":{"id":523,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:2"},"parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"role","nameLocation":"2262:4:2","nodeType":"VariableDeclaration","scope":540,"src":"2254:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"account","nameLocation":"2276:7:2","nodeType":"VariableDeclaration","scope":540,"src":"2268:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:2"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"2311:0:2"},"scope":541,"src":"2233:171:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":542,"src":"355:2051:2","usedErrors":[]}],"src":"118:2289:2"},"id":2},"contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[614]},"id":615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":543,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"119:89:3","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":614,"linearizedBaseContracts":[614],"name":"IAccessControl","nameLocation":"219:14:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"240:292:3","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":553,"name":"RoleAdminChanged","nameLocation":"543:16:3","nodeType":"EventDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:3","nodeType":"VariableDeclaration","scope":553,"src":"560:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":549,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:3","nodeType":"VariableDeclaration","scope":553,"src":"582:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":551,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:3","nodeType":"VariableDeclaration","scope":553,"src":"617:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:3"},"src":"537:110:3"},{"anonymous":false,"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"653:212:3","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":562,"name":"RoleGranted","nameLocation":"876:11:3","nodeType":"EventDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:3","nodeType":"VariableDeclaration","scope":562,"src":"888:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":558,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:3","nodeType":"VariableDeclaration","scope":562,"src":"910:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:3","nodeType":"VariableDeclaration","scope":562,"src":"935:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:3"},"src":"870:89:3"},{"anonymous":false,"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"965:275:3","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":571,"name":"RoleRevoked","nameLocation":"1251:11:3","nodeType":"EventDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:3","nodeType":"VariableDeclaration","scope":571,"src":"1263:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":567,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:3","nodeType":"VariableDeclaration","scope":571,"src":"1285:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:3","nodeType":"VariableDeclaration","scope":571,"src":"1310:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:3"},"src":"1245:89:3"},{"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"1340:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":581,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:3","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"role","nameLocation":"1446:4:3","nodeType":"VariableDeclaration","scope":581,"src":"1438:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"account","nameLocation":"1460:7:3","nodeType":"VariableDeclaration","scope":581,"src":"1452:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:3"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":581,"src":"1492:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":578,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:3"},"scope":614,"src":"1421:77:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"1504:184:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":589,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:3","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"role","nameLocation":"1723:4:3","nodeType":"VariableDeclaration","scope":589,"src":"1715:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:3"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":589,"src":"1752:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:3"},"scope":614,"src":"1693:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"1767:239:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":597,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:3","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"role","nameLocation":"2038:4:3","nodeType":"VariableDeclaration","scope":597,"src":"2030:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"account","nameLocation":"2052:7:3","nodeType":"VariableDeclaration","scope":597,"src":"2044:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:3"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"2069:0:3"},"scope":614,"src":"2011:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"2076:223:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":605,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:3","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"role","nameLocation":"2332:4:3","nodeType":"VariableDeclaration","scope":605,"src":"2324:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"account","nameLocation":"2346:7:3","nodeType":"VariableDeclaration","scope":605,"src":"2338:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:3"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"2363:0:3"},"scope":614,"src":"2304:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"2370:480:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:3","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"role","nameLocation":"2885:4:3","nodeType":"VariableDeclaration","scope":613,"src":"2877:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"account","nameLocation":"2899:7:3","nodeType":"VariableDeclaration","scope":613,"src":"2891:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:3"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"2916:0:3"},"scope":614,"src":"2855:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":615,"src":"209:2710:3","usedErrors":[]}],"src":"94:2826:3"},"id":3},"contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[614],"IAccessControlEnumerable":[639]},"id":640,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":616,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:4"},{"absolutePath":"contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":640,"sourceUnit":615,"src":"129:30:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":619,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":614,"src":"299:14:4"},"id":620,"nodeType":"InheritanceSpecifier","src":"299:14:4"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"161:99:4","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":639,"linearizedBaseContracts":[639,614],"name":"IAccessControlEnumerable","nameLocation":"271:24:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"320:574:4","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":630,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:4","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"role","nameLocation":"930:4:4","nodeType":"VariableDeclaration","scope":630,"src":"922:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"index","nameLocation":"944:5:4","nodeType":"VariableDeclaration","scope":630,"src":"936:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:4"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"974:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:4"},"scope":639,"src":"899:84:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"989:157:4","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":638,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:4","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"role","nameLocation":"1187:4:4","nodeType":"VariableDeclaration","scope":638,"src":"1179:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:4"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":638,"src":"1216:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:4"},"scope":639,"src":"1151:74:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":640,"src":"261:966:4","usedErrors":[]}],"src":"104:1124:4"},"id":4},"contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[717]},"id":718,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":641,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"135:132:5","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":717,"linearizedBaseContracts":[717],"name":"IVotes","nameLocation":"278:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"291:71:5","text":" @dev Emitted when an account changes their delegate."},"id":651,"name":"DelegateChanged","nameLocation":"373:15:5","nodeType":"EventDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:5","nodeType":"VariableDeclaration","scope":651,"src":"389:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:5","nodeType":"VariableDeclaration","scope":651,"src":"416:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:5","nodeType":"VariableDeclaration","scope":651,"src":"446:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:5"},"src":"367:107:5"},{"anonymous":false,"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"480:124:5","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":660,"name":"DelegateVotesChanged","nameLocation":"615:20:5","nodeType":"EventDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:5","nodeType":"VariableDeclaration","scope":660,"src":"636:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:5","nodeType":"VariableDeclaration","scope":660,"src":"662:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":658,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:5","nodeType":"VariableDeclaration","scope":660,"src":"687:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:5"},"src":"609:98:5"},{"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"713:79:5","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":668,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:5","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"account","nameLocation":"823:7:5","nodeType":"VariableDeclaration","scope":668,"src":"815:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:5"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"855:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:5"},"scope":717,"src":"797:67:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"870:230:5","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:5","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"account","nameLocation":"1135:7:5","nodeType":"VariableDeclaration","scope":678,"src":"1127:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:5","nodeType":"VariableDeclaration","scope":678,"src":"1144:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:5"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"1186:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:5"},"scope":717,"src":"1105:90:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"1201:481:5","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:5","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:5","nodeType":"VariableDeclaration","scope":686,"src":"1715:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:5"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"1757:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:5"},"scope":717,"src":"1687:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"1772:71:5","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":694,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:5","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"account","nameLocation":"1875:7:5","nodeType":"VariableDeclaration","scope":694,"src":"1867:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:5"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"1907:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:5"},"scope":717,"src":"1848:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"1922:71:5","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":700,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:5","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:5","nodeType":"VariableDeclaration","scope":700,"src":"2016:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:5"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"2043:0:5"},"scope":717,"src":"1998:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":701,"nodeType":"StructuredDocumentation","src":"2050:67:5","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:5","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:5","nodeType":"VariableDeclaration","scope":716,"src":"2145:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:5","nodeType":"VariableDeclaration","scope":716,"src":"2164:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:5","nodeType":"VariableDeclaration","scope":716,"src":"2179:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"v","nameLocation":"2201:1:5","nodeType":"VariableDeclaration","scope":716,"src":"2195:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":708,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"r","nameLocation":"2212:1:5","nodeType":"VariableDeclaration","scope":716,"src":"2204:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"s","nameLocation":"2223:1:5","nodeType":"VariableDeclaration","scope":716,"src":"2215:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:5"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"2234:0:5"},"scope":717,"src":"2122:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":718,"src":"268:1969:5","usedErrors":[]}],"src":"110:2128:5"},"id":5},"contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[6065],"Context":[6087],"Counters":[6161],"ECDSA":[7082],"EIP712":[7286],"IERC5267":[1352],"IERC5805":[1361],"IERC6372":[1376],"IVotes":[717],"Math":[8188],"SafeCast":[9729],"ShortString":[6166],"ShortStrings":[6377],"SignedMath":[9834],"StorageSlot":[6487],"Strings":[6716],"Votes":[1268]},"id":1269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":719,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:6"},{"absolutePath":"contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1269,"sourceUnit":1362,"src":"134:39:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Context.sol","file":"../../utils/Context.sol","id":721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1269,"sourceUnit":6088,"src":"174:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Counters.sol","file":"../../utils/Counters.sol","id":722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1269,"sourceUnit":6162,"src":"208:34:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Checkpoints.sol","file":"../../utils/Checkpoints.sol","id":723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1269,"sourceUnit":6066,"src":"243:37:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1269,"sourceUnit":7287,"src":"281:45:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":726,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":6087,"src":"1714:7:6"},"id":727,"nodeType":"InheritanceSpecifier","src":"1714:7:6"},{"baseName":{"id":728,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":7286,"src":"1723:6:6"},"id":729,"nodeType":"InheritanceSpecifier","src":"1723:6:6"},{"baseName":{"id":730,"name":"IERC5805","nodeType":"IdentifierPath","referencedDeclaration":1361,"src":"1731:8:6"},"id":731,"nodeType":"InheritanceSpecifier","src":"1731:8:6"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"328:1358:6","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_beforeTokenTransfer}).\n _Available since v4.5._"},"fullyImplemented":false,"id":1268,"linearizedBaseContracts":[1268,1361,717,1376,7286,1352,6087],"name":"Votes","nameLocation":"1705:5:6","nodeType":"ContractDefinition","nodes":[{"id":735,"libraryName":{"id":732,"name":"Checkpoints","nodeType":"IdentifierPath","referencedDeclaration":6065,"src":"1752:11:6"},"nodeType":"UsingForDirective","src":"1746:43:6","typeName":{"id":734,"nodeType":"UserDefinedTypeName","pathNode":{"id":733,"name":"Checkpoints.Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"1768:20:6"},"referencedDeclaration":5065,"src":"1768:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}}},{"id":739,"libraryName":{"id":736,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"1800:8:6"},"nodeType":"UsingForDirective","src":"1794:36:6","typeName":{"id":738,"nodeType":"UserDefinedTypeName","pathNode":{"id":737,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"1813:16:6"},"referencedDeclaration":6093,"src":"1813:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":true,"id":744,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1861:20:6","nodeType":"VariableDeclaration","scope":1268,"src":"1836:127:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1836:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1902:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":741,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1892:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1892:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":748,"mutability":"mutable","name":"_delegation","nameLocation":"2006:11:6","nodeType":"VariableDeclaration","scope":1268,"src":"1970:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":747,"keyType":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1970:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1989:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"2024:67:6","text":"@custom:oz-retyped-from mapping(address => Checkpoints.History)"},"id":754,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2145:20:6","nodeType":"VariableDeclaration","scope":1268,"src":"2096:69:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace224_$5065_storage_$","typeString":"mapping(address => struct Checkpoints.Trace224)"},"typeName":{"id":753,"keyType":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"2104:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2096:40:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace224_$5065_storage_$","typeString":"mapping(address => struct Checkpoints.Trace224)"},"valueType":{"id":752,"nodeType":"UserDefinedTypeName","pathNode":{"id":751,"name":"Checkpoints.Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"2115:20:6"},"referencedDeclaration":5065,"src":"2115:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}}},"visibility":"private"},{"constant":false,"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"2172:47:6","text":"@custom:oz-retyped-from Checkpoints.History"},"id":758,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2253:17:6","nodeType":"VariableDeclaration","scope":1268,"src":"2224:46:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":757,"nodeType":"UserDefinedTypeName","pathNode":{"id":756,"name":"Checkpoints.Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"2224:20:6"},"referencedDeclaration":5065,"src":"2224:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"private"},{"constant":false,"id":763,"mutability":"mutable","name":"_nonces","nameLocation":"2322:7:6","nodeType":"VariableDeclaration","scope":1268,"src":"2277:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$6093_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":762,"keyType":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"2285:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2277:36:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$6093_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":761,"nodeType":"UserDefinedTypeName","pathNode":{"id":760,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"2296:16:6"},"referencedDeclaration":6093,"src":"2296:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"baseFunctions":[1369],"body":{"id":776,"nodeType":"Block","src":"2610:55:6","statements":[{"expression":{"arguments":[{"expression":{"id":772,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2645:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2645:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":770,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"2627:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":8841,"src":"2627:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2627:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":769,"id":775,"nodeType":"Return","src":"2620:38:6"}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"2336:206:6","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":777,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2556:5:6","nodeType":"FunctionDefinition","overrides":{"id":766,"nodeType":"OverrideSpecifier","overrides":[],"src":"2584:8:6"},"parameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"2561:2:6"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"2602:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":767,"name":"uint48","nodeType":"ElementaryTypeName","src":"2602:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2601:8:6"},"scope":1268,"src":"2547:118:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1375],"body":{"id":795,"nodeType":"Block","src":"2895:174:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":785,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2962:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2962:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":787,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2973:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2973:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2962:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2987:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bdc97e4de8eceb1dda918dca241487decadaab992a96808ef37489fff654c08","typeString":"literal_string \"Votes: broken clock mode\""},"value":"Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bdc97e4de8eceb1dda918dca241487decadaab992a96808ef37489fff654c08","typeString":"literal_string \"Votes: broken clock mode\""}],"id":784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2954:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2954:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"2954:60:6"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3031:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":783,"id":794,"nodeType":"Return","src":"3024:38:6"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"2671:91:6","text":" @dev Machine-readable description of the clock as specified in EIP-6372."},"functionSelector":"4bf5d7e9","id":796,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2829:10:6","nodeType":"FunctionDefinition","overrides":{"id":780,"nodeType":"OverrideSpecifier","overrides":[],"src":"2862:8:6"},"parameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"2839:2:6"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"2880:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":781,"name":"string","nodeType":"ElementaryTypeName","src":"2880:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2879:15:6"},"scope":1268,"src":"2820:249:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[668],"body":{"id":811,"nodeType":"Block","src":"3241:62:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":805,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"3258:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace224_$5065_storage_$","typeString":"mapping(address => struct Checkpoints.Trace224 storage ref)"}},"id":807,"indexExpression":{"id":806,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"3279:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3258:29:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":5290,"src":"3258:36:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace224_$5065_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_Trace224_$5065_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer) view returns (uint224)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3258:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":804,"id":810,"nodeType":"Return","src":"3251:45:6"}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"3075:79:6","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":812,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3168:8:6","nodeType":"FunctionDefinition","overrides":{"id":801,"nodeType":"OverrideSpecifier","overrides":[],"src":"3214:8:6"},"parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"account","nameLocation":"3185:7:6","nodeType":"VariableDeclaration","scope":812,"src":"3177:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"3177:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3176:17:6"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"3232:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3231:9:6"},"scope":1268,"src":"3159:144:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":841,"nodeType":"Block","src":"3793:163:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3811:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":825,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3823:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3823:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3811:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a20667574757265206c6f6f6b7570","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3832:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_806a59097ab42099d6528e158021f4e3f63b164a7e4fc12cba1dc2ce79df21cc","typeString":"literal_string \"Votes: future lookup\""},"value":"Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_806a59097ab42099d6528e158021f4e3f63b164a7e4fc12cba1dc2ce79df21cc","typeString":"literal_string \"Votes: future lookup\""}],"id":823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3803:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3803:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"3803:52:6"},{"expression":{"arguments":[{"arguments":[{"id":837,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3938:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"3920:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"3920:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3920:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":831,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"3872:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace224_$5065_storage_$","typeString":"mapping(address => struct Checkpoints.Trace224 storage ref)"}},"id":833,"indexExpression":{"id":832,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3893:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3872:29:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":5260,"src":"3872:47:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace224_$5065_storage_ptr_$_t_uint32_$returns$_t_uint224_$bound_to$_t_struct$_Trace224_$5065_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,uint32) view returns (uint224)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3872:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":822,"id":840,"nodeType":"Return","src":"3865:84:6"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"3309:374:6","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":842,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3697:12:6","nodeType":"FunctionDefinition","overrides":{"id":819,"nodeType":"OverrideSpecifier","overrides":[],"src":"3766:8:6"},"parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"account","nameLocation":"3718:7:6","nodeType":"VariableDeclaration","scope":842,"src":"3710:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"3710:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"timepoint","nameLocation":"3735:9:6","nodeType":"VariableDeclaration","scope":842,"src":"3727:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3727:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3709:36:6"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"3784:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"3784:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3783:9:6"},"scope":1268,"src":"3688:268:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":867,"nodeType":"Block","src":"4686:151:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"4704:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":853,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"4716:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4716:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4704:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a20667574757265206c6f6f6b7570","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4725:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_806a59097ab42099d6528e158021f4e3f63b164a7e4fc12cba1dc2ce79df21cc","typeString":"literal_string \"Votes: future lookup\""},"value":"Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_806a59097ab42099d6528e158021f4e3f63b164a7e4fc12cba1dc2ce79df21cc","typeString":"literal_string \"Votes: future lookup\""}],"id":851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4696:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4696:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"4696:52:6"},{"expression":{"arguments":[{"arguments":[{"id":863,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"4819:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":861,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"4801:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"4801:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":859,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4765:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":5260,"src":"4765:35:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace224_$5065_storage_ptr_$_t_uint32_$returns$_t_uint224_$bound_to$_t_struct$_Trace224_$5065_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,uint32) view returns (uint224)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4765:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":850,"id":866,"nodeType":"Return","src":"4758:72:6"}]},"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"3962:625:6","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":868,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4601:18:6","nodeType":"FunctionDefinition","overrides":{"id":847,"nodeType":"OverrideSpecifier","overrides":[],"src":"4659:8:6"},"parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"timepoint","nameLocation":"4628:9:6","nodeType":"VariableDeclaration","scope":868,"src":"4620:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4620:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4619:19:6"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"4677:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4676:9:6"},"scope":1268,"src":"4592:245:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":878,"nodeType":"Block","src":"4981:50:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":874,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4998:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},"id":875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":5290,"src":"4998:24:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace224_$5065_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_Trace224_$5065_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer) view returns (uint224)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4998:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":873,"id":877,"nodeType":"Return","src":"4991:33:6"}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"4843:66:6","text":" @dev Returns the current total supply of votes."},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"4923:15:6","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"4938:2:6"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"4972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4971:9:6"},"scope":1268,"src":"4914:117:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[694],"body":{"id":892,"nodeType":"Block","src":"5196:44:6","statements":[{"expression":{"baseExpression":{"id":888,"name":"_delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"5213:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":890,"indexExpression":{"id":889,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"5225:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5213:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":887,"id":891,"nodeType":"Return","src":"5206:27:6"}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"5037:71:6","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":893,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5122:9:6","nodeType":"FunctionDefinition","overrides":{"id":884,"nodeType":"OverrideSpecifier","overrides":[],"src":"5169:8:6"},"parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"account","nameLocation":"5140:7:6","nodeType":"VariableDeclaration","scope":893,"src":"5132:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"5132:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5131:17:6"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":893,"src":"5187:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"5187:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5186:9:6"},"scope":1268,"src":"5113:127:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[700],"body":{"id":910,"nodeType":"Block","src":"5383:86:6","statements":[{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"account","nameLocation":"5401:7:6","nodeType":"VariableDeclaration","scope":910,"src":"5393:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":902,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"5411:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5411:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5393:30:6"},{"expression":{"arguments":[{"id":906,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5443:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"5452:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":905,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"5433:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5433:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"5433:29:6"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"5246:71:6","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":911,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5331:8:6","nodeType":"FunctionDefinition","overrides":{"id":898,"nodeType":"OverrideSpecifier","overrides":[],"src":"5374:8:6"},"parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"delegatee","nameLocation":"5348:9:6","nodeType":"VariableDeclaration","scope":911,"src":"5340:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5339:19:6"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"5383:0:6"},"scope":1268,"src":"5322:147:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":970,"nodeType":"Block","src":"5729:382:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":929,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5747:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5747:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":931,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"5766:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5747:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a207369676e61747572652065787069726564","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","typeString":"literal_string \"Votes: signature expired\""},"value":"Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d5ff3f347872d51f9a2d63fc6e49268c6b2f830105a4897008d3883d68bc66f","typeString":"literal_string \"Votes: signature expired\""}],"id":928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5739:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5739:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"5739:62:6"},{"assignments":[937],"declarations":[{"constant":false,"id":937,"mutability":"mutable","name":"signer","nameLocation":"5819:6:6","nodeType":"VariableDeclaration","scope":970,"src":"5811:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"5811:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":955,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":944,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"5893:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":945,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"5915:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"5926:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":947,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"5933:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":942,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5882:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5882:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5882:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":941,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5872:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5872:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":940,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7238,"src":"5855:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5855:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":951,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5956:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":952,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"5971:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":953,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"5986:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":938,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"5828:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$7082_$","typeString":"type(library ECDSA)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":7017,"src":"5828:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5828:169:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5811:186:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"6015:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":959,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"6034:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":958,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"6024:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6024:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6015:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7465733a20696e76616c6964206e6f6e6365","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6043:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","typeString":"literal_string \"Votes: invalid nonce\""},"value":"Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13ff7ccc79996334a065c9426876e6554e1ae6a3f574e0ced02fc6062a794b0c","typeString":"literal_string \"Votes: invalid nonce\""}],"id":956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6007:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6007:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"ExpressionStatement","src":"6007:59:6"},{"expression":{"arguments":[{"id":966,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"6086:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6094:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":965,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6076:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6076:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"ExpressionStatement","src":"6076:28:6"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"5475:67:6","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":971,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5556:13:6","nodeType":"FunctionDefinition","overrides":{"id":926,"nodeType":"OverrideSpecifier","overrides":[],"src":"5720:8:6"},"parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"delegatee","nameLocation":"5587:9:6","nodeType":"VariableDeclaration","scope":971,"src":"5579:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"5579:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"nonce","nameLocation":"5614:5:6","nodeType":"VariableDeclaration","scope":971,"src":"5606:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5606:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"expiry","nameLocation":"5637:6:6","nodeType":"VariableDeclaration","scope":971,"src":"5629:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"5629:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"v","nameLocation":"5659:1:6","nodeType":"VariableDeclaration","scope":971,"src":"5653:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":919,"name":"uint8","nodeType":"ElementaryTypeName","src":"5653:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"r","nameLocation":"5678:1:6","nodeType":"VariableDeclaration","scope":971,"src":"5670:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5670:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"s","nameLocation":"5697:1:6","nodeType":"VariableDeclaration","scope":971,"src":"5689:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5689:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5569:135:6"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"5729:0:6"},"scope":1268,"src":"5547:564:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1005,"nodeType":"Block","src":"6361:241:6","statements":[{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"oldDelegate","nameLocation":"6379:11:6","nodeType":"VariableDeclaration","scope":1005,"src":"6371:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"6371:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[{"id":982,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6403:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":981,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"6393:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6393:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6371:40:6"},{"expression":{"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":985,"name":"_delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"6421:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":987,"indexExpression":{"id":986,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6433:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6421:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":988,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"6444:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6421:32:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":990,"nodeType":"ExpressionStatement","src":"6421:32:6"},{"eventCall":{"arguments":[{"id":992,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6485:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":993,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"6494:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"6507:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":991,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6469:15:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6469:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"EmitStatement","src":"6464:53:6"},{"expression":{"arguments":[{"id":998,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"6546:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"6559:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1001,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6586:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1000,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6570:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6570:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6527:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6527:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"6527:68:6"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"6117:167:6","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6298:9:6","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"account","nameLocation":"6316:7:6","nodeType":"VariableDeclaration","scope":1006,"src":"6308:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"6308:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"delegatee","nameLocation":"6333:9:6","nodeType":"VariableDeclaration","scope":1006,"src":"6325:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"6325:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6307:36:6"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[],"src":"6361:0:6"},"scope":1268,"src":"6289:313:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1060,"nodeType":"Block","src":"6925:310:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6939:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6955:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6947:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"6947:7:6","typeDescriptions":{}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6947:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6939:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1032,"nodeType":"IfStatement","src":"6935:107:6","trueBody":{"id":1031,"nodeType":"Block","src":"6959:83:6","statements":[{"expression":{"arguments":[{"id":1023,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"6979:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},{"id":1024,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6998:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"}},{"arguments":[{"id":1027,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7023:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1025,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"7004:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":8291,"src":"7004:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7004:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1022,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"6973:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace224_$5065_storage_ptr_$_t_function_internal_view$_t_uint224_$_t_uint224_$returns$_t_uint224_$_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,function (uint224,uint224) view returns (uint224),uint224) returns (uint224,uint224)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6973:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"id":1030,"nodeType":"ExpressionStatement","src":"6973:58:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7055:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7069:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:6","typeDescriptions":{}}},"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7061:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7055:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"7051:110:6","trueBody":{"id":1048,"nodeType":"Block","src":"7073:88:6","statements":[{"expression":{"arguments":[{"id":1040,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7093:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},{"id":1041,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"7112:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"}},{"arguments":[{"id":1044,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7142:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1042,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"7123:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":8291,"src":"7123:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7123:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1039,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"7087:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace224_$5065_storage_ptr_$_t_function_internal_view$_t_uint224_$_t_uint224_$returns$_t_uint224_$_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,function (uint224,uint224) view returns (uint224),uint224) returns (uint224,uint224)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7087:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"id":1047,"nodeType":"ExpressionStatement","src":"7087:63:6"}]}},{"expression":{"arguments":[{"arguments":[{"id":1052,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7199:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1051,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"7189:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7189:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1055,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7216:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1054,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"7206:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7206:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7221:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1050,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7170:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7170:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"7170:58:6"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"6608:223:6","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"6845:20:6","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"from","nameLocation":"6874:4:6","nodeType":"VariableDeclaration","scope":1061,"src":"6866:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"6866:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"to","nameLocation":"6888:2:6","nodeType":"VariableDeclaration","scope":1061,"src":"6880:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"6880:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"amount","nameLocation":"6900:6:6","nodeType":"VariableDeclaration","scope":1061,"src":"6892:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"6892:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6865:42:6"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"6925:0:6"},"scope":1268,"src":"6836:399:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"7399:702:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"7413:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1072,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"7421:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7413:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1074,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7427:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7436:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7427:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7413:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1137,"nodeType":"IfStatement","src":"7409:686:6","trueBody":{"id":1136,"nodeType":"Block","src":"7439:656:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1078,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"7457:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7473:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7465:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"7465:7:6","typeDescriptions":{}}},"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7465:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7457:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"7453:315:6","trueBody":{"id":1105,"nodeType":"Block","src":"7477:291:6","statements":[{"assignments":[1085,1087],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"oldValue","nameLocation":"7504:8:6","nodeType":"VariableDeclaration","scope":1105,"src":"7496:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"7496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"newValue","nameLocation":"7522:8:6","nodeType":"VariableDeclaration","scope":1105,"src":"7514:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"7514:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1098,"initialValue":{"arguments":[{"baseExpression":{"id":1089,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7561:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace224_$5065_storage_$","typeString":"mapping(address => struct Checkpoints.Trace224 storage ref)"}},"id":1091,"indexExpression":{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"7582:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7561:26:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},{"id":1092,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"7609:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"}},{"arguments":[{"id":1095,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7659:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1093,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"7640:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":8291,"src":"7640:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7640:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1088,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"7534:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace224_$5065_storage_ptr_$_t_function_internal_view$_t_uint224_$_t_uint224_$returns$_t_uint224_$_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,function (uint224,uint224) view returns (uint224),uint224) returns (uint224,uint224)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7534:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"nodeType":"VariableDeclarationStatement","src":"7495:189:6"},{"eventCall":{"arguments":[{"id":1100,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"7728:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"7734:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1102,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"7744:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1099,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"7707:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7707:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"EmitStatement","src":"7702:51:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"7785:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7799:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7791:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"7791:7:6","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7791:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7785:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"nodeType":"IfStatement","src":"7781:304:6","trueBody":{"id":1134,"nodeType":"Block","src":"7803:282:6","statements":[{"assignments":[1114,1116],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"oldValue","nameLocation":"7830:8:6","nodeType":"VariableDeclaration","scope":1134,"src":"7822:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"7822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"newValue","nameLocation":"7848:8:6","nodeType":"VariableDeclaration","scope":1134,"src":"7840:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"7840:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1127,"initialValue":{"arguments":[{"baseExpression":{"id":1118,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"7887:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace224_$5065_storage_$","typeString":"mapping(address => struct Checkpoints.Trace224 storage ref)"}},"id":1120,"indexExpression":{"id":1119,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"7908:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7887:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"}},{"id":1121,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"7933:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"}},{"arguments":[{"id":1124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7978:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1122,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"7959:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":8291,"src":"7959:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7959:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace224_$5065_storage","typeString":"struct Checkpoints.Trace224 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) pure returns (uint224)"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1117,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"7860:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace224_$5065_storage_ptr_$_t_function_internal_view$_t_uint224_$_t_uint224_$returns$_t_uint224_$_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,function (uint224,uint224) view returns (uint224),uint224) returns (uint224,uint224)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7860:143:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"nodeType":"VariableDeclarationStatement","src":"7821:182:6"},{"eventCall":{"arguments":[{"id":1129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"8047:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1130,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"8051:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1131,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"8061:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1128,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8026:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8026:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"EmitStatement","src":"8021:49:6"}]}}]}}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"7241:75:6","text":" @dev Moves delegated votes from one delegate to another."},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7330:18:6","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"from","nameLocation":"7357:4:6","nodeType":"VariableDeclaration","scope":1139,"src":"7349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"7349:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"to","nameLocation":"7371:2:6","nodeType":"VariableDeclaration","scope":1139,"src":"7363:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"7363:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"amount","nameLocation":"7383:6:6","nodeType":"VariableDeclaration","scope":1139,"src":"7375:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7348:42:6"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[],"src":"7399:0:6"},"scope":1268,"src":"7321:780:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1176,"nodeType":"Block","src":"8292:89:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1165,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8338:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8338:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":1163,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"8320:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"8320:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8320:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1169,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8351:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":5290,"src":"8351:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace224_$5065_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_Trace224_$5065_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer) view returns (uint224)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8351:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":1172,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"8367:5:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1168,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"8348:2:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) view returns (uint224)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8348:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"expression":{"id":1161,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8309:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":5093,"src":"8309:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace224_$5065_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$bound_to$_t_struct$_Trace224_$5065_storage_ptr_$","typeString":"function (struct Checkpoints.Trace224 storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8309:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":1160,"id":1175,"nodeType":"Return","src":"8302:72:6"}]},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"8116:5:6","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"store","nameLocation":"8160:5:6","nodeType":"VariableDeclaration","scope":1177,"src":"8131:34:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":1141,"nodeType":"UserDefinedTypeName","pathNode":{"id":1140,"name":"Checkpoints.Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"8131:20:6"},"referencedDeclaration":5065,"src":"8131:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"op","nameLocation":"8225:2:6","nodeType":"VariableDeclaration","scope":1177,"src":"8175:52:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) view returns (uint224)"},"typeName":{"id":1151,"nodeType":"FunctionTypeName","parameterTypes":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"8184:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1143,"name":"uint224","nodeType":"ElementaryTypeName","src":"8184:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"8193:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1145,"name":"uint224","nodeType":"ElementaryTypeName","src":"8193:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8183:18:6"},"returnParameterTypes":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"8216:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1148,"name":"uint224","nodeType":"ElementaryTypeName","src":"8216:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8215:9:6"},"src":"8175:52:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint224_$_t_uint224_$returns$_t_uint224_$","typeString":"function (uint224,uint224) view returns (uint224)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"delta","nameLocation":"8245:5:6","nodeType":"VariableDeclaration","scope":1177,"src":"8237:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1153,"name":"uint224","nodeType":"ElementaryTypeName","src":"8237:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8121:135:6"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"8274:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1156,"name":"uint224","nodeType":"ElementaryTypeName","src":"8274:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"8283:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1158,"name":"uint224","nodeType":"ElementaryTypeName","src":"8283:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8273:18:6"},"scope":1268,"src":"8107:274:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1190,"nodeType":"Block","src":"8454:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8471:1:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1187,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8475:1:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"8471:5:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1185,"id":1189,"nodeType":"Return","src":"8464:12:6"}]},"id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"8396:4:6","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"a","nameLocation":"8409:1:6","nodeType":"VariableDeclaration","scope":1191,"src":"8401:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1178,"name":"uint224","nodeType":"ElementaryTypeName","src":"8401:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"b","nameLocation":"8420:1:6","nodeType":"VariableDeclaration","scope":1191,"src":"8412:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1180,"name":"uint224","nodeType":"ElementaryTypeName","src":"8412:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8400:22:6"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"8445:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1183,"name":"uint224","nodeType":"ElementaryTypeName","src":"8445:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8444:9:6"},"scope":1268,"src":"8387:96:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1204,"nodeType":"Block","src":"8561:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint224","typeString":"uint224"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"8578:1:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"8582:1:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"8578:5:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1199,"id":1203,"nodeType":"Return","src":"8571:12:6"}]},"id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"8498:9:6","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"a","nameLocation":"8516:1:6","nodeType":"VariableDeclaration","scope":1205,"src":"8508:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1192,"name":"uint224","nodeType":"ElementaryTypeName","src":"8508:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"b","nameLocation":"8527:1:6","nodeType":"VariableDeclaration","scope":1205,"src":"8519:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1194,"name":"uint224","nodeType":"ElementaryTypeName","src":"8519:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8507:22:6"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1205,"src":"8552:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1197,"name":"uint224","nodeType":"ElementaryTypeName","src":"8552:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8551:9:6"},"scope":1268,"src":"8489:101:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1233,"nodeType":"Block","src":"8781:126:6","statements":[{"assignments":[1217],"declarations":[{"constant":false,"id":1217,"mutability":"mutable","name":"nonce","nameLocation":"8816:5:6","nodeType":"VariableDeclaration","scope":1233,"src":"8791:30:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1216,"nodeType":"UserDefinedTypeName","pathNode":{"id":1215,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"8791:16:6"},"referencedDeclaration":6093,"src":"8791:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1221,"initialValue":{"baseExpression":{"id":1218,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"8824:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$6093_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1220,"indexExpression":{"id":1219,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"8832:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8824:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8791:47:6"},{"expression":{"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1222,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"8848:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1223,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"8858:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":6105,"src":"8858:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$6093_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$6093_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8858:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8848:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1227,"nodeType":"ExpressionStatement","src":"8848:25:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1228,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"8883:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":6119,"src":"8883:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$6093_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$6093_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8883:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"8883:17:6"}]},"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"8596:103:6","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"8713:9:6","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"owner","nameLocation":"8731:5:6","nodeType":"VariableDeclaration","scope":1234,"src":"8723:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"8723:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8722:15:6"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"current","nameLocation":"8772:7:6","nodeType":"VariableDeclaration","scope":1234,"src":"8764:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"8764:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8763:17:6"},"scope":1268,"src":"8704:203:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"9036:48:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1242,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9053:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$6093_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1244,"indexExpression":{"id":1243,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"9061:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9053:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter storage ref"}},"id":1245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":6105,"src":"9053:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$6093_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$6093_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9053:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1241,"id":1247,"nodeType":"Return","src":"9046:31:6"}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"8913:49:6","text":" @dev Returns an address nonce."},"functionSelector":"7ecebe00","id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"8976:6:6","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"owner","nameLocation":"8991:5:6","nodeType":"VariableDeclaration","scope":1249,"src":"8983:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"8983:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8982:15:6"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"9027:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"9027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9026:9:6"},"scope":1268,"src":"8967:117:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1258,"nodeType":"Block","src":"9281:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1255,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"9298:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9298:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1254,"id":1257,"nodeType":"Return","src":"9291:27:6"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"9090:73:6","text":" @dev Returns the contract's {EIP712} domain separator."},"functionSelector":"3644e515","id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"9230:16:6","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[],"src":"9246:2:6"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"9272:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9272:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9271:9:6"},"scope":1268,"src":"9221:104:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"9331:72:6","text":" @dev Must return the voting units held by an account."},"id":1267,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9417:15:6","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"9433:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9432:9:6"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"9473:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"9473:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9472:9:6"},"scope":1268,"src":"9408:74:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1269,"src":"1687:7797:6","usedErrors":[6174,6176]}],"src":"109:9376:6"},"id":6},"contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[7322]},"id":1272,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1270,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:7"},{"absolutePath":"contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1272,"sourceUnit":7323,"src":"116:44:7","symbolAliases":[],"unitAlias":""}],"src":"91:70:7"},"id":7},"contracts/interfaces/IERC2309.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC2309.sol","exportedSymbols":{"IERC2309":[1286]},"id":1287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1273,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC2309","contractDependencies":[],"contractKind":"interface","documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"132:95:8","text":" @dev ERC-2309: ERC-721 Consecutive Transfer Extension.\n _Available since v4.8._"},"fullyImplemented":true,"id":1286,"linearizedBaseContracts":[1286],"name":"IERC2309","nameLocation":"238:8:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"253:132:8","text":" @dev Emitted when the tokens from `fromTokenId` to `toTokenId` are transferred from `fromAddress` to `toAddress`."},"id":1285,"name":"ConsecutiveTransfer","nameLocation":"396:19:8","nodeType":"EventDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"indexed":true,"mutability":"mutable","name":"fromTokenId","nameLocation":"441:11:8","nodeType":"VariableDeclaration","scope":1285,"src":"425:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1279,"indexed":false,"mutability":"mutable","name":"toTokenId","nameLocation":"470:9:8","nodeType":"VariableDeclaration","scope":1285,"src":"462:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1281,"indexed":true,"mutability":"mutable","name":"fromAddress","nameLocation":"505:11:8","nodeType":"VariableDeclaration","scope":1285,"src":"489:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"489:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"indexed":true,"mutability":"mutable","name":"toAddress","nameLocation":"542:9:8","nodeType":"VariableDeclaration","scope":1285,"src":"526:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"415:142:8"},"src":"390:168:8"}],"scope":1287,"src":"228:332:8","usedErrors":[]}],"src":"107:454:8"},"id":8},"contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[7322],"IERC2981":[1305]},"id":1306,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1288,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:9"},{"absolutePath":"contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1306,"sourceUnit":7323,"src":"132:44:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1291,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"490:7:9"},"id":1292,"nodeType":"InheritanceSpecifier","src":"490:7:9"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"178:289:9","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"},"fullyImplemented":false,"id":1305,"linearizedBaseContracts":[1305,7322],"name":"IERC2981","nameLocation":"478:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"504:231:9","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."},"functionSelector":"2a55205a","id":1304,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"749:11:9","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"tokenId","nameLocation":"778:7:9","nodeType":"VariableDeclaration","scope":1304,"src":"770:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"770:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"salePrice","nameLocation":"803:9:9","nodeType":"VariableDeclaration","scope":1304,"src":"795:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"760:58:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"receiver","nameLocation":"850:8:9","nodeType":"VariableDeclaration","scope":1304,"src":"842:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"royaltyAmount","nameLocation":"868:13:9","nodeType":"VariableDeclaration","scope":1304,"src":"860:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"841:41:9"},"scope":1305,"src":"740:143:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1306,"src":"468:417:9","usedErrors":[]}],"src":"107:779:9"},"id":9},"contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[7322],"IERC4906":[1327],"IERC721":[2530]},"id":1328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1307,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"absolutePath":"contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1328,"sourceUnit":1272,"src":"132:23:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":1309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1328,"sourceUnit":1380,"src":"156:23:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1311,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"248:7:10"},"id":1312,"nodeType":"InheritanceSpecifier","src":"248:7:10"},{"baseName":{"id":1313,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"257:7:10"},"id":1314,"nodeType":"InheritanceSpecifier","src":"257:7:10"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"181:45:10","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":1327,"linearizedBaseContracts":[1327,2530,7322],"name":"IERC4906","nameLocation":"236:8:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"271:201:10","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"id":1319,"name":"MetadataUpdate","nameLocation":"483:14:10","nodeType":"EventDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"506:8:10","nodeType":"VariableDeclaration","scope":1319,"src":"498:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:18:10"},"src":"477:39:10"},{"anonymous":false,"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"522:212:10","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"id":1326,"name":"BatchMetadataUpdate","nameLocation":"745:19:10","nodeType":"EventDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"773:12:10","nodeType":"VariableDeclaration","scope":1326,"src":"765:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"795:10:10","nodeType":"VariableDeclaration","scope":1326,"src":"787:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:42:10"},"src":"739:68:10"}],"scope":1328,"src":"226:583:10","usedErrors":[]}],"src":"107:703:10"},"id":10},"contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[1352]},"id":1353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1329,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1352,"linearizedBaseContracts":[1352],"name":"IERC5267","nameLocation":"142:8:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"157:84:11","text":" @dev MAY be emitted to signal that the domain could have changed."},"id":1332,"name":"EIP712DomainChanged","nameLocation":"252:19:11","nodeType":"EventDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"271:2:11"},"src":"246:28:11"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"280:140:11","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":1351,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:11","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"446:2:11"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"fields","nameLocation":"516:6:11","nodeType":"VariableDeclaration","scope":1351,"src":"509:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1335,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"name","nameLocation":"550:4:11","nodeType":"VariableDeclaration","scope":1351,"src":"536:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1337,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"version","nameLocation":"582:7:11","nodeType":"VariableDeclaration","scope":1351,"src":"568:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1339,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"chainId","nameLocation":"611:7:11","nodeType":"VariableDeclaration","scope":1351,"src":"603:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:11","nodeType":"VariableDeclaration","scope":1351,"src":"632:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"salt","nameLocation":"679:4:11","nodeType":"VariableDeclaration","scope":1351,"src":"671:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"extensions","nameLocation":"714:10:11","nodeType":"VariableDeclaration","scope":1351,"src":"697:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1348,"nodeType":"ArrayTypeName","src":"697:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:11"},"scope":1352,"src":"425:310:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1353,"src":"132:605:11","usedErrors":[]}],"src":"107:631:11"},"id":11},"contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[1361],"IERC6372":[1376],"IVotes":[717]},"id":1362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1354,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:12"},{"absolutePath":"contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":1355,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1362,"sourceUnit":718,"src":"132:40:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":1356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1362,"sourceUnit":1377,"src":"173:24:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1357,"name":"IERC6372","nodeType":"IdentifierPath","referencedDeclaration":1376,"src":"221:8:12"},"id":1358,"nodeType":"InheritanceSpecifier","src":"221:8:12"},{"baseName":{"id":1359,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":717,"src":"231:6:12"},"id":1360,"nodeType":"InheritanceSpecifier","src":"231:6:12"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1361,"linearizedBaseContracts":[1361,717,1376],"name":"IERC5805","nameLocation":"209:8:12","nodeType":"ContractDefinition","nodes":[],"scope":1362,"src":"199:41:12","usedErrors":[]}],"src":"107:134:12"},"id":12},"contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[1376]},"id":1377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1363,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1376,"linearizedBaseContracts":[1376],"name":"IERC6372","nameLocation":"142:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"157:133:13","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1369,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:13","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"309:2:13"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"335:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1366,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:13"},"scope":1376,"src":"295:48:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"349:48:13","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:13","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"474:2:13"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"500:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1372,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:13"},"scope":1376,"src":"455:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1377,"src":"132:385:13","usedErrors":[]}],"src":"107:411:13"},"id":13},"contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC165":[7322],"IERC721":[2530]},"id":1380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1378,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:14"},{"absolutePath":"contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":1379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1380,"sourceUnit":2531,"src":"116:37:14","symbolAliases":[],"unitAlias":""}],"src":"91:63:14"},"id":14},"contracts/security/Pausable.sol":{"ast":{"absolutePath":"contracts/security/Pausable.sol","exportedSymbols":{"Context":[6087],"Pausable":[1487]},"id":1488,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1381,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:15"},{"absolutePath":"contracts/utils/Context.sol","file":"../utils/Context.sol","id":1382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1488,"sourceUnit":6088,"src":"130:30:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1384,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":6087,"src":"632:7:15"},"id":1385,"nodeType":"InheritanceSpecifier","src":"632:7:15"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"162:439:15","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1487,"linearizedBaseContracts":[1487,6087],"name":"Pausable","nameLocation":"620:8:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"646:73:15","text":" @dev Emitted when the pause is triggered by `account`."},"id":1390,"name":"Paused","nameLocation":"730:6:15","nodeType":"EventDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:15","nodeType":"VariableDeclaration","scope":1390,"src":"737:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:15"},"src":"724:30:15"},{"anonymous":false,"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"760:70:15","text":" @dev Emitted when the pause is lifted by `account`."},"id":1395,"name":"Unpaused","nameLocation":"841:8:15","nodeType":"EventDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:15","nodeType":"VariableDeclaration","scope":1395,"src":"850:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:15"},"src":"835:32:15"},{"constant":false,"id":1397,"mutability":"mutable","name":"_paused","nameLocation":"886:7:15","nodeType":"VariableDeclaration","scope":1487,"src":"873:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1396,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1405,"nodeType":"Block","src":"986:32:15","statements":[{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1401,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"996:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"ExpressionStatement","src":"996:15:15"}]},"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"900:67:15","text":" @dev Initializes the contract in unpaused state."},"id":1406,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"983:2:15"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"986:0:15"},"scope":1487,"src":"972:46:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1413,"nodeType":"Block","src":"1229:47:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1409,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1239:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"ExpressionStatement","src":"1239:19:15"},{"id":1412,"nodeType":"PlaceholderStatement","src":"1268:1:15"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"1024:175:15","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1414,"name":"whenNotPaused","nameLocation":"1213:13:15","nodeType":"ModifierDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"1226:2:15"},"src":"1204:72:15","virtual":false,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"1476:44:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1417,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1486:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"1486:16:15"},{"id":1420,"nodeType":"PlaceholderStatement","src":"1512:1:15"}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"1282:167:15","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1422,"name":"whenPaused","nameLocation":"1463:10:15","nodeType":"ModifierDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"1473:2:15"},"src":"1454:66:15","virtual":false,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"1668:31:15","statements":[{"expression":{"id":1428,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"1685:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1427,"id":1429,"nodeType":"Return","src":"1678:14:15"}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"1526:84:15","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:15","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1630:2:15"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"1662:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1425,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:15"},"scope":1487,"src":"1615:84:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1442,"nodeType":"Block","src":"1818:55:15","statements":[{"expression":{"arguments":[{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1436,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"1837:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":1435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1441,"nodeType":"ExpressionStatement","src":"1828:38:15"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"1705:57:15","text":" @dev Throws if the contract is paused."},"id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:15","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[],"src":"1793:2:15"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[],"src":"1818:0:15"},"scope":1487,"src":"1767:106:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1453,"nodeType":"Block","src":"1993:58:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1448,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2011:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":1447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"ExpressionStatement","src":"2003:41:15"}]},"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"1879:61:15","text":" @dev Throws if the contract is not paused."},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:15","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[],"src":"1968:2:15"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"1993:0:15"},"scope":1487,"src":"1945:106:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1469,"nodeType":"Block","src":"2235:66:15","statements":[{"expression":{"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1460,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"2245:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1463,"nodeType":"ExpressionStatement","src":"2245:14:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1465,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"2281:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1464,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"2274:6:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"EmitStatement","src":"2269:25:15"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"2057:124:15","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1470,"implemented":true,"kind":"function","modifiers":[{"id":1458,"kind":"modifierInvocation","modifierName":{"id":1457,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"2221:13:15"},"nodeType":"ModifierInvocation","src":"2221:13:15"}],"name":"_pause","nameLocation":"2195:6:15","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"2201:2:15"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"2235:0:15"},"scope":1487,"src":"2186:115:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1485,"nodeType":"Block","src":"2481:69:15","statements":[{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1476,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"2491:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"ExpressionStatement","src":"2491:15:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1481,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"2530:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1480,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"2521:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1484,"nodeType":"EmitStatement","src":"2516:27:15"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"2307:121:15","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1486,"implemented":true,"kind":"function","modifiers":[{"id":1474,"kind":"modifierInvocation","modifierName":{"id":1473,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2470:10:15"},"nodeType":"ModifierInvocation","src":"2470:10:15"}],"name":"_unpause","nameLocation":"2442:8:15","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[],"src":"2450:2:15"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[],"src":"2481:0:15"},"scope":1487,"src":"2433:117:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1488,"src":"602:1950:15","usedErrors":[]}],"src":"105:2448:15"},"id":15},"contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"ERC165":[7310],"ERC721":[2414],"IERC165":[7322],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":2415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1489,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:16"},{"absolutePath":"contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2531,"src":"132:23:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":2549,"src":"156:31:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":3803,"src":"188:42:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":4525,"src":"231:33:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":6088,"src":"265:33:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":6717,"src":"299:33:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2415,"sourceUnit":7311,"src":"333:46:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1498,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":6087,"src":"647:7:16"},"id":1499,"nodeType":"InheritanceSpecifier","src":"647:7:16"},{"baseName":{"id":1500,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":7310,"src":"656:6:16"},"id":1501,"nodeType":"InheritanceSpecifier","src":"656:6:16"},{"baseName":{"id":1502,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"664:7:16"},"id":1503,"nodeType":"InheritanceSpecifier","src":"664:7:16"},{"baseName":{"id":1504,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":3802,"src":"673:15:16"},"id":1505,"nodeType":"InheritanceSpecifier","src":"673:15:16"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"381:246:16","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2414,"linearizedBaseContracts":[2414,3802,2530,7310,7322,6087],"name":"ERC721","nameLocation":"637:6:16","nodeType":"ContractDefinition","nodes":[{"id":1508,"libraryName":{"id":1506,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":4524,"src":"701:7:16"},"nodeType":"UsingForDirective","src":"695:26:16","typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1511,"libraryName":{"id":1509,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":6716,"src":"732:7:16"},"nodeType":"UsingForDirective","src":"726:26:16","typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1513,"mutability":"mutable","name":"_name","nameLocation":"791:5:16","nodeType":"VariableDeclaration","scope":2414,"src":"776:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1512,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1515,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:16","nodeType":"VariableDeclaration","scope":2414,"src":"823:22:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1514,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1519,"mutability":"mutable","name":"_owners","nameLocation":"934:7:16","nodeType":"VariableDeclaration","scope":2414,"src":"898:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1518,"keyType":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1523,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:16","nodeType":"VariableDeclaration","scope":2414,"src":"992:45:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1522,"keyType":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1527,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:16","nodeType":"VariableDeclaration","scope":2414,"src":"1093:51:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1526,"keyType":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1533,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:16","nodeType":"VariableDeclaration","scope":2414,"src":"1199:71:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1532,"keyType":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1531,"keyType":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1530,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1549,"nodeType":"Block","src":"1446:57:16","statements":[{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1541,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1456:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1542,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1464:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1544,"nodeType":"ExpressionStatement","src":"1456:13:16"},{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"1479:7:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1546,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1489:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1548,"nodeType":"ExpressionStatement","src":"1479:17:16"}]},"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"1277:108:16","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1550,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"name_","nameLocation":"1416:5:16","nodeType":"VariableDeclaration","scope":1550,"src":"1402:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1535,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:16","nodeType":"VariableDeclaration","scope":1550,"src":"1423:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1537,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:16"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[],"src":"1446:0:16"},"scope":2414,"src":"1390:113:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7309,7321],"body":{"id":1580,"nodeType":"Block","src":"1678:192:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1707:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1563,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"1727:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2530_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2530_$","typeString":"type(contract IERC721)"}],"id":1562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2530","typeString":"type(contract IERC721)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1763:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1569,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"1783:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3802_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3802_$","typeString":"type(contract IERC721Metadata)"}],"id":1568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3802","typeString":"type(contract IERC721Metadata)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1576,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1851:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1574,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2414_$","typeString":"type(contract super ERC721)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":7309,"src":"1827:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1560,"id":1579,"nodeType":"Return","src":"1688:175:16"}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"1509:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:16","nodeType":"FunctionDefinition","overrides":{"id":1557,"nodeType":"OverrideSpecifier","overrides":[{"id":1555,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":7310,"src":"1646:6:16"},{"id":1556,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"1654:7:16"}],"src":"1637:25:16"},"parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:16","nodeType":"VariableDeclaration","scope":1581,"src":"1597:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1552,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:16"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"1672:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1558,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:16"},"scope":2414,"src":"1570:300:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2455],"body":{"id":1604,"nodeType":"Block","src":"2010:123:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"2028:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:16","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1599,"nodeType":"ExpressionStatement","src":"2020:73:16"},{"expression":{"baseExpression":{"id":1600,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"2110:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1602,"indexExpression":{"id":1601,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"2120:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1589,"id":1603,"nodeType":"Return","src":"2103:23:16"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"1876:48:16","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:16","nodeType":"FunctionDefinition","overrides":{"id":1586,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:16"},"parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"owner","nameLocation":"1956:5:16","nodeType":"VariableDeclaration","scope":1605,"src":"1948:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:16"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"2001:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:16"},"scope":2414,"src":"1929:204:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2463],"body":{"id":1632,"nodeType":"Block","src":"2271:138:16","statements":[{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"owner","nameLocation":"2289:5:16","nodeType":"VariableDeclaration","scope":1632,"src":"2281:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1619,"initialValue":{"arguments":[{"id":1617,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"2306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1616,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2297:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"2332:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:16","typeDescriptions":{}}},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"ExpressionStatement","src":"2324:56:16"},{"expression":{"id":1630,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"2397:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1613,"id":1631,"nodeType":"Return","src":"2390:12:16"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"2139:46:16","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:16","nodeType":"FunctionDefinition","overrides":{"id":1610,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:16"},"parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:16","nodeType":"VariableDeclaration","scope":1633,"src":"2207:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:16"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"2262:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:16"},"scope":2414,"src":"2190:219:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3787],"body":{"id":1642,"nodeType":"Block","src":"2540:29:16","statements":[{"expression":{"id":1640,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2557:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1639,"id":1641,"nodeType":"Return","src":"2550:12:16"}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"2415:51:16","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:16","nodeType":"FunctionDefinition","overrides":{"id":1636,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:16"},"parameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"2484:2:16"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1643,"src":"2525:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1637,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:16"},"scope":2414,"src":"2471:98:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3793],"body":{"id":1652,"nodeType":"Block","src":"2704:31:16","statements":[{"expression":{"id":1650,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2721:7:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1649,"id":1651,"nodeType":"Return","src":"2714:14:16"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"2575:53:16","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1653,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:16","nodeType":"FunctionDefinition","overrides":{"id":1646,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:16"},"parameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"2648:2:16"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1653,"src":"2689:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1647,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:16"},"scope":2414,"src":"2633:102:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3801],"body":{"id":1691,"nodeType":"Block","src":"2889:188:16","statements":[{"expression":{"arguments":[{"id":1663,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1662,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"2899:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"2899:23:16"},{"assignments":[1667],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:16","nodeType":"VariableDeclaration","scope":1691,"src":"2933:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1666,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1670,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1668,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2957:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:16"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1673,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2990:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:16","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:16","trueExpression":{"arguments":[{"arguments":[{"id":1682,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"3036:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"3045:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":6546,"src":"3045:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1680,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1678,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:16","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1661,"id":1690,"nodeType":"Return","src":"2977:93:16"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"2741:55:16","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:16","nodeType":"FunctionDefinition","overrides":{"id":1658,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:16"},"parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:16","nodeType":"VariableDeclaration","scope":1692,"src":"2819:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:16"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1692,"src":"2874:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1659,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:16"},"scope":2414,"src":"2801:276:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1700,"nodeType":"Block","src":"3385:26:16","statements":[{"expression":{"hexValue":"","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1697,"id":1699,"nodeType":"Return","src":"3395:9:16"}]},"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"3083:231:16","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:16","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"3336:2:16"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"3370:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1695,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:16"},"scope":2414,"src":"3319:92:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2503],"body":{"id":1743,"nodeType":"Block","src":"3538:336:16","statements":[{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"owner","nameLocation":"3556:5:16","nodeType":"VariableDeclaration","scope":1743,"src":"3548:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1716,"initialValue":{"arguments":[{"id":1714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"3579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1712,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3564:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"3564:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"3605:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1719,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"3611:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1723,"nodeType":"ExpressionStatement","src":"3597:57:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1725,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3686:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"3702:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"3728:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1731,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3735:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1729,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"3711:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"ExpressionStatement","src":"3665:170:16"},{"expression":{"arguments":[{"id":1739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"3855:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"3859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1738,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"3846:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1742,"nodeType":"ExpressionStatement","src":"3846:21:16"}]},"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"3417:46:16","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:16","nodeType":"FunctionDefinition","overrides":{"id":1708,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:16"},"parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"to","nameLocation":"3493:2:16","nodeType":"VariableDeclaration","scope":1744,"src":"3485:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:16","nodeType":"VariableDeclaration","scope":1744,"src":"3497:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:16"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[],"src":"3538:0:16"},"scope":2414,"src":"3468:406:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2519],"body":{"id":1761,"nodeType":"Block","src":"4020:82:16","statements":[{"expression":{"arguments":[{"id":1754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"4045:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1753,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"4030:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1756,"nodeType":"ExpressionStatement","src":"4030:23:16"},{"expression":{"baseExpression":{"id":1757,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4071:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1759,"indexExpression":{"id":1758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"4087:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1752,"id":1760,"nodeType":"Return","src":"4064:31:16"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"3880:50:16","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1762,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:16","nodeType":"FunctionDefinition","overrides":{"id":1749,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:16"},"parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:16","nodeType":"VariableDeclaration","scope":1762,"src":"3956:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:16"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1762,"src":"4011:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:16"},"scope":2414,"src":"3935:167:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2511],"body":{"id":1778,"nodeType":"Block","src":"4253:69:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1772,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"4282:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1774,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4296:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1775,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"4306:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1771,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"4263:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"4263:52:16"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"4108:56:16","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:16","nodeType":"FunctionDefinition","overrides":{"id":1769,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:16"},"parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"operator","nameLocation":"4204:8:16","nodeType":"VariableDeclaration","scope":1779,"src":"4196:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"approved","nameLocation":"4219:8:16","nodeType":"VariableDeclaration","scope":1779,"src":"4214:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1766,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:16"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"4253:0:16"},"scope":2414,"src":"4169:153:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2529],"body":{"id":1796,"nodeType":"Block","src":"4491:59:16","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1790,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4508:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1792,"indexExpression":{"id":1791,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4527:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1794,"indexExpression":{"id":1793,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4534:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1789,"id":1795,"nodeType":"Return","src":"4501:42:16"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"4328:55:16","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:16","nodeType":"FunctionDefinition","overrides":{"id":1786,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:16"},"parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"owner","nameLocation":"4422:5:16","nodeType":"VariableDeclaration","scope":1797,"src":"4414:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"operator","nameLocation":"4437:8:16","nodeType":"VariableDeclaration","scope":1797,"src":"4429:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:16"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"4485:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1787,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:16"},"scope":2414,"src":"4388:162:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2495],"body":{"id":1823,"nodeType":"Block","src":"4701:207:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1810,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"4790:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"4804:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1809,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4771:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4763:99:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"ExpressionStatement","src":"4763:99:16"},{"expression":{"arguments":[{"id":1818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"4883:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"4889:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1820,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"4893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1817,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4873:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4873:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1822,"nodeType":"ExpressionStatement","src":"4873:28:16"}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"4556:51:16","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:16","nodeType":"FunctionDefinition","overrides":{"id":1806,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:16"},"parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"from","nameLocation":"4642:4:16","nodeType":"VariableDeclaration","scope":1824,"src":"4634:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"to","nameLocation":"4656:2:16","nodeType":"VariableDeclaration","scope":1824,"src":"4648:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:16","nodeType":"VariableDeclaration","scope":1824,"src":"4660:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:16"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"4701:0:16"},"scope":2414,"src":"4612:296:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2485],"body":{"id":1842,"nodeType":"Block","src":"5067:56:16","statements":[{"expression":{"arguments":[{"id":1836,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"5094:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"5100:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1838,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"5104:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1835,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1843,1873],"referencedDeclaration":1873,"src":"5077:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5077:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"ExpressionStatement","src":"5077:39:16"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"4914:55:16","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1843,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:16","nodeType":"FunctionDefinition","overrides":{"id":1833,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:16"},"parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"from","nameLocation":"5008:4:16","nodeType":"VariableDeclaration","scope":1843,"src":"5000:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"to","nameLocation":"5022:2:16","nodeType":"VariableDeclaration","scope":1843,"src":"5014:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:16","nodeType":"VariableDeclaration","scope":1843,"src":"5026:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:16"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"5067:0:16"},"scope":2414,"src":"4974:149:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2475],"body":{"id":1872,"nodeType":"Block","src":"5301:164:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1858,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"5338:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5352:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1857,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"5319:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5319:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5311:99:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1864,"nodeType":"ExpressionStatement","src":"5311:99:16"},{"expression":{"arguments":[{"id":1866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"5434:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"5440:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5444:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1869,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"5453:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1865,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"5420:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5420:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1871,"nodeType":"ExpressionStatement","src":"5420:38:16"}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"5129:55:16","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:16","nodeType":"FunctionDefinition","overrides":{"id":1854,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:16"},"parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"from","nameLocation":"5223:4:16","nodeType":"VariableDeclaration","scope":1873,"src":"5215:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"to","nameLocation":"5237:2:16","nodeType":"VariableDeclaration","scope":1873,"src":"5229:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:16","nodeType":"VariableDeclaration","scope":1873,"src":"5241:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"data","nameLocation":"5271:4:16","nodeType":"VariableDeclaration","scope":1873,"src":"5258:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1851,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:16"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[],"src":"5301:0:16"},"scope":2414,"src":"5189:276:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1901,"nodeType":"Block","src":"6428:165:16","statements":[{"expression":{"arguments":[{"id":1886,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6448:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1887,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6454:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1888,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"6458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1885,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"6438:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6438:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"6438:28:16"},{"expression":{"arguments":[{"arguments":[{"id":1893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6507:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6513:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1895,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"6517:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1896,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"6526:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1892,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"6484:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6484:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:110:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"6476:110:16"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"5471:850:16","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:16","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"from","nameLocation":"6357:4:16","nodeType":"VariableDeclaration","scope":1902,"src":"6349:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"to","nameLocation":"6371:2:16","nodeType":"VariableDeclaration","scope":1902,"src":"6363:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:16","nodeType":"VariableDeclaration","scope":1902,"src":"6375:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"data","nameLocation":"6405:4:16","nodeType":"VariableDeclaration","scope":1902,"src":"6392:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1881,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:16"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[],"src":"6428:0:16"},"scope":2414,"src":"6326:267:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"6777:40:16","statements":[{"expression":{"baseExpression":{"id":1910,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"6794:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1912,"indexExpression":{"id":1911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"6802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1909,"id":1913,"nodeType":"Return","src":"6787:23:16"}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"6599:98:16","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:16","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:16","nodeType":"VariableDeclaration","scope":1915,"src":"6720:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:16"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1915,"src":"6768:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:16"},"scope":2414,"src":"6702:115:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"7191:55:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1924,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"7217:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1923,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"7208:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7208:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:16","typeDescriptions":{}}},"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1922,"id":1931,"nodeType":"Return","src":"7201:38:16"}]},"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"6823:292:16","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:16","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:16","nodeType":"VariableDeclaration","scope":1933,"src":"7137:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:16"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"7185:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1920,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:16"},"scope":2414,"src":"7120:126:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"7503:162:16","statements":[{"assignments":[1944],"declarations":[{"constant":false,"id":1944,"mutability":"mutable","name":"owner","nameLocation":"7521:5:16","nodeType":"VariableDeclaration","scope":1966,"src":"7513:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1949,"initialValue":{"arguments":[{"id":1947,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"7544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1945,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"7529:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"7529:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:16"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"7570:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1951,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7581:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7607:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1955,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"7614:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1953,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"7590:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7590:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"7638:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1958,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7626:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7626:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"7650:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1942,"id":1965,"nodeType":"Return","src":"7562:96:16"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"7252:147:16","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:16","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"spender","nameLocation":"7440:7:16","nodeType":"VariableDeclaration","scope":1967,"src":"7432:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:16","nodeType":"VariableDeclaration","scope":1967,"src":"7449:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:16"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"7497:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1940,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:16"},"scope":2414,"src":"7404:261:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1981,"nodeType":"Block","src":"8060:43:16","statements":[{"expression":{"arguments":[{"id":1976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"8080:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"8084:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1975,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1982,2011],"referencedDeclaration":2011,"src":"8070:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8070:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"8070:26:16"}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"7671:319:16","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:16","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"to","nameLocation":"8022:2:16","nodeType":"VariableDeclaration","scope":1982,"src":"8014:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:16","nodeType":"VariableDeclaration","scope":1982,"src":"8026:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:16"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"8060:0:16"},"scope":2414,"src":"7995:108:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"8408:195:16","statements":[{"expression":{"arguments":[{"id":1993,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8424:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8428:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1992,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"8418:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8418:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1996,"nodeType":"ExpressionStatement","src":"8418:18:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:16","typeDescriptions":{}}},"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8490:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"8502:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2004,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8506:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2005,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"8515:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1998,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"8467:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8467:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8446:150:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"8446:150:16"}]},"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"8109:210:16","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:16","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"to","nameLocation":"8351:2:16","nodeType":"VariableDeclaration","scope":2011,"src":"8343:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:16","nodeType":"VariableDeclaration","scope":2011,"src":"8355:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"data","nameLocation":"8385:4:16","nodeType":"VariableDeclaration","scope":2011,"src":"8372:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:16"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[],"src":"8408:0:16"},"scope":2414,"src":"8324:279:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2087,"nodeType":"Block","src":"8986:859:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9004:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:16","typeDescriptions":{}}},"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":2019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"8996:61:16"},{"expression":{"arguments":[{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:16","subExpression":{"arguments":[{"id":2031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9084:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2030,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"9076:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2029,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2036,"nodeType":"ExpressionStatement","src":"9067:58:16"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:16","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9157:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2042,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9169:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9173:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2037,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"9136:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9136:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"ExpressionStatement","src":"9136:48:16"},{"expression":{"arguments":[{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:16","subExpression":{"arguments":[{"id":2049,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9288:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2048,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"9280:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9280:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9271:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2054,"nodeType":"ExpressionStatement","src":"9271:58:16"},{"id":2061,"nodeType":"UncheckedBlock","src":"9340:360:16","statements":[{"expression":{"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2055,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"9671:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2057,"indexExpression":{"id":2056,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9681:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2060,"nodeType":"ExpressionStatement","src":"9671:18:16"}]},{"expression":{"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2062,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"9710:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2064,"indexExpression":{"id":2063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2065,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9729:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2067,"nodeType":"ExpressionStatement","src":"9710:21:16"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:16","typeDescriptions":{}}},"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9756:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9768:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9772:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2068,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"9747:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9747:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"EmitStatement","src":"9742:38:16"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:16","typeDescriptions":{}}},"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9811:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"9823:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2083,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"9827:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2077,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"9791:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"9791:47:16"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"8609:311:16","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:16","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"to","nameLocation":"8948:2:16","nodeType":"VariableDeclaration","scope":2088,"src":"8940:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:16","nodeType":"VariableDeclaration","scope":2088,"src":"8952:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:16"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[],"src":"8986:0:16"},"scope":2414,"src":"8925:920:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2154,"nodeType":"Block","src":"10220:713:16","statements":[{"assignments":[2095],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"owner","nameLocation":"10238:5:16","nodeType":"VariableDeclaration","scope":2154,"src":"10230:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2100,"initialValue":{"arguments":[{"id":2098,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2096,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"10246:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"10246:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10246:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:16"},{"expression":{"arguments":[{"id":2102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10301:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:16","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10308:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10320:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2101,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"10280:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10280:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"ExpressionStatement","src":"10280:51:16"},{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2111,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10433:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2114,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2112,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"10441:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"10441:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2117,"nodeType":"ExpressionStatement","src":"10433:31:16"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:16","subExpression":{"baseExpression":{"id":2118,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"10509:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2120,"indexExpression":{"id":2119,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10525:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2122,"nodeType":"ExpressionStatement","src":"10502:31:16"},{"id":2129,"nodeType":"UncheckedBlock","src":"10544:237:16","statements":[{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2123,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"10749:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2125,"indexExpression":{"id":2124,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10759:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"nodeType":"ExpressionStatement","src":"10749:21:16"}]},{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:16","subExpression":{"baseExpression":{"id":2130,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"10797:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2132,"indexExpression":{"id":2131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"10790:23:16"},{"eventCall":{"arguments":[{"id":2136,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10838:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:16","typeDescriptions":{}}},"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10845:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2141,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10857:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2135,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"10829:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10829:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"EmitStatement","src":"10824:41:16"},{"expression":{"arguments":[{"id":2145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10896:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:16","typeDescriptions":{}}},"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2150,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"10915:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2144,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"10876:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10876:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"ExpressionStatement","src":"10876:50:16"}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"9851:315:16","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:16","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:16","nodeType":"VariableDeclaration","scope":2155,"src":"10186:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:16"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[],"src":"10220:0:16"},"scope":2414,"src":"10171:762:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"11336:1124:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11369:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2166,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"11354:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"11354:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11354:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2170,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"11381:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"ExpressionStatement","src":"11346:81:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11445:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:16","typeDescriptions":{}}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11451:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":2175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11437:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2184,"nodeType":"ExpressionStatement","src":"11437:65:16"},{"expression":{"arguments":[{"id":2186,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"11534:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2187,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11540:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2185,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"11513:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11513:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"11513:42:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11670:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2193,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"11655:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"11655:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11655:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2197,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"11682:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2201,"nodeType":"ExpressionStatement","src":"11647:81:16"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:16","subExpression":{"baseExpression":{"id":2202,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"11797:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2204,"indexExpression":{"id":2203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11813:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"ExpressionStatement","src":"11790:31:16"},{"id":2219,"nodeType":"UncheckedBlock","src":"11832:496:16","statements":[{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2207,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"12265:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2209,"indexExpression":{"id":2208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"12275:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2212,"nodeType":"ExpressionStatement","src":"12265:20:16"},{"expression":{"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2213,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"12299:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2215,"indexExpression":{"id":2214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"12309:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2218,"nodeType":"ExpressionStatement","src":"12299:18:16"}]},{"expression":{"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2220,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"12337:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2222,"indexExpression":{"id":2221,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"12345:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2223,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"12356:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2225,"nodeType":"ExpressionStatement","src":"12337:21:16"},{"eventCall":{"arguments":[{"id":2227,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"12383:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"12389:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2229,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"12393:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2226,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"12374:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12374:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2231,"nodeType":"EmitStatement","src":"12369:32:16"},{"expression":{"arguments":[{"id":2233,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"12432:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"12438:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2235,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"12442:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2232,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"12412:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12412:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2238,"nodeType":"ExpressionStatement","src":"12412:41:16"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"10939:313:16","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:16","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"from","nameLocation":"11284:4:16","nodeType":"VariableDeclaration","scope":2240,"src":"11276:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"to","nameLocation":"11298:2:16","nodeType":"VariableDeclaration","scope":2240,"src":"11290:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:16","nodeType":"VariableDeclaration","scope":2240,"src":"11302:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:16"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[],"src":"11336:0:16"},"scope":2414,"src":"11257:1203:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2263,"nodeType":"Block","src":"12636:107:16","statements":[{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2248,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"12646:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2250,"indexExpression":{"id":2249,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"12662:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12673:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2253,"nodeType":"ExpressionStatement","src":"12646:29:16"},{"eventCall":{"arguments":[{"arguments":[{"id":2257,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"12714:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2255,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12699:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"12699:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12699:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2259,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12724:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"12728:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2254,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"12690:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12690:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"EmitStatement","src":"12685:51:16"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"12466:101:16","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2264,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:16","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"to","nameLocation":"12598:2:16","nodeType":"VariableDeclaration","scope":2264,"src":"12590:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:16","nodeType":"VariableDeclaration","scope":2264,"src":"12602:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:16"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[],"src":"12636:0:16"},"scope":2414,"src":"12572:171:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2295,"nodeType":"Block","src":"12972:184:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"12990:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2276,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"12999:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12982:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2280,"nodeType":"ExpressionStatement","src":"12982:55:16"},{"expression":{"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2281,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"13047:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2284,"indexExpression":{"id":2282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"13066:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2285,"indexExpression":{"id":2283,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"13073:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2286,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13085:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2288,"nodeType":"ExpressionStatement","src":"13047:46:16"},{"eventCall":{"arguments":[{"id":2290,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"13123:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2291,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"13130:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2292,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13140:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2289,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"13108:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13108:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2294,"nodeType":"EmitStatement","src":"13103:46:16"}]},"documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"12749:125:16","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:16","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"owner","nameLocation":"12915:5:16","nodeType":"VariableDeclaration","scope":2296,"src":"12907:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"operator","nameLocation":"12930:8:16","nodeType":"VariableDeclaration","scope":2296,"src":"12922:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"approved","nameLocation":"12945:8:16","nodeType":"VariableDeclaration","scope":2296,"src":"12940:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2270,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:16"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[],"src":"12972:0:16"},"scope":2414,"src":"12879:277:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"13303:70:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2304,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"13329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"13321:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13313:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2308,"nodeType":"ExpressionStatement","src":"13313:53:16"}]},"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"13162:73:16","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:16","nodeType":"FunctionDefinition","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:16","nodeType":"VariableDeclaration","scope":2310,"src":"13264:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:16"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[],"src":"13303:0:16"},"scope":2414,"src":"13240:133:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"14080:676:16","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14094:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":4212,"src":"14094:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14094:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2369,"nodeType":"Block","src":"14714:36:16","statements":[{"expression":{"hexValue":"74727565","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2323,"id":2368,"nodeType":"Return","src":"14728:11:16"}]},"id":2370,"nodeType":"IfStatement","src":"14090:660:16","trueBody":{"id":2366,"nodeType":"Block","src":"14111:597:16","statements":[{"clauses":[{"block":{"id":2346,"nodeType":"Block","src":"14225:91:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"14250:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2341,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"14260:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2548_$","typeString":"type(contract IERC721Receiver)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"14260:32:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14260:41:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2323,"id":2345,"nodeType":"Return","src":"14243:58:16"}]},"errorName":"","id":2347,"nodeType":"TryCatchClause","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"retval","nameLocation":"14217:6:16","nodeType":"VariableDeclaration","scope":2347,"src":"14210:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2337,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:16"},"src":"14201:115:16"},{"block":{"id":2363,"nodeType":"Block","src":"14345:353:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2351,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"14367:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14367:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2361,"nodeType":"Block","src":"14494:190:16","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:16","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:16","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:16"},"nodeType":"YulFunctionCall","src":"14613:15:16"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:16"},"nodeType":"YulFunctionCall","src":"14630:13:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:16"},"nodeType":"YulFunctionCall","src":"14606:38:16"},"nodeType":"YulExpressionStatement","src":"14606:38:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2349,"isOffset":false,"isSlot":false,"src":"14621:6:16","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"14636:6:16","valueSize":1}],"id":2360,"nodeType":"InlineAssembly","src":"14571:95:16"}]},"id":2362,"nodeType":"IfStatement","src":"14363:321:16","trueBody":{"id":2359,"nodeType":"Block","src":"14387:101:16","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2355,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14409:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"ExpressionStatement","src":"14409:60:16"}]}}]},"errorName":"","id":2364,"nodeType":"TryCatchClause","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"reason","nameLocation":"14337:6:16","nodeType":"VariableDeclaration","scope":2364,"src":"14324:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2348,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:16"},"src":"14317:381:16"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2331,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"14166:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14166:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2333,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"14180:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2334,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"14186:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2335,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"14195:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2328,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14145:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2327,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"14129:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2548_$","typeString":"type(contract IERC721Receiver)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2548","typeString":"contract IERC721Receiver"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"14129:36:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:71:16","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2365,"nodeType":"TryStatement","src":"14125:573:16"}]}}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"13379:541:16","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:16","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"from","nameLocation":"13974:4:16","nodeType":"VariableDeclaration","scope":2372,"src":"13966:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2312,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"to","nameLocation":"13996:2:16","nodeType":"VariableDeclaration","scope":2372,"src":"13988:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:16","nodeType":"VariableDeclaration","scope":2372,"src":"14008:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"data","nameLocation":"14046:4:16","nodeType":"VariableDeclaration","scope":2372,"src":"14033:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2318,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:16"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"14074:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2321,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:16"},"scope":2414,"src":"13925:831:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2384,"nodeType":"Block","src":"15586:2:16","statements":[]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"14762:705:16","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:16","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"from","nameLocation":"15510:4:16","nodeType":"VariableDeclaration","scope":2385,"src":"15502:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"to","nameLocation":"15524:2:16","nodeType":"VariableDeclaration","scope":2385,"src":"15516:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:16","nodeType":"VariableDeclaration","scope":2385,"src":"15528:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:16","nodeType":"VariableDeclaration","scope":2385,"src":"15550:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:16"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"15586:0:16"},"scope":2414,"src":"15472:116:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2397,"nodeType":"Block","src":"16407:2:16","statements":[]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"15594:695:16","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:16","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"from","nameLocation":"16331:4:16","nodeType":"VariableDeclaration","scope":2398,"src":"16323:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"to","nameLocation":"16345:2:16","nodeType":"VariableDeclaration","scope":2398,"src":"16337:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:16","nodeType":"VariableDeclaration","scope":2398,"src":"16349:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:16","nodeType":"VariableDeclaration","scope":2398,"src":"16371:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:16"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[],"src":"16407:0:16"},"scope":2414,"src":"16294:115:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2412,"nodeType":"Block","src":"16958:45:16","statements":[{"expression":{"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2406,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"16968:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2408,"indexExpression":{"id":2407,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"16978:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2409,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"16990:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2411,"nodeType":"ExpressionStatement","src":"16968:28:16"}]},"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"16415:409:16","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:16","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"account","nameLocation":"16924:7:16","nodeType":"VariableDeclaration","scope":2413,"src":"16916:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"amount","nameLocation":"16941:6:16","nodeType":"VariableDeclaration","scope":2413,"src":"16933:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:16"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[],"src":"16958:0:16"},"scope":2414,"src":"16882:121:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2415,"src":"628:16377:16","usedErrors":[]}],"src":"107:16899:16"},"id":16},"contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[7322],"IERC721":[2530]},"id":2531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2416,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:17"},{"absolutePath":"contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2531,"sourceUnit":7323,"src":"133:47:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2419,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"271:7:17"},"id":2420,"nodeType":"InheritanceSpecifier","src":"271:7:17"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"182:67:17","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2530,"linearizedBaseContracts":[2530,7322],"name":"IERC721","nameLocation":"260:7:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"285:88:17","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2429,"name":"Transfer","nameLocation":"384:8:17","nodeType":"EventDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:17","nodeType":"VariableDeclaration","scope":2429,"src":"393:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2422,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2425,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:17","nodeType":"VariableDeclaration","scope":2429,"src":"415:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2427,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:17","nodeType":"VariableDeclaration","scope":2429,"src":"435:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:17"},"src":"378:82:17"},{"anonymous":false,"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"466:94:17","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2438,"name":"Approval","nameLocation":"571:8:17","nodeType":"EventDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:17","nodeType":"VariableDeclaration","scope":2438,"src":"580:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2434,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:17","nodeType":"VariableDeclaration","scope":2438,"src":"603:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2436,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:17","nodeType":"VariableDeclaration","scope":2438,"src":"629:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:17"},"src":"565:89:17"},{"anonymous":false,"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"660:117:17","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2447,"name":"ApprovalForAll","nameLocation":"788:14:17","nodeType":"EventDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:17","nodeType":"VariableDeclaration","scope":2447,"src":"803:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2443,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:17","nodeType":"VariableDeclaration","scope":2447,"src":"826:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2445,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:17","nodeType":"VariableDeclaration","scope":2447,"src":"852:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2444,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:17"},"src":"782:85:17"},{"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"873:76:17","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2455,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:17","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"owner","nameLocation":"981:5:17","nodeType":"VariableDeclaration","scope":2455,"src":"973:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:17"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"balance","nameLocation":"1019:7:17","nodeType":"VariableDeclaration","scope":2455,"src":"1011:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:17"},"scope":2530,"src":"954:74:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"1034:131:17","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2463,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:17","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:17","nodeType":"VariableDeclaration","scope":2463,"src":"1187:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:17"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"owner","nameLocation":"1235:5:17","nodeType":"VariableDeclaration","scope":2463,"src":"1227:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:17"},"scope":2530,"src":"1170:72:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"1248:556:17","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2475,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:17","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"from","nameLocation":"1843:4:17","nodeType":"VariableDeclaration","scope":2475,"src":"1835:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"to","nameLocation":"1857:2:17","nodeType":"VariableDeclaration","scope":2475,"src":"1849:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:17","nodeType":"VariableDeclaration","scope":2475,"src":"1861:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"data","nameLocation":"1893:4:17","nodeType":"VariableDeclaration","scope":2475,"src":"1878:19:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2471,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:17"},"returnParameters":{"id":2474,"nodeType":"ParameterList","parameters":[],"src":"1907:0:17"},"scope":2530,"src":"1809:99:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"1914:687:17","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2485,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:17","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"from","nameLocation":"2640:4:17","nodeType":"VariableDeclaration","scope":2485,"src":"2632:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"to","nameLocation":"2654:2:17","nodeType":"VariableDeclaration","scope":2485,"src":"2646:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:17","nodeType":"VariableDeclaration","scope":2485,"src":"2658:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:17"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[],"src":"2683:0:17"},"scope":2530,"src":"2606:78:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"2690:732:17","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2495,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:17","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"from","nameLocation":"3457:4:17","nodeType":"VariableDeclaration","scope":2495,"src":"3449:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2487,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"to","nameLocation":"3471:2:17","nodeType":"VariableDeclaration","scope":2495,"src":"3463:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2489,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:17","nodeType":"VariableDeclaration","scope":2495,"src":"3475:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:17"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[],"src":"3500:0:17"},"scope":2530,"src":"3427:74:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"3507:452:17","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2503,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:17","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"to","nameLocation":"3989:2:17","nodeType":"VariableDeclaration","scope":2503,"src":"3981:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:17","nodeType":"VariableDeclaration","scope":2503,"src":"3993:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:17"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"4018:0:17"},"scope":2530,"src":"3964:55:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"4025:309:17","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2511,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:17","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"operator","nameLocation":"4374:8:17","nodeType":"VariableDeclaration","scope":2511,"src":"4366:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"approved","nameLocation":"4389:8:17","nodeType":"VariableDeclaration","scope":2511,"src":"4384:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2507,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:17"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[],"src":"4407:0:17"},"scope":2530,"src":"4339:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"4414:139:17","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2519,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:17","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:17","nodeType":"VariableDeclaration","scope":2519,"src":"4579:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:17"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"operator","nameLocation":"4627:8:17","nodeType":"VariableDeclaration","scope":2519,"src":"4619:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2516,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:17"},"scope":2530,"src":"4558:79:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"4643:138:17","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2529,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:17","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"owner","nameLocation":"4820:5:17","nodeType":"VariableDeclaration","scope":2529,"src":"4812:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"operator","nameLocation":"4835:8:17","nodeType":"VariableDeclaration","scope":2529,"src":"4827:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:17"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2529,"src":"4868:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2526,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:17"},"scope":2530,"src":"4786:88:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2531,"src":"250:4626:17","usedErrors":[]}],"src":"108:4769:17"},"id":17},"contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2548]},"id":2549,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2532,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"141:152:18","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2548,"linearizedBaseContracts":[2548],"name":"IERC721Receiver","nameLocation":"304:15:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"326:493:18","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2547,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:18","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"operator","nameLocation":"867:8:18","nodeType":"VariableDeclaration","scope":2547,"src":"859:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"from","nameLocation":"893:4:18","nodeType":"VariableDeclaration","scope":2547,"src":"885:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2537,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:18","nodeType":"VariableDeclaration","scope":2547,"src":"907:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"data","nameLocation":"947:4:18","nodeType":"VariableDeclaration","scope":2547,"src":"932:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2541,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:18"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"976:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2544,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:18"},"scope":2548,"src":"824:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2549,"src":"294:692:18","usedErrors":[]}],"src":"116:871:18"},"id":18},"contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"ERC165":[7310],"ERC721":[2414],"ERC721Burnable":[2578],"IERC165":[7322],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":2579,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2550,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:19"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2579,"sourceUnit":2415,"src":"151:23:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2579,"sourceUnit":6088,"src":"175:36:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2554,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":6087,"src":"342:7:19"},"id":2555,"nodeType":"InheritanceSpecifier","src":"342:7:19"},{"baseName":{"id":2556,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"351:6:19"},"id":2557,"nodeType":"InheritanceSpecifier","src":"351:6:19"}],"canonicalName":"ERC721Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"213:92:19","text":" @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."},"fullyImplemented":false,"id":2578,"linearizedBaseContracts":[2578,2414,3802,2530,7310,7322,6087],"name":"ERC721Burnable","nameLocation":"324:14:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":2576,"nodeType":"Block","src":"577:192:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2565,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"666:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"666:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2567,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"680:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2564,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"647:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"647:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"690:47:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":2563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"639:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:99:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2571,"nodeType":"ExpressionStatement","src":"639:99:19"},{"expression":{"arguments":[{"id":2573,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"754:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"748:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"748:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2575,"nodeType":"ExpressionStatement","src":"748:14:19"}]},"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"364:162:19","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":2577,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"540:4:19","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"tokenId","nameLocation":"553:7:19","nodeType":"VariableDeclaration","scope":2577,"src":"545:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"544:17:19"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[],"src":"577:0:19"},"scope":2578,"src":"531:238:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2579,"src":"306:465:19","usedErrors":[]}],"src":"126:646:19"},"id":19},"contracts/token/ERC721/extensions/ERC721Consecutive.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721Consecutive.sol","exportedSymbols":{"Address":[4524],"BitMaps":[9972],"Checkpoints":[6065],"Context":[6087],"ERC165":[7310],"ERC721":[2414],"ERC721Consecutive":[2878],"IERC165":[7322],"IERC2309":[1286],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SafeCast":[9729],"SignedMath":[9834],"Strings":[6716]},"id":2879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2580,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:20"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":2415,"src":"154:23:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC2309.sol","file":"../../../interfaces/IERC2309.sol","id":2582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":1287,"src":"178:42:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Checkpoints.sol","file":"../../../utils/Checkpoints.sol","id":2583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":6066,"src":"221:40:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/structs/BitMaps.sol","file":"../../../utils/structs/BitMaps.sol","id":2584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":9973,"src":"262:44:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2586,"name":"IERC2309","nodeType":"IdentifierPath","referencedDeclaration":1286,"src":"1662:8:20"},"id":2587,"nodeType":"InheritanceSpecifier","src":"1662:8:20"},{"baseName":{"id":2588,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"1672:6:20"},"id":2589,"nodeType":"InheritanceSpecifier","src":"1672:6:20"}],"canonicalName":"ERC721Consecutive","contractDependencies":[],"contractKind":"contract","documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"308:1314:20","text":" @dev Implementation of the ERC2309 \"Consecutive Transfer Extension\" as defined in\n https://eips.ethereum.org/EIPS/eip-2309[EIP-2309].\n This extension allows the minting of large batches of tokens, during contract construction only. For upgradeable\n contracts this implies that batch minting is only available during proxy deployment, and not in subsequent upgrades.\n These batches are limited to 5000 tokens at a time by default to accommodate off-chain indexers.\n Using this extension removes the ability to mint single tokens during contract construction. This ability is\n regained after construction. During construction, only batch minting is allowed.\n IMPORTANT: This extension bypasses the hooks {_beforeTokenTransfer} and {_afterTokenTransfer} for tokens minted in\n batch. When using this extension, you should consider the {_beforeConsecutiveTokenTransfer} and\n {_afterConsecutiveTokenTransfer} hooks in addition to {_beforeTokenTransfer} and {_afterTokenTransfer}.\n IMPORTANT: When overriding {_afterTokenTransfer}, be careful about call ordering. {ownerOf} may return invalid\n values during the {_afterTokenTransfer} execution if the super call is not called first. To be safe, execute the\n super call before your custom logic.\n _Available since v4.8._"},"fullyImplemented":false,"id":2878,"linearizedBaseContracts":[2878,2414,3802,2530,7310,7322,6087,1286],"name":"ERC721Consecutive","nameLocation":"1641:17:20","nodeType":"ContractDefinition","nodes":[{"id":2593,"libraryName":{"id":2590,"name":"BitMaps","nodeType":"IdentifierPath","referencedDeclaration":9972,"src":"1691:7:20"},"nodeType":"UsingForDirective","src":"1685:33:20","typeName":{"id":2592,"nodeType":"UserDefinedTypeName","pathNode":{"id":2591,"name":"BitMaps.BitMap","nodeType":"IdentifierPath","referencedDeclaration":9842,"src":"1703:14:20"},"referencedDeclaration":9842,"src":"1703:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"}}},{"id":2597,"libraryName":{"id":2594,"name":"Checkpoints","nodeType":"IdentifierPath","referencedDeclaration":6065,"src":"1729:11:20"},"nodeType":"UsingForDirective","src":"1723:43:20","typeName":{"id":2596,"nodeType":"UserDefinedTypeName","pathNode":{"id":2595,"name":"Checkpoints.Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"1745:20:20"},"referencedDeclaration":5567,"src":"1745:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}}},{"constant":false,"id":2600,"mutability":"mutable","name":"_sequentialOwnership","nameLocation":"1801:20:20","nodeType":"VariableDeclaration","scope":2878,"src":"1772:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":2599,"nodeType":"UserDefinedTypeName","pathNode":{"id":2598,"name":"Checkpoints.Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"1772:20:20"},"referencedDeclaration":5567,"src":"1772:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"private"},{"constant":false,"id":2603,"mutability":"mutable","name":"_sequentialBurn","nameLocation":"1850:15:20","nodeType":"VariableDeclaration","scope":2878,"src":"1827:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage","typeString":"struct BitMaps.BitMap"},"typeName":{"id":2602,"nodeType":"UserDefinedTypeName","pathNode":{"id":2601,"name":"BitMaps.BitMap","nodeType":"IdentifierPath","referencedDeclaration":9842,"src":"1827:14:20"},"referencedDeclaration":9842,"src":"1827:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"}},"visibility":"private"},{"body":{"id":2611,"nodeType":"Block","src":"2410:28:20","statements":[{"expression":{"hexValue":"35303030","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2427:4:20","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"functionReturnParameters":2608,"id":2610,"nodeType":"Return","src":"2420:11:20"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"1872:469:20","text":" @dev Maximum size of a batch of consecutive tokens. This is designed to limit stress on off-chain indexing\n services that have to record one entry per token, and have protections against \"unreasonably large\" batches of\n tokens.\n NOTE: Overriding the default value of 5000 will not cause on-chain issues, but may result in the asset not being\n correctly supported by off-chain indexing services (including marketplaces)."},"id":2612,"implemented":true,"kind":"function","modifiers":[],"name":"_maxBatchSize","nameLocation":"2355:13:20","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[],"src":"2368:2:20"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2612,"src":"2402:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2606,"name":"uint96","nodeType":"ElementaryTypeName","src":"2402:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2401:8:20"},"scope":2878,"src":"2346:92:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1915],"body":{"id":2666,"nodeType":"Block","src":"2720:539:20","statements":[{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"owner","nameLocation":"2738:5:20","nodeType":"VariableDeclaration","scope":2666,"src":"2730:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2627,"initialValue":{"arguments":[{"id":2625,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2761:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2623,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2746:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Consecutive_$2878_$","typeString":"type(contract super ERC721Consecutive)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_ownerOf","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"2746:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2730:39:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"2873:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2882:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"2882:7:20","typeDescriptions":{}}},"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2882:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2873:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2896:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2911:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2636,"name":"uint96","nodeType":"ElementaryTypeName","src":"2911:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":2635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2906:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2906:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2906:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2896:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2873:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2645,"nodeType":"IfStatement","src":"2869:92:20","trueBody":{"id":2644,"nodeType":"Block","src":"2924:37:20","statements":[{"expression":{"id":2642,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"2945:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2620,"id":2643,"nodeType":"Return","src":"2938:12:20"}]}},{"expression":{"condition":{"arguments":[{"id":2648,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3170:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2646,"name":"_sequentialBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"3150:15:20","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage","typeString":"struct BitMaps.BitMap storage ref"}},"id":2647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":9878,"src":"3150:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_BitMap_$9842_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_BitMap_$9842_storage_ptr_$","typeString":"function (struct BitMaps.BitMap storage pointer,uint256) view returns (bool)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3150:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2660,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3242:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3235:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2658,"name":"uint96","nodeType":"ElementaryTypeName","src":"3235:6:20","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3235:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"id":2656,"name":"_sequentialOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3202:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage","typeString":"struct Checkpoints.Trace160 storage ref"}},"id":2657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lowerLookup","nodeType":"MemberAccess","referencedDeclaration":5635,"src":"3202:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace160_$5567_storage_ptr_$_t_uint96_$returns$_t_uint160_$bound_to$_t_struct$_Trace160_$5567_storage_ptr_$","typeString":"function (struct Checkpoints.Trace160 storage pointer,uint96) view returns (uint160)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3202:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3194:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"3194:7:20","typeDescriptions":{}}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3194:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3150:102:20","trueExpression":{"arguments":[{"hexValue":"30","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3189:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:20","typeDescriptions":{}}},"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3181:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2620,"id":2665,"nodeType":"Return","src":"3143:109:20"}]},"documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"2444:187:20","text":" @dev See {ERC721-_ownerOf}. Override that checks the sequential ownership structure for tokens that have\n been minted as part of a batch, and not yet transferred."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"2645:8:20","nodeType":"FunctionDefinition","overrides":{"id":2617,"nodeType":"OverrideSpecifier","overrides":[],"src":"2693:8:20"},"parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"tokenId","nameLocation":"2662:7:20","nodeType":"VariableDeclaration","scope":2667,"src":"2654:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2654:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2653:17:20"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2667,"src":"2711:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2710:9:20"},"scope":2878,"src":"2636:623:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2772,"nodeType":"Block","src":"4080:1137:20","statements":[{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"first","nameLocation":"4097:5:20","nodeType":"VariableDeclaration","scope":2772,"src":"4090:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2677,"name":"uint96","nodeType":"ElementaryTypeName","src":"4090:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2681,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2679,"name":"_totalConsecutiveSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"4105:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint96_$","typeString":"function () view returns (uint96)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4105:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4090:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4193:9:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4205:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4193:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"4189:999:20","trueBody":{"id":2768,"nodeType":"Block","src":"4208:980:20","statements":[{"expression":{"arguments":[{"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4230:34:20","subExpression":{"arguments":[{"arguments":[{"id":2690,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4258:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Consecutive_$2878","typeString":"contract ERC721Consecutive"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721Consecutive_$2878","typeString":"contract ERC721Consecutive"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4250:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"4250:7:20","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4250:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2686,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4524_$","typeString":"type(library Address)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":4212,"src":"4231:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4231:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231436f6e73656375746976653a206261746368206d696e74696e67207265737472696374656420746f20636f6e7374727563746f72","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4266:60:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d000fd032e6fe1601cdd5033f4a2881559ea9089ce82e1619fb501b110c86f97","typeString":"literal_string \"ERC721Consecutive: batch minting restricted to constructor\""},"value":"ERC721Consecutive: batch minting restricted to constructor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d000fd032e6fe1601cdd5033f4a2881559ea9089ce82e1619fb501b110c86f97","typeString":"literal_string \"ERC721Consecutive: batch minting restricted to constructor\""}],"id":2685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4222:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4222:105:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2696,"nodeType":"ExpressionStatement","src":"4222:105:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4349:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4363:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4355:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"4355:7:20","typeDescriptions":{}}},"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4355:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4349:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231436f6e73656375746976653a206d696e7420746f20746865207a65726f2061646472657373","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4367:45:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_491142ca91a4e9b62a740c5b39d71ca8bf6e13295cebdbbad50089ceb787270a","typeString":"literal_string \"ERC721Consecutive: mint to the zero address\""},"value":"ERC721Consecutive: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_491142ca91a4e9b62a740c5b39d71ca8bf6e13295cebdbbad50089ceb787270a","typeString":"literal_string \"ERC721Consecutive: mint to the zero address\""}],"id":2697,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4341:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4341:72:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"4341:72:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4435:9:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2709,"name":"_maxBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"4448:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint96_$","typeString":"function () view returns (uint96)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4448:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4435:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231436f6e73656375746976653a20626174636820746f6f206c61726765","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4465:36:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_44f4115f60f6017516952786e27c6006ae602a4fc39615754815b00d2423fdad","typeString":"literal_string \"ERC721Consecutive: batch too large\""},"value":"ERC721Consecutive: batch too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44f4115f60f6017516952786e27c6006ae602a4fc39615754815b00d2423fdad","typeString":"literal_string \"ERC721Consecutive: batch too large\""}],"id":2707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4427:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4427:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2714,"nodeType":"ExpressionStatement","src":"4427:75:20"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4573:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"4565:7:20","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4565:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4577:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2721,"name":"first","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"4581:5:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2722,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4588:9:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2715,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"4544:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4544:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"4544:54:20"},{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"last","nameLocation":"4677:4:20","nodeType":"VariableDeclaration","scope":2768,"src":"4670:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2725,"name":"uint96","nodeType":"ElementaryTypeName","src":"4670:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2732,"initialValue":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"first","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"4684:5:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2728,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4692:9:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4684:17:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4704:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4684:21:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4670:35:20"},{"expression":{"arguments":[{"id":2736,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"4745:4:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"arguments":[{"id":2739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4759:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4751:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2737,"name":"uint160","nodeType":"ElementaryTypeName","src":"4751:7:20","typeDescriptions":{}}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4751:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":2733,"name":"_sequentialOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4719:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage","typeString":"struct Checkpoints.Trace160 storage ref"}},"id":2735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"4719:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace160_$5567_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$bound_to$_t_struct$_Trace160_$5567_storage_ptr_$","typeString":"function (struct Checkpoints.Trace160 storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4719:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"id":2742,"nodeType":"ExpressionStatement","src":"4719:44:20"},{"expression":{"arguments":[{"id":2744,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5001:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2745,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"5005:9:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2743,"name":"__unsafe_increaseBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"4976:24:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4976:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2747,"nodeType":"ExpressionStatement","src":"4976:39:20"},{"eventCall":{"arguments":[{"id":2749,"name":"first","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5055:5:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2750,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5062:4:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"arguments":[{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5076:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5068:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"5068:7:20","typeDescriptions":{}}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5068:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5080:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2748,"name":"ConsecutiveTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"5035:19:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address,address)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5035:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"EmitStatement","src":"5030:53:20"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5144:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:20","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5144:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5156:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2764,"name":"first","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5160:5:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2765,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"5167:9:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2758,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[2856],"referencedDeclaration":2856,"src":"5124:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5124:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"5124:53:20"}]}},{"expression":{"id":2770,"name":"first","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5205:5:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2676,"id":2771,"nodeType":"Return","src":"5198:12:20"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"3265:720:20","text":" @dev Mint a batch of tokens of length `batchSize` for `to`. Returns the token id of the first token minted in the\n batch; if `batchSize` is 0, returns the number of consecutive ids minted so far.\n Requirements:\n - `batchSize` must not be greater than {_maxBatchSize}.\n - The function is called in the constructor of the contract (directly or indirectly).\n CAUTION: Does not emit a `Transfer` event. This is ERC721 compliant as long as it is done inside of the\n constructor, which is enforced by this function.\n CAUTION: Does not invoke `onERC721Received` on the receiver.\n Emits a {IERC2309-ConsecutiveTransfer} event."},"id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"_mintConsecutive","nameLocation":"3999:16:20","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"to","nameLocation":"4024:2:20","nodeType":"VariableDeclaration","scope":2773,"src":"4016:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"batchSize","nameLocation":"4035:9:20","nodeType":"VariableDeclaration","scope":2773,"src":"4028:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2671,"name":"uint96","nodeType":"ElementaryTypeName","src":"4028:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4015:30:20"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2773,"src":"4072:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2674,"name":"uint96","nodeType":"ElementaryTypeName","src":"4072:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4071:8:20"},"scope":2878,"src":"3990:1227:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2088],"body":{"id":2800,"nodeType":"Block","src":"5635:146:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2787,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5680:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Consecutive_$2878","typeString":"contract ERC721Consecutive"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721Consecutive_$2878","typeString":"contract ERC721Consecutive"}],"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5672:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"5672:7:20","typeDescriptions":{}}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5672:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2783,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"5653:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4524_$","typeString":"type(library Address)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":4212,"src":"5653:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5653:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231436f6e73656375746976653a2063616e2774206d696e7420647572696e6720636f6e737472756374696f6e","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5688:51:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e6d8904387bec5cc54c8eda8713a274ae101ec3c2267e311425a3508cc73a72","typeString":"literal_string \"ERC721Consecutive: can't mint during construction\""},"value":"ERC721Consecutive: can't mint during construction"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e6d8904387bec5cc54c8eda8713a274ae101ec3c2267e311425a3508cc73a72","typeString":"literal_string \"ERC721Consecutive: can't mint during construction\""}],"id":2782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5645:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5645:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"ExpressionStatement","src":"5645:95:20"},{"expression":{"arguments":[{"id":2796,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"5762:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"5766:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2793,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5750:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Consecutive_$2878_$","typeString":"type(contract super ERC721Consecutive)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"5750:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5750:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2799,"nodeType":"ExpressionStatement","src":"5750:24:20"}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"5223:337:20","text":" @dev See {ERC721-_mint}. Override version that restricts normal minting to after construction.\n Warning: Using {ERC721Consecutive} prevents using {_mint} during construction in favor of {_mintConsecutive}.\n After construction, {_mintConsecutive} is no longer available and {_mint} becomes available."},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"5574:5:20","nodeType":"FunctionDefinition","overrides":{"id":2780,"nodeType":"OverrideSpecifier","overrides":[],"src":"5626:8:20"},"parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"to","nameLocation":"5588:2:20","nodeType":"VariableDeclaration","scope":2801,"src":"5580:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"5580:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"tokenId","nameLocation":"5600:7:20","nodeType":"VariableDeclaration","scope":2801,"src":"5592:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5592:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5579:29:20"},"returnParameters":{"id":2781,"nodeType":"ParameterList","parameters":[],"src":"5635:0:20"},"scope":2878,"src":"5565:216:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2398],"body":{"id":2855,"nodeType":"Block","src":"6080:476:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"6107:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6121:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6113:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"6113:7:20","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6113:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6107:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6153:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2821,"name":"_totalConsecutiveSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"6168:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint96_$","typeString":"function () view returns (uint96)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6168:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6153:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6107:86:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6250:34:20","subExpression":{"arguments":[{"id":2827,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6271:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2825,"name":"_sequentialBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"6251:15:20","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage","typeString":"struct BitMaps.BitMap storage ref"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":9878,"src":"6251:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_BitMap_$9842_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_BitMap_$9842_storage_ptr_$","typeString":"function (struct BitMaps.BitMap storage pointer,uint256) view returns (bool)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6251:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6107:177:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2845,"nodeType":"IfStatement","src":"6090:390:20","trueBody":{"id":2844,"nodeType":"Block","src":"6338:142:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"6360:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6373:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6360:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231436f6e73656375746976653a206261746368206275726e206e6f7420737570706f72746564","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6376:45:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5205f41d5c9bf1d20237015c228aa73a3a45387215f6479c9f402f2845db4b2","typeString":"literal_string \"ERC721Consecutive: batch burn not supported\""},"value":"ERC721Consecutive: batch burn not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5205f41d5c9bf1d20237015c228aa73a3a45387215f6479c9f402f2845db4b2","typeString":"literal_string \"ERC721Consecutive: batch burn not supported\""}],"id":2831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6352:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6352:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"ExpressionStatement","src":"6352:70:20"},{"expression":{"arguments":[{"id":2841,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6456:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2838,"name":"_sequentialBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"6436:15:20","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage","typeString":"struct BitMaps.BitMap storage ref"}},"id":2840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":9937,"src":"6436:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_BitMap_$9842_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_BitMap_$9842_storage_ptr_$","typeString":"function (struct BitMaps.BitMap storage pointer,uint256)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6436:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2843,"nodeType":"ExpressionStatement","src":"6436:33:20"}]}},{"expression":{"arguments":[{"id":2849,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"6515:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"6521:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2851,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6525:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2852,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"6539:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2846,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6489:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Consecutive_$2878_$","typeString":"type(contract super ERC721Consecutive)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"6489:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6489:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2854,"nodeType":"ExpressionStatement","src":"6489:60:20"}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"5787:128:20","text":" @dev See {ERC721-_afterTokenTransfer}. Burning of tokens that have been sequentially minted must be explicit."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"5929:19:20","nodeType":"FunctionDefinition","overrides":{"id":2812,"nodeType":"OverrideSpecifier","overrides":[],"src":"6071:8:20"},"parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"from","nameLocation":"5966:4:20","nodeType":"VariableDeclaration","scope":2856,"src":"5958:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2806,"mutability":"mutable","name":"to","nameLocation":"5988:2:20","nodeType":"VariableDeclaration","scope":2856,"src":"5980:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"5980:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"firstTokenId","nameLocation":"6008:12:20","nodeType":"VariableDeclaration","scope":2856,"src":"6000:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6000:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"batchSize","nameLocation":"6038:9:20","nodeType":"VariableDeclaration","scope":2856,"src":"6030:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"6030:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5948:105:20"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[],"src":"6080:0:20"},"scope":2878,"src":"5920:636:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"6627:133:20","statements":[{"assignments":[2862,2864,null],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"exists","nameLocation":"6643:6:20","nodeType":"VariableDeclaration","scope":2876,"src":"6638:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2861,"name":"bool","nodeType":"ElementaryTypeName","src":"6638:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"latestId","nameLocation":"6658:8:20","nodeType":"VariableDeclaration","scope":2876,"src":"6651:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2863,"name":"uint96","nodeType":"ElementaryTypeName","src":"6651:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},null],"id":2868,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2865,"name":"_sequentialOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6672:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage","typeString":"struct Checkpoints.Trace160 storage ref"}},"id":2866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latestCheckpoint","nodeType":"MemberAccess","referencedDeclaration":5841,"src":"6672:37:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace160_$5567_storage_ptr_$returns$_t_bool_$_t_uint96_$_t_uint160_$bound_to$_t_struct$_Trace160_$5567_storage_ptr_$","typeString":"function (struct Checkpoints.Trace160 storage pointer) view returns (bool,uint96,uint160)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6672:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"nodeType":"VariableDeclarationStatement","src":"6637:74:20"},{"expression":{"condition":{"id":2869,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"6728:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6752:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6728:25:20","trueExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"latestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"6737:8:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6748:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6737:12:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2860,"id":2875,"nodeType":"Return","src":"6721:32:20"}]},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"_totalConsecutiveSupply","nameLocation":"6571:23:20","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[],"src":"6594:2:20"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"6619:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2858,"name":"uint96","nodeType":"ElementaryTypeName","src":"6619:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"6618:8:20"},"scope":2878,"src":"6562:198:20","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":2879,"src":"1623:5139:20","usedErrors":[]}],"src":"129:6634:20"},"id":20},"contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"ERC165":[7310],"ERC721":[2414],"ERC721Enumerable":[3232],"IERC165":[7322],"IERC721":[2530],"IERC721Enumerable":[3775],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":3233,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2880,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:21"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3233,"sourceUnit":2415,"src":"153:23:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":2882,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3233,"sourceUnit":3776,"src":"177:33:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2884,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"450:6:21"},"id":2885,"nodeType":"InheritanceSpecifier","src":"450:6:21"},{"baseName":{"id":2886,"name":"IERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":3775,"src":"458:17:21"},"id":2887,"nodeType":"InheritanceSpecifier","src":"458:17:21"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"212:199:21","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":false,"id":3232,"linearizedBaseContracts":[3232,3775,2414,3802,2530,7310,7322,6087],"name":"ERC721Enumerable","nameLocation":"430:16:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2893,"mutability":"mutable","name":"_ownedTokens","nameLocation":"591:12:21","nodeType":"VariableDeclaration","scope":3232,"src":"535:68:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":2892,"keyType":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"535:47:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":2891,"keyType":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"554:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2897,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"709:17:21","nodeType":"VariableDeclaration","scope":3232,"src":"673:53:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2896,"keyType":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"673:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2900,"mutability":"mutable","name":"_allTokens","nameLocation":"805:10:21","nodeType":"VariableDeclaration","scope":3232,"src":"787:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2899,"nodeType":"ArrayTypeName","src":"787:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":2904,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"922:15:21","nodeType":"VariableDeclaration","scope":3232,"src":"886:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2903,"keyType":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"886:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[1581,7321],"body":{"id":2927,"nodeType":"Block","src":"1113:114:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"1130:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2917,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"1150:17:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$3775_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$3775_$","typeString":"type(contract IERC721Enumerable)"}],"id":2916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1145:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1145:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$3775","typeString":"type(contract IERC721Enumerable)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1145:35:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1130:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2923,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"1208:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2921,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1184:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$3232_$","typeString":"type(contract super ERC721Enumerable)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"1184:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1184:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1130:90:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2914,"id":2926,"nodeType":"Return","src":"1123:97:21"}]},"documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"944:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1014:17:21","nodeType":"FunctionDefinition","overrides":{"id":2911,"nodeType":"OverrideSpecifier","overrides":[{"id":2909,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"1081:7:21"},{"id":2910,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"1090:6:21"}],"src":"1072:25:21"},"parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"interfaceId","nameLocation":"1039:11:21","nodeType":"VariableDeclaration","scope":2928,"src":"1032:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2906,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1032:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1031:20:21"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2928,"src":"1107:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2912,"name":"bool","nodeType":"ElementaryTypeName","src":"1107:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1106:6:21"},"scope":3232,"src":"1005:222:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3766],"body":{"id":2955,"nodeType":"Block","src":"1412:147:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"1430:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":2943,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"1455:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2941,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1438:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1605,"src":"1438:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1438:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1430:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1463:45:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":2939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1422:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:87:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"ExpressionStatement","src":"1422:87:21"},{"expression":{"baseExpression":{"baseExpression":{"id":2949,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1526:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2951,"indexExpression":{"id":2950,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"1539:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1526:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2953,"indexExpression":{"id":2952,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"1546:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1526:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2938,"id":2954,"nodeType":"Return","src":"1519:33:21"}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"1233:68:21","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":2956,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1315:19:21","nodeType":"FunctionDefinition","overrides":{"id":2935,"nodeType":"OverrideSpecifier","overrides":[],"src":"1385:8:21"},"parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"owner","nameLocation":"1343:5:21","nodeType":"VariableDeclaration","scope":2956,"src":"1335:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"index","nameLocation":"1358:5:21","nodeType":"VariableDeclaration","scope":2956,"src":"1350:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1334:30:21"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2956,"src":"1403:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1403:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1402:9:21"},"scope":3232,"src":"1306:253:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3756],"body":{"id":2966,"nodeType":"Block","src":"1700:41:21","statements":[{"expression":{"expression":{"id":2963,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"1717:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1717:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2962,"id":2965,"nodeType":"Return","src":"1710:24:21"}]},"documentation":{"id":2957,"nodeType":"StructuredDocumentation","src":"1565:60:21","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1639:11:21","nodeType":"FunctionDefinition","overrides":{"id":2959,"nodeType":"OverrideSpecifier","overrides":[],"src":"1673:8:21"},"parameters":{"id":2958,"nodeType":"ParameterList","parameters":[],"src":"1650:2:21"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2967,"src":"1691:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1690:9:21"},"scope":3232,"src":"1630:111:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3774],"body":{"id":2989,"nodeType":"Block","src":"1897:146:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"1915:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2978,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1923:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$3232_$","typeString":"type(contract ERC721Enumerable)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2967,"src":"1923:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1915:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1955:46:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":2976,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1907:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:95:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2984,"nodeType":"ExpressionStatement","src":"1907:95:21"},{"expression":{"baseExpression":{"id":2985,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2019:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2987,"indexExpression":{"id":2986,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2030:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2019:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2975,"id":2988,"nodeType":"Return","src":"2012:24:21"}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"1747:61:21","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1822:12:21","nodeType":"FunctionDefinition","overrides":{"id":2972,"nodeType":"OverrideSpecifier","overrides":[],"src":"1870:8:21"},"parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"index","nameLocation":"1843:5:21","nodeType":"VariableDeclaration","scope":2990,"src":"1835:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1834:15:21"},"returnParameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"1888:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1887:9:21"},"scope":3232,"src":"1813:230:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2385],"body":{"id":3069,"nodeType":"Block","src":"2273:729:21","statements":[{"expression":{"arguments":[{"id":3006,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2310:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2316:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3008,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"2320:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3009,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2334:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3003,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2283:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$3232_$","typeString":"type(contract super ERC721Enumerable)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"2283:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2283:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3011,"nodeType":"ExpressionStatement","src":"2283:61:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3012,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"2359:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2371:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2359:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3020,"nodeType":"IfStatement","src":"2355:219:21","trueBody":{"id":3019,"nodeType":"Block","src":"2374:200:21","statements":[{"expression":{"arguments":[{"hexValue":"455243373231456e756d657261626c653a20636f6e7365637574697665207472616e7366657273206e6f7420737570706f72746564","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2507:55:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""},"value":"ERC721Enumerable: consecutive transfers not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""}],"id":3015,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2500:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3018,"nodeType":"ExpressionStatement","src":"2500:63:21"}]}},{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"tokenId","nameLocation":"2592:7:21","nodeType":"VariableDeclaration","scope":3069,"src":"2584:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3024,"initialValue":{"id":3023,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"2602:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2584:30:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2629:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2637:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"2637:7:21","typeDescriptions":{}}},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2637:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2629:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2724:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3037,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2732:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2724:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3045,"nodeType":"IfStatement","src":"2720:88:21","trueBody":{"id":3044,"nodeType":"Block","src":"2736:72:21","statements":[{"expression":{"arguments":[{"id":3040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2783:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3041,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2789:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3039,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"2750:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3043,"nodeType":"ExpressionStatement","src":"2750:47:21"}]}},"id":3046,"nodeType":"IfStatement","src":"2625:183:21","trueBody":{"id":3035,"nodeType":"Block","src":"2649:65:21","statements":[{"expression":{"arguments":[{"id":3032,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2695:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3031,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"2663:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2663:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3034,"nodeType":"ExpressionStatement","src":"2663:40:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2821:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"2827:7:21","typeDescriptions":{}}},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2821:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2919:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3059,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"2925:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2919:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3067,"nodeType":"IfStatement","src":"2915:81:21","trueBody":{"id":3066,"nodeType":"Block","src":"2931:65:21","statements":[{"expression":{"arguments":[{"id":3062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"2973:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2977:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3061,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2945:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2945:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3065,"nodeType":"ExpressionStatement","src":"2945:40:21"}]}},"id":3068,"nodeType":"IfStatement","src":"2817:179:21","trueBody":{"id":3057,"nodeType":"Block","src":"2839:70:21","statements":[{"expression":{"arguments":[{"id":3054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2890:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3053,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"2853:36:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2853:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3056,"nodeType":"ExpressionStatement","src":"2853:45:21"}]}}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"2049:58:21","text":" @dev See {ERC721-_beforeTokenTransfer}."},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2121:20:21","nodeType":"FunctionDefinition","overrides":{"id":3001,"nodeType":"OverrideSpecifier","overrides":[],"src":"2264:8:21"},"parameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"from","nameLocation":"2159:4:21","nodeType":"VariableDeclaration","scope":3070,"src":"2151:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"2151:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"to","nameLocation":"2181:2:21","nodeType":"VariableDeclaration","scope":3070,"src":"2173:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"firstTokenId","nameLocation":"2201:12:21","nodeType":"VariableDeclaration","scope":3070,"src":"2193:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"batchSize","nameLocation":"2231:9:21","nodeType":"VariableDeclaration","scope":3070,"src":"2223:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2141:105:21"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[],"src":"2273:0:21"},"scope":3232,"src":"2112:890:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"3370:143:21","statements":[{"assignments":[3079],"declarations":[{"constant":false,"id":3079,"mutability":"mutable","name":"length","nameLocation":"3388:6:21","nodeType":"VariableDeclaration","scope":3099,"src":"3380:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3084,"initialValue":{"arguments":[{"id":3082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"3414:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3080,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3397:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1605,"src":"3397:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3397:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3380:37:21"},{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3085,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"3427:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3088,"indexExpression":{"id":3086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"3440:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3427:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3089,"indexExpression":{"id":3087,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"3444:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3427:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3090,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"3454:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3427:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"3427:34:21"},{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3093,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3471:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3095,"indexExpression":{"id":3094,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"3489:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3471:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3096,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"3500:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3471:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"3471:35:21"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"3008:283:21","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3305:27:21","nodeType":"FunctionDefinition","parameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"to","nameLocation":"3341:2:21","nodeType":"VariableDeclaration","scope":3100,"src":"3333:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"tokenId","nameLocation":"3353:7:21","nodeType":"VariableDeclaration","scope":3100,"src":"3345:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:29:21"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[],"src":"3370:0:21"},"scope":3232,"src":"3296:217:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3119,"nodeType":"Block","src":"3774:95:21","statements":[{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3106,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"3784:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3108,"indexExpression":{"id":3107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"3800:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3784:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3109,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3811:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3811:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3784:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3112,"nodeType":"ExpressionStatement","src":"3784:44:21"},{"expression":{"arguments":[{"id":3116,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"3854:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3113,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3838:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3838:15:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3118,"nodeType":"ExpressionStatement","src":"3838:24:21"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"3519:184:21","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":3120,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3717:31:21","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"tokenId","nameLocation":"3757:7:21","nodeType":"VariableDeclaration","scope":3120,"src":"3749:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3749:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3748:17:21"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[],"src":"3774:0:21"},"scope":3232,"src":"3708:161:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3182,"nodeType":"Block","src":"4567:889:21","statements":[{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4756:14:21","nodeType":"VariableDeclaration","scope":3182,"src":"4748:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3136,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3132,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"4790:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3130,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4773:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2414_$","typeString":"type(contract ERC721)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1605,"src":"4773:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4773:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4798:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4773:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4748:51:21"},{"assignments":[3138],"declarations":[{"constant":false,"id":3138,"mutability":"mutable","name":"tokenIndex","nameLocation":"4817:10:21","nodeType":"VariableDeclaration","scope":3182,"src":"4809:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3142,"initialValue":{"baseExpression":{"id":3139,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4830:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3141,"indexExpression":{"id":3140,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"4848:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4830:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4809:47:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"4960:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3144,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"4974:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4960:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3169,"nodeType":"IfStatement","src":"4956:323:21","trueBody":{"id":3168,"nodeType":"Block","src":"4990:289:21","statements":[{"assignments":[3147],"declarations":[{"constant":false,"id":3147,"mutability":"mutable","name":"lastTokenId","nameLocation":"5012:11:21","nodeType":"VariableDeclaration","scope":3168,"src":"5004:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"5004:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3153,"initialValue":{"baseExpression":{"baseExpression":{"id":3148,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"5026:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3150,"indexExpression":{"id":3149,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5039:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5026:18:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3152,"indexExpression":{"id":3151,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5045:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5026:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5004:56:21"},{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3154,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"5075:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3157,"indexExpression":{"id":3155,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5088:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5075:18:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3158,"indexExpression":{"id":3156,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"5094:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5075:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3159,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"5108:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5075:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3161,"nodeType":"ExpressionStatement","src":"5075:44:21"},{"expression":{"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3162,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"5191:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3164,"indexExpression":{"id":3163,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"5209:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5191:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3165,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"5224:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5191:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3167,"nodeType":"ExpressionStatement","src":"5191:43:21"}]}},{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5365:33:21","subExpression":{"baseExpression":{"id":3170,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"5372:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3172,"indexExpression":{"id":3171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"5390:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5372:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3174,"nodeType":"ExpressionStatement","src":"5365:33:21"},{"expression":{"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5408:41:21","subExpression":{"baseExpression":{"baseExpression":{"id":3175,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"5415:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3177,"indexExpression":{"id":3176,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5428:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5415:18:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3179,"indexExpression":{"id":3178,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5434:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5415:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3181,"nodeType":"ExpressionStatement","src":"5408:41:21"}]},"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"3875:606:21","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4495:32:21","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"from","nameLocation":"4536:4:21","nodeType":"VariableDeclaration","scope":3183,"src":"4528:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3122,"name":"address","nodeType":"ElementaryTypeName","src":"4528:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"tokenId","nameLocation":"4550:7:21","nodeType":"VariableDeclaration","scope":3183,"src":"4542:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"4542:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4527:31:21"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[],"src":"4567:0:21"},"scope":3232,"src":"4486:970:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3230,"nodeType":"Block","src":"5815:990:21","statements":[{"assignments":[3190],"declarations":[{"constant":false,"id":3190,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6001:14:21","nodeType":"VariableDeclaration","scope":3230,"src":"5993:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"5993:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3195,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3191,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6018:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6018:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6038:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6018:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5993:46:21"},{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"tokenIndex","nameLocation":"6057:10:21","nodeType":"VariableDeclaration","scope":3230,"src":"6049:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"baseExpression":{"id":3198,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"6070:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3200,"indexExpression":{"id":3199,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"6086:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6070:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6049:45:21"},{"assignments":[3203],"declarations":[{"constant":false,"id":3203,"mutability":"mutable","name":"lastTokenId","nameLocation":"6424:11:21","nodeType":"VariableDeclaration","scope":3230,"src":"6416:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3207,"initialValue":{"baseExpression":{"id":3204,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6438:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3206,"indexExpression":{"id":3205,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"6449:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6438:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6416:48:21"},{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3208,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6475:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3210,"indexExpression":{"id":3209,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"6486:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3211,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6500:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3213,"nodeType":"ExpressionStatement","src":"6475:36:21"},{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3214,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"6579:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3216,"indexExpression":{"id":3215,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6595:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6579:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3217,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"6610:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6579:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"6579:41:21"},{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6741:31:21","subExpression":{"baseExpression":{"id":3220,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"6748:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3222,"indexExpression":{"id":3221,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"6764:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6748:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3224,"nodeType":"ExpressionStatement","src":"6741:31:21"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3225,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6782:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"6782:14:21","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6782:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"6782:16:21"}]},"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"5462:277:21","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":3231,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5753:36:21","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"tokenId","nameLocation":"5798:7:21","nodeType":"VariableDeclaration","scope":3231,"src":"5790:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:17:21"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"5815:0:21"},"scope":3232,"src":"5744:1061:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3233,"src":"412:6395:21","usedErrors":[]}],"src":"128:6680:21"},"id":21},"contracts/token/ERC721/extensions/ERC721Pausable.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721Pausable.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"ERC165":[7310],"ERC721":[2414],"ERC721Pausable":[3272],"IERC165":[7322],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"Pausable":[1487],"SignedMath":[9834],"Strings":[6716]},"id":3273,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3234,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:22"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3273,"sourceUnit":2415,"src":"151:23:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/security/Pausable.sol","file":"../../../security/Pausable.sol","id":3236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3273,"sourceUnit":1488,"src":"175:40:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3238,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"890:6:22"},"id":3239,"nodeType":"InheritanceSpecifier","src":"890:6:22"},{"baseName":{"id":3240,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"898:8:22"},"id":3241,"nodeType":"InheritanceSpecifier","src":"898:8:22"}],"canonicalName":"ERC721Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3237,"nodeType":"StructuredDocumentation","src":"217:636:22","text":" @dev ERC721 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract unpausable."},"fullyImplemented":false,"id":3272,"linearizedBaseContracts":[3272,1487,2414,3802,2530,7310,7322,6087],"name":"ERC721Pausable","nameLocation":"872:14:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2385],"body":{"id":3270,"nodeType":"Block","src":"1214:154:22","statements":[{"expression":{"arguments":[{"id":3257,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"1251:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3258,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"1257:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3259,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1261:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3260,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1275:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3254,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1224:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Pausable_$3272_$","typeString":"type(contract super ERC721Pausable)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"1224:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1224:61:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3262,"nodeType":"ExpressionStatement","src":"1224:61:22"},{"expression":{"arguments":[{"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1304:9:22","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3264,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"1305:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1305:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1315:45:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_08db93f8e1c3024ee7c131cc7a109eb4e5cb2ff5f9a23b64fb5b344cedec8968","typeString":"literal_string \"ERC721Pausable: token transfer while paused\""},"value":"ERC721Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08db93f8e1c3024ee7c131cc7a109eb4e5cb2ff5f9a23b64fb5b344cedec8968","typeString":"literal_string \"ERC721Pausable: token transfer while paused\""}],"id":3263,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1296:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1296:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3269,"nodeType":"ExpressionStatement","src":"1296:65:22"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"913:135:22","text":" @dev See {ERC721-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":3271,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1062:20:22","nodeType":"FunctionDefinition","overrides":{"id":3252,"nodeType":"OverrideSpecifier","overrides":[],"src":"1205:8:22"},"parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"from","nameLocation":"1100:4:22","nodeType":"VariableDeclaration","scope":3271,"src":"1092:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"to","nameLocation":"1122:2:22","nodeType":"VariableDeclaration","scope":3271,"src":"1114:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"firstTokenId","nameLocation":"1142:12:22","nodeType":"VariableDeclaration","scope":3271,"src":"1134:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3250,"mutability":"mutable","name":"batchSize","nameLocation":"1172:9:22","nodeType":"VariableDeclaration","scope":3271,"src":"1164:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1164:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:105:22"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[],"src":"1214:0:22"},"scope":3272,"src":"1053:315:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3273,"src":"854:516:22","usedErrors":[]}],"src":"126:1245:22"},"id":22},"contracts/token/ERC721/extensions/ERC721Royalty.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721Royalty.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"ERC165":[7310],"ERC2981":[4194],"ERC721":[2414],"ERC721Royalty":[3318],"IERC165":[7322],"IERC2981":[1305],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":3319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3274,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:23"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3319,"sourceUnit":2415,"src":"150:23:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/common/ERC2981.sol","file":"../../common/ERC2981.sol","id":3276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3319,"sourceUnit":4195,"src":"174:34:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":3277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3319,"sourceUnit":7311,"src":"209:49:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3279,"name":"ERC2981","nodeType":"IdentifierPath","referencedDeclaration":4194,"src":"1032:7:23"},"id":3280,"nodeType":"InheritanceSpecifier","src":"1032:7:23"},{"baseName":{"id":3281,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"1041:6:23"},"id":3282,"nodeType":"InheritanceSpecifier","src":"1041:6:23"}],"canonicalName":"ERC721Royalty","contractDependencies":[],"contractKind":"contract","documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"260:736:23","text":" @dev Extension of ERC721 with the ERC2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n information.\n Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for\n specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n _Available since v4.5._"},"fullyImplemented":false,"id":3318,"linearizedBaseContracts":[3318,2414,3802,2530,4194,7310,1305,7322,6087],"name":"ERC721Royalty","nameLocation":"1015:13:23","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1581,4042],"body":{"id":3298,"nodeType":"Block","src":"1223:60:23","statements":[{"expression":{"arguments":[{"id":3295,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"1264:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3293,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1240:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Royalty_$3318_$","typeString":"type(contract super ERC721Royalty)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"1240:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3292,"id":3297,"nodeType":"Return","src":"1233:43:23"}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"1054:56:23","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3299,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1124:17:23","nodeType":"FunctionDefinition","overrides":{"id":3289,"nodeType":"OverrideSpecifier","overrides":[{"id":3287,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"1191:6:23"},{"id":3288,"name":"ERC2981","nodeType":"IdentifierPath","referencedDeclaration":4194,"src":"1199:7:23"}],"src":"1182:25:23"},"parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"interfaceId","nameLocation":"1149:11:23","nodeType":"VariableDeclaration","scope":3299,"src":"1142:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3284,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1142:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1141:20:23"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3299,"src":"1217:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3290,"name":"bool","nodeType":"ElementaryTypeName","src":"1217:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1216:6:23"},"scope":3318,"src":"1115:168:23","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2155],"body":{"id":3316,"nodeType":"Block","src":"1468:74:23","statements":[{"expression":{"arguments":[{"id":3309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"1490:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3306,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1478:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Royalty_$3318_$","typeString":"type(contract super ERC721Royalty)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"1478:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1478:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3311,"nodeType":"ExpressionStatement","src":"1478:20:23"},{"expression":{"arguments":[{"id":3313,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"1527:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3312,"name":"_resetTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"1508:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1508:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3315,"nodeType":"ExpressionStatement","src":"1508:27:23"}]},"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"1289:116:23","text":" @dev See {ERC721-_burn}. This override additionally clears the royalty information for the token."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1419:5:23","nodeType":"FunctionDefinition","overrides":{"id":3304,"nodeType":"OverrideSpecifier","overrides":[],"src":"1459:8:23"},"parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"tokenId","nameLocation":"1433:7:23","nodeType":"VariableDeclaration","scope":3317,"src":"1425:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1424:17:23"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[],"src":"1468:0:23"},"scope":3318,"src":"1410:132:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3319,"src":"997:547:23","usedErrors":[]}],"src":"125:1420:23"},"id":23},"contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"ERC165":[7310],"ERC721":[2414],"ERC721URIStorage":[3474],"IERC165":[7322],"IERC4906":[1327],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":3475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:24"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3475,"sourceUnit":2415,"src":"153:23:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":3322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3475,"sourceUnit":1328,"src":"177:42:24","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3324,"name":"IERC4906","nodeType":"IdentifierPath","referencedDeclaration":1327,"src":"329:8:24"},"id":3325,"nodeType":"InheritanceSpecifier","src":"329:8:24"},{"baseName":{"id":3326,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"339:6:24"},"id":3327,"nodeType":"InheritanceSpecifier","src":"339:6:24"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"221:69:24","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":3474,"linearizedBaseContracts":[3474,2414,3802,1327,2530,7310,7322,6087],"name":"ERC721URIStorage","nameLocation":"309:16:24","nodeType":"ContractDefinition","nodes":[{"id":3330,"libraryName":{"id":3328,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":6716,"src":"358:7:24"},"nodeType":"UsingForDirective","src":"352:26:24","typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3334,"mutability":"mutable","name":"_tokenURIs","nameLocation":"458:10:24","nodeType":"VariableDeclaration","scope":3474,"src":"423:45:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3333,"keyType":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":3332,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1581,7321],"body":{"id":3357,"nodeType":"Block","src":"643:97:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"660:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:10:24","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"675:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3346,"name":"bytes4","nodeType":"ElementaryTypeName","src":"675:6:24","typeDescriptions":{}}},"id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"675:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"660:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3353,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"721:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3351,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"697:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3474_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"697:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"697:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"660:73:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3344,"id":3356,"nodeType":"Return","src":"653:80:24"}]},"documentation":{"id":3335,"nodeType":"StructuredDocumentation","src":"475:55:24","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":3358,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"544:17:24","nodeType":"FunctionDefinition","overrides":{"id":3341,"nodeType":"OverrideSpecifier","overrides":[{"id":3339,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"611:6:24"},{"id":3340,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"619:7:24"}],"src":"602:25:24"},"parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"interfaceId","nameLocation":"569:11:24","nodeType":"VariableDeclaration","scope":3358,"src":"562:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3336,"name":"bytes4","nodeType":"ElementaryTypeName","src":"562:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"561:20:24"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3358,"src":"637:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3342,"name":"bool","nodeType":"ElementaryTypeName","src":"637:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"636:6:24"},"scope":3474,"src":"535:205:24","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1692],"body":{"id":3416,"nodeType":"Block","src":"894:520:24","statements":[{"expression":{"arguments":[{"id":3368,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"919:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3367,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"904:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3370,"nodeType":"ExpressionStatement","src":"904:23:24"},{"assignments":[3372],"declarations":[{"constant":false,"id":3372,"mutability":"mutable","name":"_tokenURI","nameLocation":"952:9:24","nodeType":"VariableDeclaration","scope":3416,"src":"938:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3371,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3376,"initialValue":{"baseExpression":{"id":3373,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"964:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3375,"indexExpression":{"id":3374,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:19:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"938:45:24"},{"assignments":[3378],"declarations":[{"constant":false,"id":3378,"mutability":"mutable","name":"base","nameLocation":"1007:4:24","nodeType":"VariableDeclaration","scope":3416,"src":"993:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3377,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3381,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3379,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1014:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1014:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"993:31:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3384,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"1103:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3382,"name":"bytes","nodeType":"ElementaryTypeName","src":"1097:5:24","typeDescriptions":{}}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1097:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1097:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1097:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"1093:70:24","trueBody":{"id":3391,"nodeType":"Block","src":"1122:41:24","statements":[{"expression":{"id":3389,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1143:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3366,"id":3390,"nodeType":"Return","src":"1136:16:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3395,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1271:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3393,"name":"bytes","nodeType":"ElementaryTypeName","src":"1265:5:24","typeDescriptions":{}}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1265:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1265:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3410,"nodeType":"IfStatement","src":"1261:106:24","trueBody":{"id":3409,"nodeType":"Block","src":"1294:73:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":3404,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"1339:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3405,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1345:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3402,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1322:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1322:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1322:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1315:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3400,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:24","typeDescriptions":{}}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3366,"id":3408,"nodeType":"Return","src":"1308:48:24"}]}},{"expression":{"arguments":[{"id":3413,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"1399:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3411,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3474_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"1384:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1384:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3366,"id":3415,"nodeType":"Return","src":"1377:30:24"}]},"documentation":{"id":3359,"nodeType":"StructuredDocumentation","src":"746:55:24","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"815:8:24","nodeType":"FunctionDefinition","overrides":{"id":3363,"nodeType":"OverrideSpecifier","overrides":[],"src":"861:8:24"},"parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"tokenId","nameLocation":"832:7:24","nodeType":"VariableDeclaration","scope":3417,"src":"824:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:17:24"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"879:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3364,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:24"},"scope":3474,"src":"806:608:24","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3442,"nodeType":"Block","src":"1680:172:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":3427,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"1706:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3426,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1698:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1698:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:48:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":3425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1690:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"ExpressionStatement","src":"1690:75:24"},{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3432,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1775:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3434,"indexExpression":{"id":3433,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"1786:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1775:19:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3435,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"1797:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1775:31:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3437,"nodeType":"ExpressionStatement","src":"1775:31:24"},{"eventCall":{"arguments":[{"id":3439,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"1837:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"1822:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1822:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3441,"nodeType":"EmitStatement","src":"1817:28:24"}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"1420:174:24","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1608:12:24","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"tokenId","nameLocation":"1629:7:24","nodeType":"VariableDeclaration","scope":3443,"src":"1621:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"_tokenURI","nameLocation":"1652:9:24","nodeType":"VariableDeclaration","scope":3443,"src":"1638:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3421,"name":"string","nodeType":"ElementaryTypeName","src":"1638:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:42:24"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[],"src":"1680:0:24"},"scope":3474,"src":"1599:253:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2155],"body":{"id":3472,"nodeType":"Block","src":"2128:142:24","statements":[{"expression":{"arguments":[{"id":3453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"2150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3450,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2138:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3474_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"2138:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2138:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3455,"nodeType":"ExpressionStatement","src":"2138:20:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":3458,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2179:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3460,"indexExpression":{"id":3459,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"2190:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2179:19:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2173:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3456,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:24","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2173:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2173:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3471,"nodeType":"IfStatement","src":"2169:95:24","trueBody":{"id":3470,"nodeType":"Block","src":"2213:51:24","statements":[{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2227:26:24","subExpression":{"baseExpression":{"id":3465,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2234:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3467,"indexExpression":{"id":3466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"2245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:19:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3469,"nodeType":"ExpressionStatement","src":"2227:26:24"}]}}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"1858:207:24","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2079:5:24","nodeType":"FunctionDefinition","overrides":{"id":3448,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:24"},"parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"tokenId","nameLocation":"2093:7:24","nodeType":"VariableDeclaration","scope":3473,"src":"2085:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2084:17:24"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[],"src":"2128:0:24"},"scope":3474,"src":"2070:200:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3475,"src":"291:1981:24","usedErrors":[]}],"src":"128:2145:24"},"id":24},"contracts/token/ERC721/extensions/ERC721Votes.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721Votes.sol","exportedSymbols":{"Address":[4524],"Checkpoints":[6065],"Context":[6087],"Counters":[6161],"ECDSA":[7082],"EIP712":[7286],"ERC165":[7310],"ERC721":[2414],"ERC721Votes":[3527],"IERC165":[7322],"IERC5267":[1352],"IERC5805":[1361],"IERC6372":[1376],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"IVotes":[717],"Math":[8188],"SafeCast":[9729],"ShortString":[6166],"ShortStrings":[6377],"SignedMath":[9834],"StorageSlot":[6487],"Strings":[6716],"Votes":[1268]},"id":3528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3476,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:25"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3528,"sourceUnit":2415,"src":"148:23:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":3478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3528,"sourceUnit":1269,"src":"172:45:25","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3480,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"777:6:25"},"id":3481,"nodeType":"InheritanceSpecifier","src":"777:6:25"},{"baseName":{"id":3482,"name":"Votes","nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"785:5:25"},"id":3483,"nodeType":"InheritanceSpecifier","src":"785:5:25"}],"canonicalName":"ERC721Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":3479,"nodeType":"StructuredDocumentation","src":"219:524:25","text":" @dev Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts\n as 1 vote unit.\n Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost\n on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of\n the votes in governance decisions, or they can delegate to themselves to be their own representative.\n _Available since v4.5._"},"fullyImplemented":false,"id":3527,"linearizedBaseContracts":[3527,1268,1361,717,1376,7286,1352,2414,3802,2530,7310,7322,6087],"name":"ERC721Votes","nameLocation":"762:11:25","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2398],"body":{"id":3511,"nodeType":"Block","src":"1121:128:25","statements":[{"expression":{"arguments":[{"id":3497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"1152:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1158:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3499,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"1162:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3496,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"1131:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3501,"nodeType":"ExpressionStatement","src":"1131:41:25"},{"expression":{"arguments":[{"id":3505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"1208:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1214:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3507,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"1218:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3508,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"1232:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3502,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1182:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Votes_$3527_$","typeString":"type(contract super ERC721Votes)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"1182:25:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1182:60:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3510,"nodeType":"ExpressionStatement","src":"1182:60:25"}]},"documentation":{"id":3484,"nodeType":"StructuredDocumentation","src":"797:159:25","text":" @dev See {ERC721-_afterTokenTransfer}. Adjusts votes when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":3512,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"970:19:25","nodeType":"FunctionDefinition","overrides":{"id":3494,"nodeType":"OverrideSpecifier","overrides":[],"src":"1112:8:25"},"parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"from","nameLocation":"1007:4:25","nodeType":"VariableDeclaration","scope":3512,"src":"999:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3485,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"to","nameLocation":"1029:2:25","nodeType":"VariableDeclaration","scope":3512,"src":"1021:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"firstTokenId","nameLocation":"1049:12:25","nodeType":"VariableDeclaration","scope":3512,"src":"1041:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"batchSize","nameLocation":"1079:9:25","nodeType":"VariableDeclaration","scope":3512,"src":"1071:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:105:25"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[],"src":"1121:0:25"},"scope":3527,"src":"961:288:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1267],"body":{"id":3525,"nodeType":"Block","src":"1503:42:25","statements":[{"expression":{"arguments":[{"id":3522,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"1530:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3521,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"1520:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1520:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3520,"id":3524,"nodeType":"Return","src":"1513:25:25"}]},"documentation":{"id":3513,"nodeType":"StructuredDocumentation","src":"1255:152:25","text":" @dev Returns the balance of `account`.\n WARNING: Overriding this function will likely result in incorrect vote tracking."},"id":3526,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"1421:15:25","nodeType":"FunctionDefinition","overrides":{"id":3517,"nodeType":"OverrideSpecifier","overrides":[],"src":"1476:8:25"},"parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"account","nameLocation":"1445:7:25","nodeType":"VariableDeclaration","scope":3526,"src":"1437:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3514,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1436:17:25"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3526,"src":"1494:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1494:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1493:9:25"},"scope":3527,"src":"1412:133:25","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3528,"src":"744:803:25","usedErrors":[6174,6176]}],"src":"123:1425:25"},"id":25},"contracts/token/ERC721/extensions/ERC721Wrapper.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/ERC721Wrapper.sol","exportedSymbols":{"Address":[4524],"Context":[6087],"ERC165":[7310],"ERC721":[2414],"ERC721Wrapper":[3744],"IERC165":[7322],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":3745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3529,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:26"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3745,"sourceUnit":2415,"src":"150:23:26","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3532,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"638:6:26"},"id":3533,"nodeType":"InheritanceSpecifier","src":"638:6:26"},{"baseName":{"id":3534,"name":"IERC721Receiver","nodeType":"IdentifierPath","referencedDeclaration":2548,"src":"646:15:26"},"id":3535,"nodeType":"InheritanceSpecifier","src":"646:15:26"}],"canonicalName":"ERC721Wrapper","contractDependencies":[],"contractKind":"contract","documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"175:427:26","text":" @dev Extension of the ERC721 token contract to support token wrapping.\n Users can deposit and withdraw an \"underlying token\" and receive a \"wrapped token\" with a matching tokenId. This is useful\n in conjunction with other modules. For example, combining this wrapping mechanism with {ERC721Votes} will allow the\n wrapping of an existing \"basic\" ERC721 into a governance token.\n _Available since v4.9.0_"},"fullyImplemented":false,"id":3744,"linearizedBaseContracts":[3744,2548,2414,3802,2530,7310,7322,6087],"name":"ERC721Wrapper","nameLocation":"621:13:26","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3538,"mutability":"immutable","name":"_underlying","nameLocation":"694:11:26","nodeType":"VariableDeclaration","scope":3744,"src":"668:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"},"typeName":{"id":3537,"nodeType":"UserDefinedTypeName","pathNode":{"id":3536,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"668:7:26"},"referencedDeclaration":2530,"src":"668:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"visibility":"private"},{"body":{"id":3548,"nodeType":"Block","src":"749:46:26","statements":[{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3544,"name":"_underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"759:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3545,"name":"underlyingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"773:15:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"src":"759:29:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"id":3547,"nodeType":"ExpressionStatement","src":"759:29:26"}]},"id":3549,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"underlyingToken","nameLocation":"732:15:26","nodeType":"VariableDeclaration","scope":3549,"src":"724:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"},"typeName":{"id":3540,"nodeType":"UserDefinedTypeName","pathNode":{"id":3539,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"724:7:26"},"referencedDeclaration":2530,"src":"724:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"visibility":"internal"}],"src":"723:25:26"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[],"src":"749:0:26"},"scope":3744,"src":"712:83:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3602,"nodeType":"Block","src":"1002:583:26","statements":[{"assignments":[3561],"declarations":[{"constant":false,"id":3561,"mutability":"mutable","name":"length","nameLocation":"1020:6:26","nodeType":"VariableDeclaration","scope":3602,"src":"1012:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3564,"initialValue":{"expression":{"id":3562,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"1029:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1029:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1012:32:26"},{"body":{"id":3598,"nodeType":"Block","src":"1091:466:26","statements":[{"assignments":[3576],"declarations":[{"constant":false,"id":3576,"mutability":"mutable","name":"tokenId","nameLocation":"1113:7:26","nodeType":"VariableDeclaration","scope":3598,"src":"1105:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1105:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3580,"initialValue":{"baseExpression":{"id":3577,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"1123:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3579,"indexExpression":{"id":3578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"1132:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1123:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1105:29:26"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3584,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"1468:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1468:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3588,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1490:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Wrapper_$3744","typeString":"contract ERC721Wrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721Wrapper_$3744","typeString":"contract ERC721Wrapper"}],"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1482:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3586,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:26","typeDescriptions":{}}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3590,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1497:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3581,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"1442:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IERC721_$2530_$","typeString":"function () view returns (contract IERC721)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1442:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"1442:25:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1442:63:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3592,"nodeType":"ExpressionStatement","src":"1442:63:26"},{"expression":{"arguments":[{"id":3594,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"1529:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1538:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3593,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1982,2011],"referencedDeclaration":1982,"src":"1519:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1519:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3597,"nodeType":"ExpressionStatement","src":"1519:27:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"1074:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3570,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"1078:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3599,"initializationExpression":{"assignments":[3566],"declarations":[{"constant":false,"id":3566,"mutability":"mutable","name":"i","nameLocation":"1067:1:26","nodeType":"VariableDeclaration","scope":3599,"src":"1059:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3568,"initialValue":{"hexValue":"30","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1071:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1059:13:26"},"loopExpression":{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1086:3:26","subExpression":{"id":3572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"1088:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"1086:3:26"},"nodeType":"ForStatement","src":"1054:503:26"},{"expression":{"hexValue":"74727565","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1574:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3559,"id":3601,"nodeType":"Return","src":"1567:11:26"}]},"documentation":{"id":3550,"nodeType":"StructuredDocumentation","src":"801:102:26","text":" @dev Allow a user to deposit underlying tokens and mint the corresponding tokenIds."},"functionSelector":"cace6eb2","id":3603,"implemented":true,"kind":"function","modifiers":[],"name":"depositFor","nameLocation":"917:10:26","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"account","nameLocation":"936:7:26","nodeType":"VariableDeclaration","scope":3603,"src":"928:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3551,"name":"address","nodeType":"ElementaryTypeName","src":"928:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"tokenIds","nameLocation":"962:8:26","nodeType":"VariableDeclaration","scope":3603,"src":"945:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ArrayTypeName","src":"945:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"927:44:26"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3603,"src":"996:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3557,"name":"bool","nodeType":"ElementaryTypeName","src":"996:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"995:6:26"},"scope":3744,"src":"908:677:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3663,"nodeType":"Block","src":"1815:686:26","statements":[{"assignments":[3615],"declarations":[{"constant":false,"id":3615,"mutability":"mutable","name":"length","nameLocation":"1833:6:26","nodeType":"VariableDeclaration","scope":3663,"src":"1825:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3618,"initialValue":{"expression":{"id":3616,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"1842:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1842:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1825:32:26"},{"body":{"id":3659,"nodeType":"Block","src":"1904:569:26","statements":[{"assignments":[3630],"declarations":[{"constant":false,"id":3630,"mutability":"mutable","name":"tokenId","nameLocation":"1926:7:26","nodeType":"VariableDeclaration","scope":3659,"src":"1918:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3634,"initialValue":{"baseExpression":{"id":3631,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"1936:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3633,"indexExpression":{"id":3632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"1945:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1936:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1918:29:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3637,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"1988:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1988:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3639,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"2002:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3636,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"1969:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1969:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231577261707065723a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:54:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_20503d077a80f3e48b47d24419679126f3c5c92e1299d1cd550745e91a8b7612","typeString":"literal_string \"ERC721Wrapper: caller is not token owner or approved\""},"value":"ERC721Wrapper: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20503d077a80f3e48b47d24419679126f3c5c92e1299d1cd550745e91a8b7612","typeString":"literal_string \"ERC721Wrapper: caller is not token owner or approved\""}],"id":3635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1961:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1961:106:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3643,"nodeType":"ExpressionStatement","src":"1961:106:26"},{"expression":{"arguments":[{"id":3645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"2087:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3644,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"2081:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3647,"nodeType":"ExpressionStatement","src":"2081:14:26"},{"expression":{"arguments":[{"arguments":[{"id":3653,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2438:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Wrapper_$3744","typeString":"contract ERC721Wrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721Wrapper_$3744","typeString":"contract ERC721Wrapper"}],"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2430:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3651,"name":"address","nodeType":"ElementaryTypeName","src":"2430:7:26","typeDescriptions":{}}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2430:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2445:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3656,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"2454:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3648,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"2400:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IERC721_$2530_$","typeString":"function () view returns (contract IERC721)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2400:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2485,"src":"2400:29:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2400:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3658,"nodeType":"ExpressionStatement","src":"2400:62:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"1887:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3624,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1891:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1887:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"initializationExpression":{"assignments":[3620],"declarations":[{"constant":false,"id":3620,"mutability":"mutable","name":"i","nameLocation":"1880:1:26","nodeType":"VariableDeclaration","scope":3660,"src":"1872:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3622,"initialValue":{"hexValue":"30","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1872:13:26"},"loopExpression":{"expression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1899:3:26","subExpression":{"id":3626,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"1901:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3628,"nodeType":"ExpressionStatement","src":"1899:3:26"},"nodeType":"ForStatement","src":"1867:606:26"},{"expression":{"hexValue":"74727565","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2490:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3613,"id":3662,"nodeType":"Return","src":"2483:11:26"}]},"documentation":{"id":3604,"nodeType":"StructuredDocumentation","src":"1591:125:26","text":" @dev Allow a user to burn wrapped tokens and withdraw the corresponding tokenIds of the underlying tokens."},"functionSelector":"7c1b126c","id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"1730:10:26","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"account","nameLocation":"1749:7:26","nodeType":"VariableDeclaration","scope":3664,"src":"1741:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3605,"name":"address","nodeType":"ElementaryTypeName","src":"1741:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"tokenIds","nameLocation":"1775:8:26","nodeType":"VariableDeclaration","scope":3664,"src":"1758:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3608,"nodeType":"ArrayTypeName","src":"1758:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1740:44:26"},"returnParameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3664,"src":"1809:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3611,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:26"},"scope":3744,"src":"1721:780:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2547],"body":{"id":3700,"nodeType":"Block","src":"3118:198:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3682,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"3144:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IERC721_$2530_$","typeString":"function () view returns (contract IERC721)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3144:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}],"id":3681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3136:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"3136:7:26","typeDescriptions":{}}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3136:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3685,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3161:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3161:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3136:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231577261707065723a2063616c6c6572206973206e6f7420756e6465726c79696e67","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3175:41:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f54db49d5c48ee5ed1b85ddddc33d0093cf8eea704b1d06d5ab2586de41bd75f","typeString":"literal_string \"ERC721Wrapper: caller is not underlying\""},"value":"ERC721Wrapper: caller is not underlying"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f54db49d5c48ee5ed1b85ddddc33d0093cf8eea704b1d06d5ab2586de41bd75f","typeString":"literal_string \"ERC721Wrapper: caller is not underlying\""}],"id":3679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3128:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3128:89:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3690,"nodeType":"ExpressionStatement","src":"3128:89:26"},{"expression":{"arguments":[{"id":3692,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"3237:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3693,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3243:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3691,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1982,2011],"referencedDeclaration":1982,"src":"3227:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3227:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3695,"nodeType":"ExpressionStatement","src":"3227:24:26"},{"expression":{"expression":{"expression":{"id":3696,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3268:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2548_$","typeString":"type(contract IERC721Receiver)"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"3268:32:26","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3268:41:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3678,"id":3699,"nodeType":"Return","src":"3261:48:26"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"2507:447:26","text":" @dev Overrides {IERC721Receiver-onERC721Received} to allow minting on direct ERC721 transfers to\n this contract.\n In case there's data attached, it validates that the operator is this contract, so only trusted data\n is accepted from {depositFor}.\n WARNING: Doesn't work with unsafe transfers (eg. {IERC721-transferFrom}). Use {ERC721Wrapper-_recover}\n for recovering in that scenario."},"functionSelector":"150b7a02","id":3701,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"2968:16:26","nodeType":"FunctionDefinition","overrides":{"id":3675,"nodeType":"OverrideSpecifier","overrides":[],"src":"3092:8:26"},"parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3701,"src":"2994:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"from","nameLocation":"3019:4:26","nodeType":"VariableDeclaration","scope":3701,"src":"3011:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"3011:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"tokenId","nameLocation":"3041:7:26","nodeType":"VariableDeclaration","scope":3701,"src":"3033:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"3033:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3701,"src":"3058:12:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3672,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2984:92:26"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3701,"src":"3110:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3676,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3110:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3109:8:26"},"scope":3744,"src":"2959:357:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3732,"nodeType":"Block","src":"3609:178:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3715,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3712,"name":"underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"3627:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IERC721_$2530_$","typeString":"function () view returns (contract IERC721)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3627:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2463,"src":"3627:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3627:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3719,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3668:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Wrapper_$3744","typeString":"contract ERC721Wrapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC721Wrapper_$3744","typeString":"contract ERC721Wrapper"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3660:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"3660:7:26","typeDescriptions":{}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3660:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3627:46:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231577261707065723a2077726170706572206973206e6f7420746f6b656e206f776e6572","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3675:43:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c355d2ecfcf7202cde753d1b7d0a423bd8bc4f7b2d5ccea2dc014fe0634f0a71","typeString":"literal_string \"ERC721Wrapper: wrapper is not token owner\""},"value":"ERC721Wrapper: wrapper is not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c355d2ecfcf7202cde753d1b7d0a423bd8bc4f7b2d5ccea2dc014fe0634f0a71","typeString":"literal_string \"ERC721Wrapper: wrapper is not token owner\""}],"id":3711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3619:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3619:100:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3724,"nodeType":"ExpressionStatement","src":"3619:100:26"},{"expression":{"arguments":[{"id":3726,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"3739:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3748:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1982,2011],"referencedDeclaration":1982,"src":"3729:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3729:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3729,"nodeType":"ExpressionStatement","src":"3729:27:26"},{"expression":{"id":3730,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3773:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3710,"id":3731,"nodeType":"Return","src":"3766:14:26"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"3322:195:26","text":" @dev Mint a wrapped token to cover any underlyingToken that would have been transferred by mistake. Internal\n function that can be exposed with access control if desired."},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"_recover","nameLocation":"3531:8:26","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"account","nameLocation":"3548:7:26","nodeType":"VariableDeclaration","scope":3733,"src":"3540:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3703,"name":"address","nodeType":"ElementaryTypeName","src":"3540:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"tokenId","nameLocation":"3565:7:26","nodeType":"VariableDeclaration","scope":3733,"src":"3557:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3557:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3539:34:26"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3733,"src":"3600:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3600:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3599:9:26"},"scope":3744,"src":"3522:265:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"3911:35:26","statements":[{"expression":{"id":3740,"name":"_underlying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"3928:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"functionReturnParameters":3739,"id":3741,"nodeType":"Return","src":"3921:18:26"}]},"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"3793:53:26","text":" @dev Returns the underlying token."},"functionSelector":"6f307dc3","id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"underlying","nameLocation":"3860:10:26","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[],"src":"3870:2:26"},"returnParameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"3902:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"},"typeName":{"id":3737,"nodeType":"UserDefinedTypeName","pathNode":{"id":3736,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"3902:7:26"},"referencedDeclaration":2530,"src":"3902:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2530","typeString":"contract IERC721"}},"visibility":"internal"}],"src":"3901:9:26"},"scope":3744,"src":"3851:95:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3745,"src":"603:3345:26","usedErrors":[]}],"src":"125:3824:26"},"id":26},"contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[7322],"IERC721":[2530],"IERC721Enumerable":[3775]},"id":3776,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3746,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:27"},{"absolutePath":"contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3747,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3776,"sourceUnit":2531,"src":"154:24:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3749,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"348:7:27"},"id":3750,"nodeType":"InheritanceSpecifier","src":"348:7:27"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"180:136:27","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3775,"linearizedBaseContracts":[3775,2530,7322],"name":"IERC721Enumerable","nameLocation":"327:17:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"362:82:27","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":3756,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:27","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"469:2:27"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3756,"src":"495:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:27"},"scope":3775,"src":"449:55:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"510:171:27","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":3766,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:27","nodeType":"FunctionDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"owner","nameLocation":"723:5:27","nodeType":"VariableDeclaration","scope":3766,"src":"715:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3758,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"index","nameLocation":"738:5:27","nodeType":"VariableDeclaration","scope":3766,"src":"730:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:27"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3766,"src":"768:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:27"},"scope":3775,"src":"686:91:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"783:164:27","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":3774,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:27","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"index","nameLocation":"982:5:27","nodeType":"VariableDeclaration","scope":3774,"src":"974:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:27"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3774,"src":"1012:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:27"},"scope":3775,"src":"952:69:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3776,"src":"317:706:27","usedErrors":[]}],"src":"129:895:27"},"id":27},"contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[7322],"IERC721":[2530],"IERC721Metadata":[3802]},"id":3803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3777,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:28"},{"absolutePath":"contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3803,"sourceUnit":2531,"src":"137:24:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3780,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"326:7:28"},"id":3781,"nodeType":"InheritanceSpecifier","src":"326:7:28"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3779,"nodeType":"StructuredDocumentation","src":"163:133:28","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3802,"linearizedBaseContracts":[3802,2530,7322],"name":"IERC721Metadata","nameLocation":"307:15:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"340:58:28","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3787,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:28","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[],"src":"416:2:28"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3787,"src":"442:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3784,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:28"},"scope":3802,"src":"403:54:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"463:60:28","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3793,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:28","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[],"src":"543:2:28"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3793,"src":"569:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3790,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:28"},"scope":3802,"src":"528:56:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"590:90:28","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3801,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:28","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:28","nodeType":"VariableDeclaration","scope":3801,"src":"703:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:28"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3801,"src":"743:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3798,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:28"},"scope":3802,"src":"685:73:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3803,"src":"297:463:28","usedErrors":[]}],"src":"112:649:28"},"id":28},"contracts/token/ERC721/extensions/draft-ERC721Votes.sol":{"ast":{"absolutePath":"contracts/token/ERC721/extensions/draft-ERC721Votes.sol","exportedSymbols":{"Address":[4524],"Checkpoints":[6065],"Context":[6087],"Counters":[6161],"ECDSA":[7082],"EIP712":[7286],"ERC165":[7310],"ERC721":[2414],"ERC721Votes":[3527],"IERC165":[7322],"IERC5267":[1352],"IERC5805":[1361],"IERC6372":[1376],"IERC721":[2530],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"IVotes":[717],"Math":[8188],"SafeCast":[9729],"ShortString":[6166],"ShortStrings":[6377],"SignedMath":[9834],"StorageSlot":[6487],"Strings":[6716],"Votes":[1268]},"id":3806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:29"},{"absolutePath":"contracts/token/ERC721/extensions/ERC721Votes.sol","file":"./ERC721Votes.sol","id":3805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3806,"sourceUnit":3528,"src":"284:27:29","symbolAliases":[],"unitAlias":""}],"src":"129:183:29"},"id":29},"contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol":{"ast":{"absolutePath":"contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol","exportedSymbols":{"AccessControl":[416],"AccessControlEnumerable":[541],"Address":[4524],"Context":[6087],"Counters":[6161],"ERC165":[7310],"ERC721":[2414],"ERC721Burnable":[2578],"ERC721Enumerable":[3232],"ERC721Pausable":[3272],"ERC721PresetMinterPauserAutoId":[3996],"EnumerableSet":[10585],"IAccessControl":[614],"IAccessControlEnumerable":[639],"IERC165":[7322],"IERC721":[2530],"IERC721Enumerable":[3775],"IERC721Metadata":[3802],"IERC721Receiver":[2548],"Math":[8188],"Pausable":[1487],"SignedMath":[9834],"Strings":[6716]},"id":3997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3807,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"139:23:30"},{"absolutePath":"contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3997,"sourceUnit":2415,"src":"164:23:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"../extensions/ERC721Enumerable.sol","id":3809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3997,"sourceUnit":3233,"src":"188:44:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"../extensions/ERC721Burnable.sol","id":3810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3997,"sourceUnit":2579,"src":"233:42:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/ERC721/extensions/ERC721Pausable.sol","file":"../extensions/ERC721Pausable.sol","id":3811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3997,"sourceUnit":3273,"src":"276:42:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/access/AccessControlEnumerable.sol","file":"../../../access/AccessControlEnumerable.sol","id":3812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3997,"sourceUnit":542,"src":"319:53:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":3813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3997,"sourceUnit":6088,"src":"373:36:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":3814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3997,"sourceUnit":6162,"src":"410:37:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3816,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":6087,"src":"1185:7:30"},"id":3817,"nodeType":"InheritanceSpecifier","src":"1185:7:30"},{"baseName":{"id":3818,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":541,"src":"1198:23:30"},"id":3819,"nodeType":"InheritanceSpecifier","src":"1198:23:30"},{"baseName":{"id":3820,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":3232,"src":"1227:16:30"},"id":3821,"nodeType":"InheritanceSpecifier","src":"1227:16:30"},{"baseName":{"id":3822,"name":"ERC721Burnable","nodeType":"IdentifierPath","referencedDeclaration":2578,"src":"1249:14:30"},"id":3823,"nodeType":"InheritanceSpecifier","src":"1249:14:30"},{"baseName":{"id":3824,"name":"ERC721Pausable","nodeType":"IdentifierPath","referencedDeclaration":3272,"src":"1269:14:30"},"id":3825,"nodeType":"InheritanceSpecifier","src":"1269:14:30"}],"canonicalName":"ERC721PresetMinterPauserAutoId","contractDependencies":[],"contractKind":"contract","documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"449:688:30","text":" @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts.\n _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._"},"fullyImplemented":true,"id":3996,"linearizedBaseContracts":[3996,3272,1487,2578,3232,3775,2414,3802,2530,541,416,7310,7322,639,614,6087],"name":"ERC721PresetMinterPauserAutoId","nameLocation":"1147:30:30","nodeType":"ContractDefinition","nodes":[{"id":3829,"libraryName":{"id":3826,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"1296:8:30"},"nodeType":"UsingForDirective","src":"1290:36:30","typeName":{"id":3828,"nodeType":"UserDefinedTypeName","pathNode":{"id":3827,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"1309:16:30"},"referencedDeclaration":6093,"src":"1309:16:30","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":true,"functionSelector":"d5391393","id":3834,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"1356:11:30","nodeType":"VariableDeclaration","scope":3996,"src":"1332:62:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1332:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1380:13:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":3831,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1370:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1370:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":3839,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"1424:11:30","nodeType":"VariableDeclaration","scope":3996,"src":"1400:62:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1400:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1448:13:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":3836,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1438:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1438:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":3842,"mutability":"mutable","name":"_tokenIdTracker","nameLocation":"1494:15:30","nodeType":"VariableDeclaration","scope":3996,"src":"1469:40:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3841,"nodeType":"UserDefinedTypeName","pathNode":{"id":3840,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"1469:16:30"},"referencedDeclaration":6093,"src":"1469:16:30","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":3844,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"1531:13:30","nodeType":"VariableDeclaration","scope":3996,"src":"1516:28:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3843,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3880,"nodeType":"Block","src":"1909:195:30","statements":[{"expression":{"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3858,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1919:13:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3859,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"1935:12:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1919:28:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3861,"nodeType":"ExpressionStatement","src":"1919:28:30"},{"expression":{"arguments":[{"id":3863,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"1969:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3864,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"1989:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1989:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3862,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1958:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1958:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3867,"nodeType":"ExpressionStatement","src":"1958:44:30"},{"expression":{"arguments":[{"id":3869,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2024:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3870,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"2037:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3868,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2013:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2013:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3873,"nodeType":"ExpressionStatement","src":"2013:37:30"},{"expression":{"arguments":[{"id":3875,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"2071:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3876,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"2084:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2084:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3874,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2060:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2060:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3879,"nodeType":"ExpressionStatement","src":"2060:37:30"}]},"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"1551:250:30","text":" @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."},"id":3881,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3854,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"1895:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3855,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"1901:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3856,"kind":"baseConstructorSpecifier","modifierName":{"id":3853,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"1888:6:30"},"nodeType":"ModifierInvocation","src":"1888:20:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"name","nameLocation":"1832:4:30","nodeType":"VariableDeclaration","scope":3881,"src":"1818:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3846,"name":"string","nodeType":"ElementaryTypeName","src":"1818:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"symbol","nameLocation":"1852:6:30","nodeType":"VariableDeclaration","scope":3881,"src":"1838:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3848,"name":"string","nodeType":"ElementaryTypeName","src":"1838:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"baseTokenURI","nameLocation":"1874:12:30","nodeType":"VariableDeclaration","scope":3881,"src":"1860:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3850,"name":"string","nodeType":"ElementaryTypeName","src":"1860:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1817:70:30"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[],"src":"1909:0:30"},"scope":3996,"src":"1806:298:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1701],"body":{"id":3889,"nodeType":"Block","src":"2185:37:30","statements":[{"expression":{"id":3887,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"2202:13:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3886,"id":3888,"nodeType":"Return","src":"2195:20:30"}]},"id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"2119:8:30","nodeType":"FunctionDefinition","overrides":{"id":3883,"nodeType":"OverrideSpecifier","overrides":[],"src":"2152:8:30"},"parameters":{"id":3882,"nodeType":"ParameterList","parameters":[],"src":"2127:2:30"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3890,"src":"2170:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3884,"name":"string","nodeType":"ElementaryTypeName","src":"2170:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2169:15:30"},"scope":3996,"src":"2110:112:30","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3917,"nodeType":"Block","src":"2638:359:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":3898,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2664:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3899,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"2677:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2677:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3897,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2656:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2656:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2692:63:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb","typeString":"literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""},"value":"ERC721PresetMinterPauserAutoId: must have minter role to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb","typeString":"literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""}],"id":3896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2648:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2648:108:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3904,"nodeType":"ExpressionStatement","src":"2648:108:30"},{"expression":{"arguments":[{"id":3906,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"2923:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3907,"name":"_tokenIdTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"2927:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter storage ref"}},"id":3908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":6105,"src":"2927:23:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$6093_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$6093_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2927:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3905,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2917:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2917:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3911,"nodeType":"ExpressionStatement","src":"2917:36:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3912,"name":"_tokenIdTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"2963:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage","typeString":"struct Counters.Counter storage ref"}},"id":3914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":6119,"src":"2963:25:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$6093_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$6093_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2963:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3916,"nodeType":"ExpressionStatement","src":"2963:27:30"}]},"documentation":{"id":3891,"nodeType":"StructuredDocumentation","src":"2228:364:30","text":" @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."},"functionSelector":"6a627842","id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2606:4:30","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"to","nameLocation":"2619:2:30","nodeType":"VariableDeclaration","scope":3918,"src":"2611:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"2611:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2610:12:30"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[],"src":"2638:0:30"},"scope":3996,"src":"2597:400:30","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3934,"nodeType":"Block","src":"3233:144:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":3924,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"3259:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3925,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3272:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3272:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3923,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3251:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3287:64:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef","typeString":"literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""},"value":"ERC721PresetMinterPauserAutoId: must have pauser role to pause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef","typeString":"literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""}],"id":3922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3243:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3243:109:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3930,"nodeType":"ExpressionStatement","src":"3243:109:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3931,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"3362:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3362:8:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3933,"nodeType":"ExpressionStatement","src":"3362:8:30"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"3003:193:30","text":" @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"8456cb59","id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"pause","nameLocation":"3210:5:30","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[],"src":"3215:2:30"},"returnParameters":{"id":3921,"nodeType":"ParameterList","parameters":[],"src":"3233:0:30"},"scope":3996,"src":"3201:176:30","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3951,"nodeType":"Block","src":"3619:148:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":3941,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"3645:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3942,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3658:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3658:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3940,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3637:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3637:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3673:66:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8","typeString":"literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""},"value":"ERC721PresetMinterPauserAutoId: must have pauser role to unpause"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8","typeString":"literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""}],"id":3939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3629:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3629:111:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3947,"nodeType":"ExpressionStatement","src":"3629:111:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3948,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"3750:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3750:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3950,"nodeType":"ExpressionStatement","src":"3750:10:30"}]},"documentation":{"id":3936,"nodeType":"StructuredDocumentation","src":"3383:197:30","text":" @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."},"functionSelector":"3f4ba83a","id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"3594:7:30","nodeType":"FunctionDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[],"src":"3601:2:30"},"returnParameters":{"id":3938,"nodeType":"ParameterList","parameters":[],"src":"3619:0:30"},"scope":3996,"src":"3585:182:30","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2385,3070,3271],"body":{"id":3976,"nodeType":"Block","src":"3976:78:30","statements":[{"expression":{"arguments":[{"id":3970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"4013:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3971,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"4019:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3972,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"4023:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3973,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"4037:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3967,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3986:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721PresetMinterPauserAutoId_$3996_$","typeString":"type(contract super ERC721PresetMinterPauserAutoId)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":3271,"src":"3986:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3986:61:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3975,"nodeType":"ExpressionStatement","src":"3986:61:30"}]},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"3782:20:30","nodeType":"FunctionDefinition","overrides":{"id":3965,"nodeType":"OverrideSpecifier","overrides":[{"id":3962,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"3934:6:30"},{"id":3963,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":3232,"src":"3942:16:30"},{"id":3964,"name":"ERC721Pausable","nodeType":"IdentifierPath","referencedDeclaration":3272,"src":"3960:14:30"}],"src":"3925:50:30"},"parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"from","nameLocation":"3820:4:30","nodeType":"VariableDeclaration","scope":3977,"src":"3812:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"to","nameLocation":"3842:2:30","nodeType":"VariableDeclaration","scope":3977,"src":"3834:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3955,"name":"address","nodeType":"ElementaryTypeName","src":"3834:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"firstTokenId","nameLocation":"3862:12:30","nodeType":"VariableDeclaration","scope":3977,"src":"3854:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"3854:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"batchSize","nameLocation":"3892:9:30","nodeType":"VariableDeclaration","scope":3977,"src":"3884:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3884:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3802:105:30"},"returnParameters":{"id":3966,"nodeType":"ParameterList","parameters":[],"src":"3976:0:30"},"scope":3996,"src":"3773:281:30","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[457,1581,2928],"body":{"id":3994,"nodeType":"Block","src":"4277:60:30","statements":[{"expression":{"arguments":[{"id":3991,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4318:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3989,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4294:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721PresetMinterPauserAutoId_$3996_$","typeString":"type(contract super ERC721PresetMinterPauserAutoId)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2928,"src":"4294:23:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4294:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3988,"id":3993,"nodeType":"Return","src":"4287:43:30"}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"4060:56:30","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3995,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4130:17:30","nodeType":"FunctionDefinition","overrides":{"id":3985,"nodeType":"OverrideSpecifier","overrides":[{"id":3982,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":541,"src":"4211:23:30"},{"id":3983,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2414,"src":"4236:6:30"},{"id":3984,"name":"ERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":3232,"src":"4244:16:30"}],"src":"4202:59:30"},"parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"interfaceId","nameLocation":"4164:11:30","nodeType":"VariableDeclaration","scope":3995,"src":"4157:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3979,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4157:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4147:34:30"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3995,"src":"4271:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3986,"name":"bool","nodeType":"ElementaryTypeName","src":"4271:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4270:6:30"},"scope":3996,"src":"4121:216:30","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3997,"src":"1138:3201:30","usedErrors":[]}],"src":"139:4201:30"},"id":30},"contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[7310],"ERC2981":[4194],"IERC165":[7322],"IERC2981":[1305]},"id":4195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3998,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:31"},{"absolutePath":"contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":3999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4195,"sourceUnit":1306,"src":"133:39:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":4000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4195,"sourceUnit":7311,"src":"173:46:31","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4002,"name":"IERC2981","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"1125:8:31"},"id":4003,"nodeType":"InheritanceSpecifier","src":"1125:8:31"},{"baseName":{"id":4004,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":7310,"src":"1135:6:31"},"id":4005,"nodeType":"InheritanceSpecifier","src":"1135:6:31"}],"canonicalName":"ERC2981","contractDependencies":[],"contractKind":"contract","documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"221:874:31","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n _Available since v4.5._"},"fullyImplemented":true,"id":4194,"linearizedBaseContracts":[4194,7310,1305,7322],"name":"ERC2981","nameLocation":"1114:7:31","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":4010,"members":[{"constant":false,"id":4007,"mutability":"mutable","name":"receiver","nameLocation":"1185:8:31","nodeType":"VariableDeclaration","scope":4010,"src":"1177:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4006,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1210:15:31","nodeType":"VariableDeclaration","scope":4010,"src":"1203:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4008,"name":"uint96","nodeType":"ElementaryTypeName","src":"1203:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1155:11:31","nodeType":"StructDefinition","scope":4194,"src":"1148:84:31","visibility":"public"},{"constant":false,"id":4013,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1258:19:31","nodeType":"VariableDeclaration","scope":4194,"src":"1238:39:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":4012,"nodeType":"UserDefinedTypeName","pathNode":{"id":4011,"name":"RoyaltyInfo","nodeType":"IdentifierPath","referencedDeclaration":4010,"src":"1238:11:31"},"referencedDeclaration":4010,"src":"1238:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":4018,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1323:17:31","nodeType":"VariableDeclaration","scope":4194,"src":"1283:57:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$4010_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":4017,"keyType":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1283:31:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$4010_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueType":{"id":4016,"nodeType":"UserDefinedTypeName","pathNode":{"id":4015,"name":"RoyaltyInfo","nodeType":"IdentifierPath","referencedDeclaration":4010,"src":"1302:11:31"},"referencedDeclaration":4010,"src":"1302:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"baseFunctions":[7309,7321],"body":{"id":4041,"nodeType":"Block","src":"1516:105:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"1533:11:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4031,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1553:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$1305_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$1305_$","typeString":"type(contract IERC2981)"}],"id":4030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1548:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1548:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$1305","typeString":"type(contract IERC2981)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1548:26:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1533:41:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4037,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"1602:11:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":4035,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1578:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$4194_$","typeString":"type(contract super ERC2981)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":7309,"src":"1578:23:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1578:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1533:81:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4028,"id":4040,"nodeType":"Return","src":"1526:88:31"}]},"documentation":{"id":4019,"nodeType":"StructuredDocumentation","src":"1347:56:31","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4042,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1417:17:31","nodeType":"FunctionDefinition","overrides":{"id":4025,"nodeType":"OverrideSpecifier","overrides":[{"id":4023,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"1484:7:31"},{"id":4024,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":7310,"src":"1493:6:31"}],"src":"1475:25:31"},"parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"interfaceId","nameLocation":"1442:11:31","nodeType":"VariableDeclaration","scope":4042,"src":"1435:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4020,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1435:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1434:20:31"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"1510:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4026,"name":"bool","nodeType":"ElementaryTypeName","src":"1510:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1509:6:31"},"scope":4194,"src":"1408:213:31","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1304],"body":{"id":4091,"nodeType":"Block","src":"1784:315:31","statements":[{"assignments":[4057],"declarations":[{"constant":false,"id":4057,"mutability":"mutable","name":"royalty","nameLocation":"1813:7:31","nodeType":"VariableDeclaration","scope":4091,"src":"1794:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":4056,"nodeType":"UserDefinedTypeName","pathNode":{"id":4055,"name":"RoyaltyInfo","nodeType":"IdentifierPath","referencedDeclaration":4010,"src":"1794:11:31"},"referencedDeclaration":4010,"src":"1794:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":4061,"initialValue":{"baseExpression":{"id":4058,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"1823:17:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$4010_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":4060,"indexExpression":{"id":4059,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"1841:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1823:26:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1794:55:31"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4062,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"1864:7:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":4063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":4007,"src":"1864:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1884:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4064,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:31","typeDescriptions":{}}},"id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1884:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1864:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4074,"nodeType":"IfStatement","src":"1860:90:31","trueBody":{"id":4073,"nodeType":"Block","src":"1896:54:31","statements":[{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4069,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"1910:7:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4070,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"1920:19:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"src":"1910:29:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":4072,"nodeType":"ExpressionStatement","src":"1910:29:31"}]}},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1968:13:31","nodeType":"VariableDeclaration","scope":4091,"src":"1960:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4085,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"1985:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4078,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"1997:7:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":4079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":4009,"src":"1997:23:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1985:35:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1984:37:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4082,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2024:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2024:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1984:57:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1960:81:31"},{"expression":{"components":[{"expression":{"id":4086,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"2060:7:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":4087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":4007,"src":"2060:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4088,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"2078:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2059:33:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":4054,"id":4090,"nodeType":"Return","src":"2052:40:31"}]},"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"1627:39:31","text":" @inheritdoc IERC2981"},"functionSelector":"2a55205a","id":4092,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"1680:11:31","nodeType":"FunctionDefinition","overrides":{"id":4049,"nodeType":"OverrideSpecifier","overrides":[],"src":"1748:8:31"},"parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"tokenId","nameLocation":"1700:7:31","nodeType":"VariableDeclaration","scope":4092,"src":"1692:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"salePrice","nameLocation":"1717:9:31","nodeType":"VariableDeclaration","scope":4092,"src":"1709:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1691:36:31"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4092,"src":"1766:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"1766:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4092,"src":"1775:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1775:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1765:18:31"},"scope":4194,"src":"1671:428:31","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4100,"nodeType":"Block","src":"2440:29:31","statements":[{"expression":{"hexValue":"3130303030","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:5:31","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":4097,"id":4099,"nodeType":"Return","src":"2450:12:31"}]},"documentation":{"id":4093,"nodeType":"StructuredDocumentation","src":"2105:264:31","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"2383:15:31","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[],"src":"2398:2:31"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4101,"src":"2432:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4095,"name":"uint96","nodeType":"ElementaryTypeName","src":"2432:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2431:8:31"},"scope":4194,"src":"2374:95:31","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":4134,"nodeType":"Block","src":"2814:243:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"2832:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4111,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2848:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2848:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2832:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20726f79616c7479206665652077696c6c206578636565642073616c655072696365","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2867:44:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""},"value":"ERC2981: royalty fee will exceed salePrice"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""}],"id":4109,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2824:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2824:88:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4116,"nodeType":"ExpressionStatement","src":"2824:88:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"2930:8:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2942:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4119,"name":"address","nodeType":"ElementaryTypeName","src":"2942:7:31","typeDescriptions":{}}},"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2930:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20696e76616c6964207265636569766572","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2954:27:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_f66a1010ca1024f054dcd95a016427c9d452e7f1ceb553ccd3a5e37073a6ffff","typeString":"literal_string \"ERC2981: invalid receiver\""},"value":"ERC2981: invalid receiver"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f66a1010ca1024f054dcd95a016427c9d452e7f1ceb553ccd3a5e37073a6ffff","typeString":"literal_string \"ERC2981: invalid receiver\""}],"id":4117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2922:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:60:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4126,"nodeType":"ExpressionStatement","src":"2922:60:31"},{"expression":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"2993:19:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4129,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"3027:8:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4130,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"3037:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4128,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"3015:11:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$4010_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3015:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"2993:57:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":4133,"nodeType":"ExpressionStatement","src":"2993:57:31"}]},"documentation":{"id":4102,"nodeType":"StructuredDocumentation","src":"2475:250:31","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":4135,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"2739:18:31","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"receiver","nameLocation":"2766:8:31","nodeType":"VariableDeclaration","scope":4135,"src":"2758:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4103,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"feeNumerator","nameLocation":"2783:12:31","nodeType":"VariableDeclaration","scope":4135,"src":"2776:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4105,"name":"uint96","nodeType":"ElementaryTypeName","src":"2776:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2757:39:31"},"returnParameters":{"id":4108,"nodeType":"ParameterList","parameters":[],"src":"2814:0:31"},"scope":4194,"src":"2730:327:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"3178:43:31","statements":[{"expression":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3188:26:31","subExpression":{"id":4139,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"3195:19:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4141,"nodeType":"ExpressionStatement","src":"3188:26:31"}]},"documentation":{"id":4136,"nodeType":"StructuredDocumentation","src":"3063:60:31","text":" @dev Removes default royalty information."},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"3137:21:31","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[],"src":"3158:2:31"},"returnParameters":{"id":4138,"nodeType":"ParameterList","parameters":[],"src":"3178:0:31"},"scope":4194,"src":"3128:93:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4180,"nodeType":"Block","src":"3590:252:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"3608:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4155,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"3624:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3624:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3608:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20726f79616c7479206665652077696c6c206578636565642073616c655072696365","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3643:44:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""},"value":"ERC2981: royalty fee will exceed salePrice"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""}],"id":4153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3600:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3600:88:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4160,"nodeType":"ExpressionStatement","src":"3600:88:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"3706:8:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3726:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3718:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4163,"name":"address","nodeType":"ElementaryTypeName","src":"3718:7:31","typeDescriptions":{}}},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3718:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3706:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20496e76616c696420706172616d6574657273","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3730:29:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d20a09dd8b4080dbbc254e38d9f607ef83a2c7a38b671ae8f8f162ffe46e2084","typeString":"literal_string \"ERC2981: Invalid parameters\""},"value":"ERC2981: Invalid parameters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d20a09dd8b4080dbbc254e38d9f607ef83a2c7a38b671ae8f8f162ffe46e2084","typeString":"literal_string \"ERC2981: Invalid parameters\""}],"id":4161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3698:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3698:62:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4170,"nodeType":"ExpressionStatement","src":"3698:62:31"},{"expression":{"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4171,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"3771:17:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$4010_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":4173,"indexExpression":{"id":4172,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"3789:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3771:26:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4175,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"3812:8:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4176,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"3822:12:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4174,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"3800:11:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$4010_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"3771:64:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":4179,"nodeType":"ExpressionStatement","src":"3771:64:31"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"3227:259:31","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":4181,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"3500:16:31","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:31","nodeType":"VariableDeclaration","scope":4181,"src":"3517:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"receiver","nameLocation":"3542:8:31","nodeType":"VariableDeclaration","scope":4181,"src":"3534:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4147,"name":"address","nodeType":"ElementaryTypeName","src":"3534:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"feeNumerator","nameLocation":"3559:12:31","nodeType":"VariableDeclaration","scope":4181,"src":"3552:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4149,"name":"uint96","nodeType":"ElementaryTypeName","src":"3552:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3516:56:31"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[],"src":"3590:0:31"},"scope":4194,"src":"3491:351:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4192,"nodeType":"Block","src":"4010:50:31","statements":[{"expression":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4020:33:31","subExpression":{"baseExpression":{"id":4187,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"4027:17:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$4010_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":4189,"indexExpression":{"id":4188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"4045:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4027:26:31","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$4010_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4191,"nodeType":"ExpressionStatement","src":"4020:33:31"}]},"documentation":{"id":4182,"nodeType":"StructuredDocumentation","src":"3848:95:31","text":" @dev Resets royalty information for the token id back to the global default."},"id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"3957:18:31","nodeType":"FunctionDefinition","parameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"tokenId","nameLocation":"3984:7:31","nodeType":"VariableDeclaration","scope":4193,"src":"3976:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3976:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3975:17:31"},"returnParameters":{"id":4186,"nodeType":"ParameterList","parameters":[],"src":"4010:0:31"},"scope":4194,"src":"3948:112:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4195,"src":"1096:2966:31","usedErrors":[]}],"src":"108:3955:31"},"id":31},"contracts/utils/Address.sol":{"ast":{"absolutePath":"contracts/utils/Address.sol","exportedSymbols":{"Address":[4524]},"id":4525,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4196,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"126:67:32","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4524,"linearizedBaseContracts":[4524],"name":"Address","nameLocation":"202:7:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":4211,"nodeType":"Block","src":"1478:254:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"1702:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4204,"id":4210,"nodeType":"Return","src":"1695:30:32"}]},"documentation":{"id":4198,"nodeType":"StructuredDocumentation","src":"216:1191:32","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":4212,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:32","nodeType":"FunctionDefinition","parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"account","nameLocation":"1440:7:32","nodeType":"VariableDeclaration","scope":4212,"src":"1432:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4199,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:32"},"returnParameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4212,"src":"1472:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4202,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:32"},"scope":4524,"src":"1412:320:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"2718:241:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4223,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4524","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4524","typeString":"library Address"}],"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4221,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:32","typeDescriptions":{}}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2761:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":4220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4230,"nodeType":"ExpressionStatement","src":"2728:73:32"},{"assignments":[4232,null],"declarations":[{"constant":false,"id":4232,"mutability":"mutable","name":"success","nameLocation":"2818:7:32","nodeType":"VariableDeclaration","scope":4245,"src":"2813:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4231,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4239,"initialValue":{"arguments":[{"hexValue":"","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4233,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"2831:9:32","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4235,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2853:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:32"},{"expression":{"arguments":[{"id":4241,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"2882:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":4240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4244,"nodeType":"ExpressionStatement","src":"2874:78:32"}]},"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"1738:904:32","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:32","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:32","nodeType":"VariableDeclaration","scope":4246,"src":"2666:25:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4214,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:32","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"amount","nameLocation":"2701:6:32","nodeType":"VariableDeclaration","scope":4246,"src":"2693:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:32"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[],"src":"2718:0:32"},"scope":4524,"src":"2647:312:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4263,"nodeType":"Block","src":"3790:96:32","statements":[{"expression":{"arguments":[{"id":4257,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"3829:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4258,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"3837:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":4256,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4304,4348],"referencedDeclaration":4348,"src":"3807:21:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4255,"id":4262,"nodeType":"Return","src":"3800:79:32"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"2965:731:32","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":4264,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:32","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"target","nameLocation":"3731:6:32","nodeType":"VariableDeclaration","scope":4264,"src":"3723:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"data","nameLocation":"3752:4:32","nodeType":"VariableDeclaration","scope":4264,"src":"3739:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4250,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:32"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4264,"src":"3776:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4253,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:32"},"scope":4524,"src":"3701:185:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4283,"nodeType":"Block","src":"4255:76:32","statements":[{"expression":{"arguments":[{"id":4277,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"4294:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4278,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"4302:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4280,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"4311:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4276,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4304,4348],"referencedDeclaration":4348,"src":"4272:21:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4275,"id":4282,"nodeType":"Return","src":"4265:59:32"}]},"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"3892:211:32","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4284,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:32","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"target","nameLocation":"4147:6:32","nodeType":"VariableDeclaration","scope":4284,"src":"4139:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4266,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"data","nameLocation":"4176:4:32","nodeType":"VariableDeclaration","scope":4284,"src":"4163:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4268,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:32","nodeType":"VariableDeclaration","scope":4284,"src":"4190:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4270,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:32"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4284,"src":"4241:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4273,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:32"},"scope":4524,"src":"4108:223:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4303,"nodeType":"Block","src":"4806:111:32","statements":[{"expression":{"arguments":[{"id":4297,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"4845:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"4853:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"4859:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":4296,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4304,4348],"referencedDeclaration":4348,"src":"4823:21:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4295,"id":4302,"nodeType":"Return","src":"4816:94:32"}]},"documentation":{"id":4285,"nodeType":"StructuredDocumentation","src":"4337:351:32","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":4304,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:32","nodeType":"FunctionDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"target","nameLocation":"4732:6:32","nodeType":"VariableDeclaration","scope":4304,"src":"4724:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4286,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4289,"mutability":"mutable","name":"data","nameLocation":"4753:4:32","nodeType":"VariableDeclaration","scope":4304,"src":"4740:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4288,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4291,"mutability":"mutable","name":"value","nameLocation":"4767:5:32","nodeType":"VariableDeclaration","scope":4304,"src":"4759:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:32"},"returnParameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4304,"src":"4792:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4293,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:32"},"scope":4524,"src":"4693:224:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"5344:267:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4321,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4524","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4524","typeString":"library Address"}],"id":4320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4319,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:32","typeDescriptions":{}}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"5387:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":4318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4328,"nodeType":"ExpressionStatement","src":"5354:81:32"},{"assignments":[4330,4332],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"success","nameLocation":"5451:7:32","nodeType":"VariableDeclaration","scope":4347,"src":"5446:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4329,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:32","nodeType":"VariableDeclaration","scope":4347,"src":"5460:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4331,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4339,"initialValue":{"arguments":[{"id":4337,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"5513:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4333,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"5487:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"5506:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:32"},{"expression":{"arguments":[{"id":4341,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"5562:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"5570:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4343,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"5579:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4344,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"5591:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4340,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"5535:26:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4317,"id":4346,"nodeType":"Return","src":"5528:76:32"}]},"documentation":{"id":4305,"nodeType":"StructuredDocumentation","src":"4923:237:32","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:32","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"target","nameLocation":"5213:6:32","nodeType":"VariableDeclaration","scope":4348,"src":"5205:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4306,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"data","nameLocation":"5242:4:32","nodeType":"VariableDeclaration","scope":4348,"src":"5229:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4308,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"value","nameLocation":"5264:5:32","nodeType":"VariableDeclaration","scope":4348,"src":"5256:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:32","nodeType":"VariableDeclaration","scope":4348,"src":"5279:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4312,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:32"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"5330:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4315,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:32"},"scope":4524,"src":"5165:446:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4364,"nodeType":"Block","src":"5888:97:32","statements":[{"expression":{"arguments":[{"id":4359,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"5924:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5932:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":4358,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[4365,4394],"referencedDeclaration":4394,"src":"5905:18:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4357,"id":4363,"nodeType":"Return","src":"5898:80:32"}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"5617:166:32","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4365,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:32","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"target","nameLocation":"5824:6:32","nodeType":"VariableDeclaration","scope":4365,"src":"5816:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4350,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4353,"mutability":"mutable","name":"data","nameLocation":"5845:4:32","nodeType":"VariableDeclaration","scope":4365,"src":"5832:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4352,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:32"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4365,"src":"5874:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:32"},"scope":4524,"src":"5788:197:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4393,"nodeType":"Block","src":"6327:168:32","statements":[{"assignments":[4378,4380],"declarations":[{"constant":false,"id":4378,"mutability":"mutable","name":"success","nameLocation":"6343:7:32","nodeType":"VariableDeclaration","scope":4393,"src":"6338:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4377,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:32","nodeType":"VariableDeclaration","scope":4393,"src":"6352:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4379,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4385,"initialValue":{"arguments":[{"id":4383,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"6397:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4381,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"6379:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:32","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:32"},{"expression":{"arguments":[{"id":4387,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"6446:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4388,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"6454:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4389,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"6463:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4390,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"6475:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4386,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"6419:26:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4376,"id":4392,"nodeType":"Return","src":"6412:76:32"}]},"documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"5991:173:32","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4394,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:32","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"target","nameLocation":"6214:6:32","nodeType":"VariableDeclaration","scope":4394,"src":"6206:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4367,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"data","nameLocation":"6243:4:32","nodeType":"VariableDeclaration","scope":4394,"src":"6230:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4369,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:32","nodeType":"VariableDeclaration","scope":4394,"src":"6257:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4371,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:32"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4394,"src":"6313:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4374,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:32"},"scope":4524,"src":"6169:326:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4410,"nodeType":"Block","src":"6771:101:32","statements":[{"expression":{"arguments":[{"id":4405,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"6809:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4406,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"6817:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":4404,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[4411,4440],"referencedDeclaration":4440,"src":"6788:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4403,"id":4409,"nodeType":"Return","src":"6781:84:32"}]},"documentation":{"id":4395,"nodeType":"StructuredDocumentation","src":"6501:168:32","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:32","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"target","nameLocation":"6712:6:32","nodeType":"VariableDeclaration","scope":4411,"src":"6704:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4396,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4399,"mutability":"mutable","name":"data","nameLocation":"6733:4:32","nodeType":"VariableDeclaration","scope":4411,"src":"6720:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4398,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:32"},"returnParameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"6757:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4401,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:32"},"scope":4524,"src":"6674:198:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4439,"nodeType":"Block","src":"7213:170:32","statements":[{"assignments":[4424,4426],"declarations":[{"constant":false,"id":4424,"mutability":"mutable","name":"success","nameLocation":"7229:7:32","nodeType":"VariableDeclaration","scope":4439,"src":"7224:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4423,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:32","nodeType":"VariableDeclaration","scope":4439,"src":"7238:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4425,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4431,"initialValue":{"arguments":[{"id":4429,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"7285:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4427,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"7265:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:32","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:32"},{"expression":{"arguments":[{"id":4433,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"7334:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4434,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"7342:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4435,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"7351:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4436,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"7363:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4432,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7307:26:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4422,"id":4438,"nodeType":"Return","src":"7300:76:32"}]},"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"6878:175:32","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4440,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:32","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"target","nameLocation":"7105:6:32","nodeType":"VariableDeclaration","scope":4440,"src":"7097:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4413,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"data","nameLocation":"7134:4:32","nodeType":"VariableDeclaration","scope":4440,"src":"7121:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4415,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:32","nodeType":"VariableDeclaration","scope":4440,"src":"7148:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4417,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:32"},"returnParameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4440,"src":"7199:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4420,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:32"},"scope":4524,"src":"7058:325:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4478,"nodeType":"Block","src":"7865:434:32","statements":[{"condition":{"id":4454,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"7879:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4476,"nodeType":"Block","src":"8235:58:32","statements":[{"expression":{"arguments":[{"id":4472,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"8257:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4473,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"8269:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4471,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"8249:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4475,"nodeType":"ExpressionStatement","src":"8249:33:32"}]},"id":4477,"nodeType":"IfStatement","src":"7875:418:32","trueBody":{"id":4470,"nodeType":"Block","src":"7888:341:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4455,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7906:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"7902:286:32","trueBody":{"id":4466,"nodeType":"Block","src":"7930:258:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":4461,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"8132:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4460,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"8121:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":4459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4465,"nodeType":"ExpressionStatement","src":"8113:60:32"}]}},{"expression":{"id":4468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"8208:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4453,"id":4469,"nodeType":"Return","src":"8201:17:32"}]}}]},"documentation":{"id":4441,"nodeType":"StructuredDocumentation","src":"7389:277:32","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":4479,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:32","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"target","nameLocation":"7724:6:32","nodeType":"VariableDeclaration","scope":4479,"src":"7716:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4442,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4445,"mutability":"mutable","name":"success","nameLocation":"7745:7:32","nodeType":"VariableDeclaration","scope":4479,"src":"7740:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4444,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:32","nodeType":"VariableDeclaration","scope":4479,"src":"7762:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4446,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:32","nodeType":"VariableDeclaration","scope":4479,"src":"7795:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4448,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:32"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4479,"src":"7851:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4451,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:32"},"scope":4524,"src":"7671:628:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4502,"nodeType":"Block","src":"8680:135:32","statements":[{"condition":{"id":4491,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"8694:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4500,"nodeType":"Block","src":"8751:58:32","statements":[{"expression":{"arguments":[{"id":4496,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"8773:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4497,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"8785:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4495,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"8765:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4499,"nodeType":"ExpressionStatement","src":"8765:33:32"}]},"id":4501,"nodeType":"IfStatement","src":"8690:119:32","trueBody":{"id":4494,"nodeType":"Block","src":"8703:42:32","statements":[{"expression":{"id":4492,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"8724:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4490,"id":4493,"nodeType":"Return","src":"8717:17:32"}]}}]},"documentation":{"id":4480,"nodeType":"StructuredDocumentation","src":"8305:210:32","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":4503,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:32","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"success","nameLocation":"8560:7:32","nodeType":"VariableDeclaration","scope":4503,"src":"8555:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4481,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4484,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:32","nodeType":"VariableDeclaration","scope":4503,"src":"8577:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4483,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:32","nodeType":"VariableDeclaration","scope":4503,"src":"8610:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4485,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:32"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4503,"src":"8666:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4488,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:32"},"scope":4524,"src":"8520:295:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4522,"nodeType":"Block","src":"8904:457:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4510,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"8980:10:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4520,"nodeType":"Block","src":"9310:45:32","statements":[{"expression":{"arguments":[{"id":4517,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"9331:12:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4516,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:32","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4519,"nodeType":"ExpressionStatement","src":"9324:20:32"}]},"id":4521,"nodeType":"IfStatement","src":"8976:379:32","trueBody":{"id":4515,"nodeType":"Block","src":"9003:301:32","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:32","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:32","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:32"},"nodeType":"YulFunctionCall","src":"9202:17:32"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:32","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:32"},"nodeType":"YulFunctionCall","src":"9243:19:32"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:32"},"nodeType":"YulFunctionCall","src":"9236:44:32"},"nodeType":"YulExpressionStatement","src":"9236:44:32"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4505,"isOffset":false,"isSlot":false,"src":"9208:10:32","valueSize":1},{"declaration":4505,"isOffset":false,"isSlot":false,"src":"9251:10:32","valueSize":1}],"id":4514,"nodeType":"InlineAssembly","src":"9152:142:32"}]}}]},"id":4523,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:32","nodeType":"FunctionDefinition","parameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:32","nodeType":"VariableDeclaration","scope":4523,"src":"8838:23:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4504,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4507,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:32","nodeType":"VariableDeclaration","scope":4523,"src":"8863:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4506,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:32"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[],"src":"8904:0:32"},"scope":4524,"src":"8821:540:32","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4525,"src":"194:9169:32","usedErrors":[]}],"src":"101:9263:32"},"id":32},"contracts/utils/Checkpoints.sol":{"ast":{"absolutePath":"contracts/utils/Checkpoints.sol","exportedSymbols":{"Checkpoints":[6065],"Math":[8188],"SafeCast":[9729]},"id":6066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4526,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:33"},{"absolutePath":"contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":8189,"src":"218:25:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6066,"sourceUnit":9730,"src":"244:29:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"275:432:33","text":" @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function.\n _Available since v4.5._"},"fullyImplemented":true,"id":6065,"linearizedBaseContracts":[6065],"name":"Checkpoints","nameLocation":"716:11:33","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Checkpoints.History","id":4534,"members":[{"constant":false,"id":4533,"mutability":"mutable","name":"_checkpoints","nameLocation":"772:12:33","nodeType":"VariableDeclaration","scope":4534,"src":"759:25:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":4531,"nodeType":"UserDefinedTypeName","pathNode":{"id":4530,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"759:10:33"},"referencedDeclaration":4539,"src":"759:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":4532,"nodeType":"ArrayTypeName","src":"759:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"}],"name":"History","nameLocation":"741:7:33","nodeType":"StructDefinition","scope":6065,"src":"734:57:33","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint","id":4539,"members":[{"constant":false,"id":4536,"mutability":"mutable","name":"_blockNumber","nameLocation":"832:12:33","nodeType":"VariableDeclaration","scope":4539,"src":"825:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4535,"name":"uint32","nodeType":"ElementaryTypeName","src":"825:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"_value","nameLocation":"862:6:33","nodeType":"VariableDeclaration","scope":4539,"src":"854:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4537,"name":"uint224","nodeType":"ElementaryTypeName","src":"854:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"804:10:33","nodeType":"StructDefinition","scope":6065,"src":"797:78:33","visibility":"public"},{"body":{"id":4595,"nodeType":"Block","src":"1317:344:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"1335:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4552,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1349:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"1349:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1335:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1363:34:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":4550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1327:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1327:71:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4557,"nodeType":"ExpressionStatement","src":"1327:71:33"},{"assignments":[4559],"declarations":[{"constant":false,"id":4559,"mutability":"mutable","name":"key","nameLocation":"1415:3:33","nodeType":"VariableDeclaration","scope":4595,"src":"1408:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4558,"name":"uint32","nodeType":"ElementaryTypeName","src":"1408:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4564,"initialValue":{"arguments":[{"id":4562,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"1439:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"1421:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"1421:17:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1421:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"1408:43:33"},{"assignments":[4566],"declarations":[{"constant":false,"id":4566,"mutability":"mutable","name":"len","nameLocation":"1470:3:33","nodeType":"VariableDeclaration","scope":4595,"src":"1462:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4570,"initialValue":{"expression":{"expression":{"id":4567,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"1476:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"1476:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1462:38:33"},{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"pos","nameLocation":"1518:3:33","nodeType":"VariableDeclaration","scope":4595,"src":"1510:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4580,"initialValue":{"arguments":[{"expression":{"id":4574,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"1543:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"1543:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":4576,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"1562:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1567:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4578,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"1570:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[4993,5495,5997],"referencedDeclaration":4993,"src":"1524:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1524:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1510:64:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"1591:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1591:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4586,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"1620:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"1620:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4588,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"1639:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1639:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4585,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"1606:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1606:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":4592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4538,"src":"1606:48:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1591:63:33","trueExpression":{"hexValue":"30","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1602:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4549,"id":4594,"nodeType":"Return","src":"1584:70:33"}]},"documentation":{"id":4540,"nodeType":"StructuredDocumentation","src":"881:336:33","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n block, the requested block number must be in the past, excluding the current block."},"id":4596,"implemented":true,"kind":"function","modifiers":[],"name":"getAtBlock","nameLocation":"1231:10:33","nodeType":"FunctionDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"self","nameLocation":"1258:4:33","nodeType":"VariableDeclaration","scope":4596,"src":"1242:20:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":4542,"nodeType":"UserDefinedTypeName","pathNode":{"id":4541,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"1242:7:33"},"referencedDeclaration":4534,"src":"1242:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":4545,"mutability":"mutable","name":"blockNumber","nameLocation":"1272:11:33","nodeType":"VariableDeclaration","scope":4596,"src":"1264:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1241:43:33"},"returnParameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4596,"src":"1308:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1307:9:33"},"scope":6065,"src":"1222:439:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4695,"nodeType":"Block","src":"2167:655:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"2185:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4609,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2199:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2199:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2185:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:34:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":4607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2177:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2177:71:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4614,"nodeType":"ExpressionStatement","src":"2177:71:33"},{"assignments":[4616],"declarations":[{"constant":false,"id":4616,"mutability":"mutable","name":"key","nameLocation":"2265:3:33","nodeType":"VariableDeclaration","scope":4695,"src":"2258:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4615,"name":"uint32","nodeType":"ElementaryTypeName","src":"2258:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4621,"initialValue":{"arguments":[{"id":4619,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"2289:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4617,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"2271:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"2271:17:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2271:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2258:43:33"},{"assignments":[4623],"declarations":[{"constant":false,"id":4623,"mutability":"mutable","name":"len","nameLocation":"2320:3:33","nodeType":"VariableDeclaration","scope":4695,"src":"2312:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4627,"initialValue":{"expression":{"expression":{"id":4624,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2326:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"2326:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2326:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2312:38:33"},{"assignments":[4629],"declarations":[{"constant":false,"id":4629,"mutability":"mutable","name":"low","nameLocation":"2369:3:33","nodeType":"VariableDeclaration","scope":4695,"src":"2361:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4631,"initialValue":{"hexValue":"30","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2375:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2361:15:33"},{"assignments":[4633],"declarations":[{"constant":false,"id":4633,"mutability":"mutable","name":"high","nameLocation":"2394:4:33","nodeType":"VariableDeclaration","scope":4695,"src":"2386:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2386:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4635,"initialValue":{"id":4634,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"2401:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2386:18:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"2419:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2425:1:33","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2419:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"2415:242:33","trueBody":{"id":4669,"nodeType":"Block","src":"2428:229:33","statements":[{"assignments":[4640],"declarations":[{"constant":false,"id":4640,"mutability":"mutable","name":"mid","nameLocation":"2450:3:33","nodeType":"VariableDeclaration","scope":4669,"src":"2442:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2442:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4647,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4641,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"2456:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4644,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"2472:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4642,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"2462:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"2462:9:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2462:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2456:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2442:34:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"2494:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":4650,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2514:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"2514:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":4652,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"2533:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"2500:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":4654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":4536,"src":"2500:50:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2494:56:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4667,"nodeType":"Block","src":"2601:46:33","statements":[{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"2619:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"2625:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2631:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2625:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2619:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ExpressionStatement","src":"2619:13:33"}]},"id":4668,"nodeType":"IfStatement","src":"2490:157:33","trueBody":{"id":4660,"nodeType":"Block","src":"2552:43:33","statements":[{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"2570:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4657,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"2577:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2570:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"2570:10:33"}]}}]}},{"assignments":[4672],"declarations":[{"constant":false,"id":4672,"mutability":"mutable","name":"pos","nameLocation":"2675:3:33","nodeType":"VariableDeclaration","scope":4695,"src":"2667:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4680,"initialValue":{"arguments":[{"expression":{"id":4674,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2700:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"2700:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":4676,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"2719:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4677,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"2724:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4678,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"2729:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4673,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[4993,5495,5997],"referencedDeclaration":4993,"src":"2681:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2681:53:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2667:67:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"2752:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2759:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2752:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4686,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2781:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"2781:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"2800:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2800:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"2767:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2767:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":4692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4538,"src":"2767:48:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2752:63:33","trueExpression":{"hexValue":"30","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2763:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4606,"id":4694,"nodeType":"Return","src":"2745:70:33"}]},"documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"1667:386:33","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n checkpoints."},"id":4696,"implemented":true,"kind":"function","modifiers":[],"name":"getAtProbablyRecentBlock","nameLocation":"2067:24:33","nodeType":"FunctionDefinition","parameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"self","nameLocation":"2108:4:33","nodeType":"VariableDeclaration","scope":4696,"src":"2092:20:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":4599,"nodeType":"UserDefinedTypeName","pathNode":{"id":4598,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"2092:7:33"},"referencedDeclaration":4534,"src":"2092:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"blockNumber","nameLocation":"2122:11:33","nodeType":"VariableDeclaration","scope":4696,"src":"2114:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2091:43:33"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4696,"src":"2158:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:9:33"},"scope":6065,"src":"2058:764:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4723,"nodeType":"Block","src":"3087:110:33","statements":[{"expression":{"arguments":[{"expression":{"id":4710,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"3112:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"3112:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"arguments":[{"expression":{"id":4714,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3149:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3149:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4712,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"3131:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":8891,"src":"3131:17:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3131:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"3183:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4717,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9729,"src":"3164:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9729_$","typeString":"type(library SafeCast)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":8291,"src":"3164:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3164:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":4709,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[4941,5443,5945],"referencedDeclaration":4941,"src":"3104:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3104:86:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":4708,"id":4722,"nodeType":"Return","src":"3097:93:33"}]},"documentation":{"id":4697,"nodeType":"StructuredDocumentation","src":"2828:167:33","text":" @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n Returns previous value and new value."},"id":4724,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3009:4:33","nodeType":"FunctionDefinition","parameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"self","nameLocation":"3030:4:33","nodeType":"VariableDeclaration","scope":4724,"src":"3014:20:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":4699,"nodeType":"UserDefinedTypeName","pathNode":{"id":4698,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"3014:7:33"},"referencedDeclaration":4534,"src":"3014:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":4702,"mutability":"mutable","name":"value","nameLocation":"3044:5:33","nodeType":"VariableDeclaration","scope":4724,"src":"3036:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3013:37:33"},"returnParameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4724,"src":"3069:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4724,"src":"3078:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:18:33"},"scope":6065,"src":"3000:197:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4757,"nodeType":"Block","src":"3600:59:33","statements":[{"expression":{"arguments":[{"id":4748,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"3622:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},{"arguments":[{"arguments":[{"id":4751,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"3638:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}],"id":4750,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[4788,5290,5792],"referencedDeclaration":4788,"src":"3631:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$4534_storage_ptr_$returns$_t_uint224_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":4753,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"3645:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4749,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"3628:2:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3628:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4747,"name":"push","nodeType":"Identifier","overloadedDeclarations":[4724,4758,5093,5595],"referencedDeclaration":4724,"src":"3617:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$4534_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) returns (uint256,uint256)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3617:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4746,"id":4756,"nodeType":"Return","src":"3610:42:33"}]},"documentation":{"id":4725,"nodeType":"StructuredDocumentation","src":"3203:221:33","text":" @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n be set to `op(latest, delta)`.\n Returns previous value and new value."},"id":4758,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3438:4:33","nodeType":"FunctionDefinition","parameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"self","nameLocation":"3468:4:33","nodeType":"VariableDeclaration","scope":4758,"src":"3452:20:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":4727,"nodeType":"UserDefinedTypeName","pathNode":{"id":4726,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"3452:7:33"},"referencedDeclaration":4534,"src":"3452:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":4738,"mutability":"mutable","name":"op","nameLocation":"3532:2:33","nodeType":"VariableDeclaration","scope":4758,"src":"3482:52:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":4737,"nodeType":"FunctionTypeName","parameterTypes":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4737,"src":"3491:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3491:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4737,"src":"3500:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3490:18:33"},"returnParameterTypes":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4737,"src":"3523:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:33"},"src":"3482:52:33","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":4740,"mutability":"mutable","name":"delta","nameLocation":"3552:5:33","nodeType":"VariableDeclaration","scope":4758,"src":"3544:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3442:121:33"},"returnParameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4758,"src":"3582:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"3582:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4758,"src":"3591:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3591:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3581:18:33"},"scope":6065,"src":"3429:230:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4787,"nodeType":"Block","src":"3849:135:33","statements":[{"assignments":[4768],"declarations":[{"constant":false,"id":4768,"mutability":"mutable","name":"pos","nameLocation":"3867:3:33","nodeType":"VariableDeclaration","scope":4787,"src":"3859:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4772,"initialValue":{"expression":{"expression":{"id":4769,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"3873:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"3873:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3873:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3859:38:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"3914:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3914:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":4778,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"3943:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"3943:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4780,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"3962:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3968:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3962:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4777,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"3929:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3929:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":4784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4538,"src":"3929:48:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3914:63:33","trueExpression":{"hexValue":"30","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4766,"id":4786,"nodeType":"Return","src":"3907:70:33"}]},"documentation":{"id":4759,"nodeType":"StructuredDocumentation","src":"3665:109:33","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":4788,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3788:6:33","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"self","nameLocation":"3811:4:33","nodeType":"VariableDeclaration","scope":4788,"src":"3795:20:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":4761,"nodeType":"UserDefinedTypeName","pathNode":{"id":4760,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"3795:7:33"},"referencedDeclaration":4534,"src":"3795:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"3794:22:33"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4788,"src":"3840:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4764,"name":"uint224","nodeType":"ElementaryTypeName","src":"3840:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3839:9:33"},"scope":6065,"src":"3779:205:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4836,"nodeType":"Block","src":"4298:279:33","statements":[{"assignments":[4802],"declarations":[{"constant":false,"id":4802,"mutability":"mutable","name":"pos","nameLocation":"4316:3:33","nodeType":"VariableDeclaration","scope":4836,"src":"4308:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4308:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4806,"initialValue":{"expression":{"expression":{"id":4803,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"4322:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"4322:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4322:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4308:38:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"4360:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4367:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4834,"nodeType":"Block","src":"4421:150:33","statements":[{"assignments":[4818],"declarations":[{"constant":false,"id":4818,"mutability":"mutable","name":"ckpt","nameLocation":"4453:4:33","nodeType":"VariableDeclaration","scope":4834,"src":"4435:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":4817,"nodeType":"UserDefinedTypeName","pathNode":{"id":4816,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"4435:10:33"},"referencedDeclaration":4539,"src":"4435:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":4826,"initialValue":{"arguments":[{"expression":{"id":4820,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"4474:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"4474:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4822,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"4493:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4499:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4493:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4819,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"4460:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4460:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4435:66:33"},{"expression":{"components":[{"hexValue":"74727565","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4523:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":4828,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"4529:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":4829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":4536,"src":"4529:17:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4830,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"4548:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":4831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4538,"src":"4548:11:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":4832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4522:38:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":4800,"id":4833,"nodeType":"Return","src":"4515:45:33"}]},"id":4835,"nodeType":"IfStatement","src":"4356:215:33","trueBody":{"id":4815,"nodeType":"Block","src":"4370:45:33","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4392:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4399:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4402:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4391:13:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":4800,"id":4814,"nodeType":"Return","src":"4384:20:33"}]}}]},"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"3990:168:33","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":4837,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"4172:16:33","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"self","nameLocation":"4214:4:33","nodeType":"VariableDeclaration","scope":4837,"src":"4198:20:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":4791,"nodeType":"UserDefinedTypeName","pathNode":{"id":4790,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"4198:7:33"},"referencedDeclaration":4534,"src":"4198:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4188:36:33"},"returnParameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"exists","nameLocation":"4253:6:33","nodeType":"VariableDeclaration","scope":4837,"src":"4248:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4794,"name":"bool","nodeType":"ElementaryTypeName","src":"4248:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"_blockNumber","nameLocation":"4268:12:33","nodeType":"VariableDeclaration","scope":4837,"src":"4261:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4796,"name":"uint32","nodeType":"ElementaryTypeName","src":"4261:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"_value","nameLocation":"4290:6:33","nodeType":"VariableDeclaration","scope":4837,"src":"4282:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4798,"name":"uint224","nodeType":"ElementaryTypeName","src":"4282:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4247:50:33"},"scope":6065,"src":"4163:414:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4850,"nodeType":"Block","src":"4715:48:33","statements":[{"expression":{"expression":{"expression":{"id":4846,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"4732:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":4847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"4732:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4732:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4845,"id":4849,"nodeType":"Return","src":"4725:31:33"}]},"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"4583:57:33","text":" @dev Returns the number of checkpoint."},"id":4851,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4654:6:33","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"self","nameLocation":"4677:4:33","nodeType":"VariableDeclaration","scope":4851,"src":"4661:20:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":4840,"nodeType":"UserDefinedTypeName","pathNode":{"id":4839,"name":"History","nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"4661:7:33"},"referencedDeclaration":4534,"src":"4661:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_History_$4534_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4660:22:33"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4851,"src":"4706:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"4706:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4705:9:33"},"scope":6065,"src":"4645:118:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4940,"nodeType":"Block","src":"5045:750:33","statements":[{"assignments":[4868],"declarations":[{"constant":false,"id":4868,"mutability":"mutable","name":"pos","nameLocation":"5063:3:33","nodeType":"VariableDeclaration","scope":4940,"src":"5055:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"5055:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4871,"initialValue":{"expression":{"id":4869,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"5069:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5069:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5055:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4872,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"5095:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5101:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5095:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4938,"nodeType":"Block","src":"5676:113:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":4929,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"5726:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5739:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":4928,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"5700:10:33","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5700:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":4925,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"5690:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5690:9:33","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$4539_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5690:57:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4933,"nodeType":"ExpressionStatement","src":"5690:57:33"},{"expression":{"components":[{"hexValue":"30","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5769:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5772:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":4936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5768:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":4866,"id":4937,"nodeType":"Return","src":"5761:17:33"}]},"id":4939,"nodeType":"IfStatement","src":"5091:698:33","trueBody":{"id":4924,"nodeType":"Block","src":"5104:566:33","statements":[{"assignments":[4877],"declarations":[{"constant":false,"id":4877,"mutability":"mutable","name":"last","nameLocation":"5188:4:33","nodeType":"VariableDeclaration","scope":4924,"src":"5170:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":4876,"nodeType":"UserDefinedTypeName","pathNode":{"id":4875,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"5170:10:33"},"referencedDeclaration":4539,"src":"5170:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":4884,"initialValue":{"arguments":[{"id":4879,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"5209:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"5215:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5221:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5215:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4878,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"5195:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5195:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5170:53:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4886,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"5301:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":4887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":4536,"src":"5301:17:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4888,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"5322:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5301:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5327:29:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""},"value":"Checkpoint: decreasing keys"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""}],"id":4885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5293:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:64:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4892,"nodeType":"ExpressionStatement","src":"5293:64:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4893,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"5421:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":4894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":4536,"src":"5421:17:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4895,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"5442:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5421:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4917,"nodeType":"Block","src":"5529:90:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":4912,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"5583:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5596:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":4911,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"5557:10:33","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5557:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":4908,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"5547:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5547:9:33","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$4539_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5547:57:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4916,"nodeType":"ExpressionStatement","src":"5547:57:33"}]},"id":4918,"nodeType":"IfStatement","src":"5417:202:33","trueBody":{"id":4907,"nodeType":"Block","src":"5447:76:33","statements":[{"expression":{"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":4898,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"5479:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"5485:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5491:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5485:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4897,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"5465:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5465:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":4903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4538,"src":"5465:35:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5503:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5465:43:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":4906,"nodeType":"ExpressionStatement","src":"5465:43:33"}]}},{"expression":{"components":[{"expression":{"id":4919,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"5640:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":4920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":4538,"src":"5640:11:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":4921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5653:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":4922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5639:20:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":4866,"id":4923,"nodeType":"Return","src":"5632:27:33"}]}}]},"documentation":{"id":4852,"nodeType":"StructuredDocumentation","src":"4769:165:33","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":4941,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4948:7:33","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"self","nameLocation":"4977:4:33","nodeType":"VariableDeclaration","scope":4941,"src":"4956:25:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":4854,"nodeType":"UserDefinedTypeName","pathNode":{"id":4853,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"4956:10:33"},"referencedDeclaration":4539,"src":"4956:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":4855,"nodeType":"ArrayTypeName","src":"4956:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":4858,"mutability":"mutable","name":"key","nameLocation":"4990:3:33","nodeType":"VariableDeclaration","scope":4941,"src":"4983:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4857,"name":"uint32","nodeType":"ElementaryTypeName","src":"4983:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"value","nameLocation":"5003:5:33","nodeType":"VariableDeclaration","scope":4941,"src":"4995:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4859,"name":"uint224","nodeType":"ElementaryTypeName","src":"4995:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4955:54:33"},"returnParameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4941,"src":"5027:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4862,"name":"uint224","nodeType":"ElementaryTypeName","src":"5027:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":4865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4941,"src":"5036:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4864,"name":"uint224","nodeType":"ElementaryTypeName","src":"5036:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"5026:18:33"},"scope":6065,"src":"4939:856:33","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4992,"nodeType":"Block","src":"6304:275:33","statements":[{"body":{"id":4988,"nodeType":"Block","src":"6333:219:33","statements":[{"assignments":[4961],"declarations":[{"constant":false,"id":4961,"mutability":"mutable","name":"mid","nameLocation":"6355:3:33","nodeType":"VariableDeclaration","scope":4988,"src":"6347:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"6347:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4967,"initialValue":{"arguments":[{"id":4964,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"6374:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4965,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"6379:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4962,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"6361:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"6361:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6361:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6347:37:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4969,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"6416:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":4970,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"6422:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4968,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"6402:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6402:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":4972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":4536,"src":"6402:37:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4973,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"6442:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6402:43:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4986,"nodeType":"Block","src":"6496:46:33","statements":[{"expression":{"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4980,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"6514:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4981,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"6520:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6526:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6520:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6514:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4985,"nodeType":"ExpressionStatement","src":"6514:13:33"}]},"id":4987,"nodeType":"IfStatement","src":"6398:144:33","trueBody":{"id":4979,"nodeType":"Block","src":"6447:43:33","statements":[{"expression":{"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"6465:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4976,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"6472:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6465:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4978,"nodeType":"ExpressionStatement","src":"6465:10:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"6321:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4958,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"6327:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4989,"nodeType":"WhileStatement","src":"6314:238:33"},{"expression":{"id":4990,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"6568:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4956,"id":4991,"nodeType":"Return","src":"6561:11:33"}]},"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"5801:335:33","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6150:18:33","nodeType":"FunctionDefinition","parameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"self","nameLocation":"6199:4:33","nodeType":"VariableDeclaration","scope":4993,"src":"6178:25:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":4944,"nodeType":"UserDefinedTypeName","pathNode":{"id":4943,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"6178:10:33"},"referencedDeclaration":4539,"src":"6178:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":4945,"nodeType":"ArrayTypeName","src":"6178:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":4948,"mutability":"mutable","name":"key","nameLocation":"6220:3:33","nodeType":"VariableDeclaration","scope":4993,"src":"6213:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4947,"name":"uint32","nodeType":"ElementaryTypeName","src":"6213:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4950,"mutability":"mutable","name":"low","nameLocation":"6241:3:33","nodeType":"VariableDeclaration","scope":4993,"src":"6233:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6233:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4952,"mutability":"mutable","name":"high","nameLocation":"6262:4:33","nodeType":"VariableDeclaration","scope":4993,"src":"6254:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"6254:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6168:104:33"},"returnParameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"6295:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"6295:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6294:9:33"},"scope":6065,"src":"6141:438:33","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5044,"nodeType":"Block","src":"7089:275:33","statements":[{"body":{"id":5040,"nodeType":"Block","src":"7118:219:33","statements":[{"assignments":[5013],"declarations":[{"constant":false,"id":5013,"mutability":"mutable","name":"mid","nameLocation":"7140:3:33","nodeType":"VariableDeclaration","scope":5040,"src":"7132:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5019,"initialValue":{"arguments":[{"id":5016,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"7159:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5017,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"7164:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5014,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"7146:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"7146:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7146:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7132:37:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5021,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7201:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":5022,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7207:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5060,"src":"7187:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$4539_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7187:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":5024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":4536,"src":"7187:37:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5025,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"7227:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7187:43:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5038,"nodeType":"Block","src":"7284:43:33","statements":[{"expression":{"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5034,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"7302:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5035,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7309:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7302:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5037,"nodeType":"ExpressionStatement","src":"7302:10:33"}]},"id":5039,"nodeType":"IfStatement","src":"7183:144:33","trueBody":{"id":5033,"nodeType":"Block","src":"7232:46:33","statements":[{"expression":{"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"7250:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"7256:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7262:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7256:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7250:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5032,"nodeType":"ExpressionStatement","src":"7250:13:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"7106:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5010,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"7112:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7106:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5041,"nodeType":"WhileStatement","src":"7099:238:33"},{"expression":{"id":5042,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"7353:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5008,"id":5043,"nodeType":"Return","src":"7346:11:33"}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"6585:336:33","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":5045,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6935:18:33","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"self","nameLocation":"6984:4:33","nodeType":"VariableDeclaration","scope":5045,"src":"6963:25:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":4996,"nodeType":"UserDefinedTypeName","pathNode":{"id":4995,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"6963:10:33"},"referencedDeclaration":4539,"src":"6963:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":4997,"nodeType":"ArrayTypeName","src":"6963:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":5000,"mutability":"mutable","name":"key","nameLocation":"7005:3:33","nodeType":"VariableDeclaration","scope":5045,"src":"6998:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4999,"name":"uint32","nodeType":"ElementaryTypeName","src":"6998:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5002,"mutability":"mutable","name":"low","nameLocation":"7026:3:33","nodeType":"VariableDeclaration","scope":5045,"src":"7018:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"7018:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5004,"mutability":"mutable","name":"high","nameLocation":"7047:4:33","nodeType":"VariableDeclaration","scope":5045,"src":"7039:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"7039:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6953:104:33"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5045,"src":"7080:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"7080:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7079:9:33"},"scope":6065,"src":"6926:438:33","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5059,"nodeType":"Block","src":"7619:125:33","statements":[{"AST":{"nodeType":"YulBlock","src":"7638:100:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7659:1:33","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7662:9:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7652:6:33"},"nodeType":"YulFunctionCall","src":"7652:20:33"},"nodeType":"YulExpressionStatement","src":"7652:20:33"},{"nodeType":"YulAssignment","src":"7685:43:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7714:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7717:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7704:9:33"},"nodeType":"YulFunctionCall","src":"7704:18:33"},{"name":"pos","nodeType":"YulIdentifier","src":"7724:3:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7700:3:33"},"nodeType":"YulFunctionCall","src":"7700:28:33"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7685:11:33"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5052,"isOffset":false,"isSlot":false,"src":"7724:3:33","valueSize":1},{"declaration":5056,"isOffset":false,"isSlot":true,"src":"7685:11:33","suffix":"slot","valueSize":1},{"declaration":5050,"isOffset":false,"isSlot":true,"src":"7662:9:33","suffix":"slot","valueSize":1}],"id":5058,"nodeType":"InlineAssembly","src":"7629:109:33"}]},"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"7370:132:33","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7516:13:33","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"self","nameLocation":"7551:4:33","nodeType":"VariableDeclaration","scope":5060,"src":"7530:25:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":5048,"nodeType":"UserDefinedTypeName","pathNode":{"id":5047,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"7530:10:33"},"referencedDeclaration":4539,"src":"7530:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":5049,"nodeType":"ArrayTypeName","src":"7530:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$4539_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"pos","nameLocation":"7565:3:33","nodeType":"VariableDeclaration","scope":5060,"src":"7557:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"7557:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7529:40:33"},"returnParameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"result","nameLocation":"7611:6:33","nodeType":"VariableDeclaration","scope":5060,"src":"7592:25:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":5055,"nodeType":"UserDefinedTypeName","pathNode":{"id":5054,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":4539,"src":"7592:10:33"},"referencedDeclaration":4539,"src":"7592:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$4539_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"src":"7591:27:33"},"scope":6065,"src":"7507:237:33","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace224","id":5065,"members":[{"constant":false,"id":5064,"mutability":"mutable","name":"_checkpoints","nameLocation":"7792:12:33","nodeType":"VariableDeclaration","scope":5065,"src":"7776:28:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":5062,"nodeType":"UserDefinedTypeName","pathNode":{"id":5061,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"7776:13:33"},"referencedDeclaration":5070,"src":"7776:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":5063,"nodeType":"ArrayTypeName","src":"7776:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"7757:8:33","nodeType":"StructDefinition","scope":6065,"src":"7750:61:33","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":5070,"members":[{"constant":false,"id":5067,"mutability":"mutable","name":"_key","nameLocation":"7855:4:33","nodeType":"VariableDeclaration","scope":5070,"src":"7848:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5066,"name":"uint32","nodeType":"ElementaryTypeName","src":"7848:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"_value","nameLocation":"7877:6:33","nodeType":"VariableDeclaration","scope":5070,"src":"7869:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5068,"name":"uint224","nodeType":"ElementaryTypeName","src":"7869:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"7824:13:33","nodeType":"StructDefinition","scope":6065,"src":"7817:73:33","visibility":"public"},{"body":{"id":5092,"nodeType":"Block","src":"8163:62:33","statements":[{"expression":{"arguments":[{"expression":{"id":5086,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"8188:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"8188:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":5088,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"8207:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"8212:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":5085,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[4941,5443,5945],"referencedDeclaration":5443,"src":"8180:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8180:38:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":5084,"id":5091,"nodeType":"Return","src":"8173:45:33"}]},"documentation":{"id":5071,"nodeType":"StructuredDocumentation","src":"7896:162:33","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":5093,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8072:4:33","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"self","nameLocation":"8094:4:33","nodeType":"VariableDeclaration","scope":5093,"src":"8077:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":5073,"nodeType":"UserDefinedTypeName","pathNode":{"id":5072,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"8077:8:33"},"referencedDeclaration":5065,"src":"8077:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"key","nameLocation":"8107:3:33","nodeType":"VariableDeclaration","scope":5093,"src":"8100:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5075,"name":"uint32","nodeType":"ElementaryTypeName","src":"8100:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"value","nameLocation":"8120:5:33","nodeType":"VariableDeclaration","scope":5093,"src":"8112:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5077,"name":"uint224","nodeType":"ElementaryTypeName","src":"8112:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8076:50:33"},"returnParameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5093,"src":"8145:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5080,"name":"uint224","nodeType":"ElementaryTypeName","src":"8145:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":5083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5093,"src":"8154:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5082,"name":"uint224","nodeType":"ElementaryTypeName","src":"8154:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8144:18:33"},"scope":6065,"src":"8063:162:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5132,"nodeType":"Block","src":"8471:207:33","statements":[{"assignments":[5105],"declarations":[{"constant":false,"id":5105,"mutability":"mutable","name":"len","nameLocation":"8489:3:33","nodeType":"VariableDeclaration","scope":5132,"src":"8481:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5104,"name":"uint256","nodeType":"ElementaryTypeName","src":"8481:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5109,"initialValue":{"expression":{"expression":{"id":5106,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"8495:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"8495:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8495:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8481:38:33"},{"assignments":[5111],"declarations":[{"constant":false,"id":5111,"mutability":"mutable","name":"pos","nameLocation":"8537:3:33","nodeType":"VariableDeclaration","scope":5132,"src":"8529:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5110,"name":"uint256","nodeType":"ElementaryTypeName","src":"8529:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5119,"initialValue":{"arguments":[{"expression":{"id":5113,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"8562:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"8562:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":5115,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"8581:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8586:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5117,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"8589:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[5045,5547,6049],"referencedDeclaration":5547,"src":"8543:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8543:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8529:64:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5120,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"8610:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5121,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"8617:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8610:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5125,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"8641:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"8641:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":5127,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"8660:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5124,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"8627:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8627:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"8627:44:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8610:61:33","trueExpression":{"hexValue":"30","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8623:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5103,"id":5131,"nodeType":"Return","src":"8603:68:33"}]},"documentation":{"id":5094,"nodeType":"StructuredDocumentation","src":"8231:147:33","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none."},"id":5133,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8392:11:33","nodeType":"FunctionDefinition","parameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"self","nameLocation":"8421:4:33","nodeType":"VariableDeclaration","scope":5133,"src":"8404:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":5096,"nodeType":"UserDefinedTypeName","pathNode":{"id":5095,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"8404:8:33"},"referencedDeclaration":5065,"src":"8404:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":5099,"mutability":"mutable","name":"key","nameLocation":"8434:3:33","nodeType":"VariableDeclaration","scope":5133,"src":"8427:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5098,"name":"uint32","nodeType":"ElementaryTypeName","src":"8427:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8403:35:33"},"returnParameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5133,"src":"8462:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5101,"name":"uint224","nodeType":"ElementaryTypeName","src":"8462:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8461:9:33"},"scope":6065,"src":"8383:295:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"8926:209:33","statements":[{"assignments":[5145],"declarations":[{"constant":false,"id":5145,"mutability":"mutable","name":"len","nameLocation":"8944:3:33","nodeType":"VariableDeclaration","scope":5174,"src":"8936:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"8936:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5149,"initialValue":{"expression":{"expression":{"id":5146,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"8950:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"8950:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8950:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8936:38:33"},{"assignments":[5151],"declarations":[{"constant":false,"id":5151,"mutability":"mutable","name":"pos","nameLocation":"8992:3:33","nodeType":"VariableDeclaration","scope":5174,"src":"8984:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"8984:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5159,"initialValue":{"arguments":[{"expression":{"id":5153,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"9017:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"9017:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":5155,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"9036:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9041:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5157,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"9044:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5152,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[4993,5495,5997],"referencedDeclaration":5495,"src":"8998:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8998:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8984:64:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5160,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"9065:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9072:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9065:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5165,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"9094:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"9094:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"9113:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9119:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9113:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5164,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"9080:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9080:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"9080:48:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9065:63:33","trueExpression":{"hexValue":"30","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9076:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5143,"id":5173,"nodeType":"Return","src":"9058:70:33"}]},"documentation":{"id":5134,"nodeType":"StructuredDocumentation","src":"8684:149:33","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none."},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8847:11:33","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"self","nameLocation":"8876:4:33","nodeType":"VariableDeclaration","scope":5175,"src":"8859:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":5136,"nodeType":"UserDefinedTypeName","pathNode":{"id":5135,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"8859:8:33"},"referencedDeclaration":5065,"src":"8859:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":5139,"mutability":"mutable","name":"key","nameLocation":"8889:3:33","nodeType":"VariableDeclaration","scope":5175,"src":"8882:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5138,"name":"uint32","nodeType":"ElementaryTypeName","src":"8882:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8858:35:33"},"returnParameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"8917:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5141,"name":"uint224","nodeType":"ElementaryTypeName","src":"8917:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8916:9:33"},"scope":6065,"src":"8838:297:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5259,"nodeType":"Block","src":"9520:512:33","statements":[{"assignments":[5187],"declarations":[{"constant":false,"id":5187,"mutability":"mutable","name":"len","nameLocation":"9538:3:33","nodeType":"VariableDeclaration","scope":5259,"src":"9530:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5186,"name":"uint256","nodeType":"ElementaryTypeName","src":"9530:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5191,"initialValue":{"expression":{"expression":{"id":5188,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"9544:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"9544:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9544:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9530:38:33"},{"assignments":[5193],"declarations":[{"constant":false,"id":5193,"mutability":"mutable","name":"low","nameLocation":"9587:3:33","nodeType":"VariableDeclaration","scope":5259,"src":"9579:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"9579:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5195,"initialValue":{"hexValue":"30","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9593:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9579:15:33"},{"assignments":[5197],"declarations":[{"constant":false,"id":5197,"mutability":"mutable","name":"high","nameLocation":"9612:4:33","nodeType":"VariableDeclaration","scope":5259,"src":"9604:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"9604:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5199,"initialValue":{"id":5198,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"9619:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9604:18:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"9637:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9643:1:33","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9637:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5234,"nodeType":"IfStatement","src":"9633:234:33","trueBody":{"id":5233,"nodeType":"Block","src":"9646:221:33","statements":[{"assignments":[5204],"declarations":[{"constant":false,"id":5204,"mutability":"mutable","name":"mid","nameLocation":"9668:3:33","nodeType":"VariableDeclaration","scope":5233,"src":"9660:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"9660:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5211,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5205,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"9674:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5208,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"9690:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5206,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"9680:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"9680:9:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9680:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9674:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9660:34:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"9712:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":5214,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"9732:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"9732:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":5216,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"9751:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5213,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"9718:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9718:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"9718:42:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"9712:48:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5231,"nodeType":"Block","src":"9811:46:33","statements":[{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5225,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"9829:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"9835:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9835:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9829:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5230,"nodeType":"ExpressionStatement","src":"9829:13:33"}]},"id":5232,"nodeType":"IfStatement","src":"9708:149:33","trueBody":{"id":5224,"nodeType":"Block","src":"9762:43:33","statements":[{"expression":{"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5220,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"9780:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5221,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"9787:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9780:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5223,"nodeType":"ExpressionStatement","src":"9780:10:33"}]}}]}},{"assignments":[5236],"declarations":[{"constant":false,"id":5236,"mutability":"mutable","name":"pos","nameLocation":"9885:3:33","nodeType":"VariableDeclaration","scope":5259,"src":"9877:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"9877:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5244,"initialValue":{"arguments":[{"expression":{"id":5238,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"9910:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"9910:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":5240,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"9929:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5241,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"9934:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5242,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"9939:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[4993,5495,5997],"referencedDeclaration":5495,"src":"9891:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:53:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9877:67:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"9962:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9962:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5250,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"9991:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"9991:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"10010:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10010:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5249,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"9977:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"9977:48:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9962:63:33","trueExpression":{"hexValue":"30","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9973:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5185,"id":5258,"nodeType":"Return","src":"9955:70:33"}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"9141:280:33","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys)."},"id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9435:17:33","nodeType":"FunctionDefinition","parameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"self","nameLocation":"9470:4:33","nodeType":"VariableDeclaration","scope":5260,"src":"9453:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":5178,"nodeType":"UserDefinedTypeName","pathNode":{"id":5177,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"9453:8:33"},"referencedDeclaration":5065,"src":"9453:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":5181,"mutability":"mutable","name":"key","nameLocation":"9483:3:33","nodeType":"VariableDeclaration","scope":5260,"src":"9476:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5180,"name":"uint32","nodeType":"ElementaryTypeName","src":"9476:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9452:35:33"},"returnParameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5260,"src":"9511:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5183,"name":"uint224","nodeType":"ElementaryTypeName","src":"9511:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9510:9:33"},"scope":6065,"src":"9426:606:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5289,"nodeType":"Block","src":"10223:135:33","statements":[{"assignments":[5270],"declarations":[{"constant":false,"id":5270,"mutability":"mutable","name":"pos","nameLocation":"10241:3:33","nodeType":"VariableDeclaration","scope":5289,"src":"10233:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"10233:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5274,"initialValue":{"expression":{"expression":{"id":5271,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"10247:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"10247:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10247:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10233:38:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5275,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"10288:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10295:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10288:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5280,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"10317:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"10317:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"10336:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10342:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10336:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5279,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"10303:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10303:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"10303:48:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10288:63:33","trueExpression":{"hexValue":"30","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10299:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5268,"id":5288,"nodeType":"Return","src":"10281:70:33"}]},"documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"10038:109:33","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":5290,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10161:6:33","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"self","nameLocation":"10185:4:33","nodeType":"VariableDeclaration","scope":5290,"src":"10168:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":5263,"nodeType":"UserDefinedTypeName","pathNode":{"id":5262,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"10168:8:33"},"referencedDeclaration":5065,"src":"10168:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"10167:23:33"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5290,"src":"10214:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5266,"name":"uint224","nodeType":"ElementaryTypeName","src":"10214:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10213:9:33"},"scope":6065,"src":"10152:206:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5338,"nodeType":"Block","src":"10651:274:33","statements":[{"assignments":[5304],"declarations":[{"constant":false,"id":5304,"mutability":"mutable","name":"pos","nameLocation":"10669:3:33","nodeType":"VariableDeclaration","scope":5338,"src":"10661:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10661:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5308,"initialValue":{"expression":{"expression":{"id":5305,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"10675:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"10675:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10675:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10661:38:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"10713:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10720:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10713:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5336,"nodeType":"Block","src":"10774:145:33","statements":[{"assignments":[5320],"declarations":[{"constant":false,"id":5320,"mutability":"mutable","name":"ckpt","nameLocation":"10809:4:33","nodeType":"VariableDeclaration","scope":5336,"src":"10788:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":5319,"nodeType":"UserDefinedTypeName","pathNode":{"id":5318,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"10788:13:33"},"referencedDeclaration":5070,"src":"10788:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":5328,"initialValue":{"arguments":[{"expression":{"id":5322,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"10830:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"10830:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"10849:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10855:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10849:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"10816:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10816:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10788:69:33"},{"expression":{"components":[{"hexValue":"74727565","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10879:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":5330,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10885:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":5331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"10885:9:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":5332,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10896:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":5333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"10896:11:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":5334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10878:30:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":5302,"id":5335,"nodeType":"Return","src":"10871:37:33"}]},"id":5337,"nodeType":"IfStatement","src":"10709:210:33","trueBody":{"id":5317,"nodeType":"Block","src":"10723:45:33","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10745:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10752:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10755:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10744:13:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":5302,"id":5316,"nodeType":"Return","src":"10737:20:33"}]}}]},"documentation":{"id":5291,"nodeType":"StructuredDocumentation","src":"10364:168:33","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":5339,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10546:16:33","nodeType":"FunctionDefinition","parameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"self","nameLocation":"10580:4:33","nodeType":"VariableDeclaration","scope":5339,"src":"10563:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":5293,"nodeType":"UserDefinedTypeName","pathNode":{"id":5292,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"10563:8:33"},"referencedDeclaration":5065,"src":"10563:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"10562:23:33"},"returnParameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"exists","nameLocation":"10614:6:33","nodeType":"VariableDeclaration","scope":5339,"src":"10609:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5296,"name":"bool","nodeType":"ElementaryTypeName","src":"10609:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5299,"mutability":"mutable","name":"_key","nameLocation":"10629:4:33","nodeType":"VariableDeclaration","scope":5339,"src":"10622:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5298,"name":"uint32","nodeType":"ElementaryTypeName","src":"10622:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5301,"mutability":"mutable","name":"_value","nameLocation":"10643:6:33","nodeType":"VariableDeclaration","scope":5339,"src":"10635:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5300,"name":"uint224","nodeType":"ElementaryTypeName","src":"10635:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10608:42:33"},"scope":6065,"src":"10537:388:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5352,"nodeType":"Block","src":"11064:48:33","statements":[{"expression":{"expression":{"expression":{"id":5348,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"11081:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":5349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5064,"src":"11081:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11081:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5347,"id":5351,"nodeType":"Return","src":"11074:31:33"}]},"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"10931:57:33","text":" @dev Returns the number of checkpoint."},"id":5353,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11002:6:33","nodeType":"FunctionDefinition","parameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"self","nameLocation":"11026:4:33","nodeType":"VariableDeclaration","scope":5353,"src":"11009:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":5342,"nodeType":"UserDefinedTypeName","pathNode":{"id":5341,"name":"Trace224","nodeType":"IdentifierPath","referencedDeclaration":5065,"src":"11009:8:33"},"referencedDeclaration":5065,"src":"11009:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$5065_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"11008:23:33"},"returnParameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5353,"src":"11055:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"11055:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11054:9:33"},"scope":6065,"src":"10993:119:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5442,"nodeType":"Block","src":"11397:727:33","statements":[{"assignments":[5370],"declarations":[{"constant":false,"id":5370,"mutability":"mutable","name":"pos","nameLocation":"11415:3:33","nodeType":"VariableDeclaration","scope":5442,"src":"11407:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"11407:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5373,"initialValue":{"expression":{"id":5371,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"11421:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11421:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11407:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"11447:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11453:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11447:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5440,"nodeType":"Block","src":"12010:108:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":5431,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"12055:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"12068:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":5430,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"12034:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"12034:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":5427,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"12024:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"12024:9:33","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$5070_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12024:52:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5435,"nodeType":"ExpressionStatement","src":"12024:52:33"},{"expression":{"components":[{"hexValue":"30","id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12098:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"12101:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":5438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12097:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":5368,"id":5439,"nodeType":"Return","src":"12090:17:33"}]},"id":5441,"nodeType":"IfStatement","src":"11443:675:33","trueBody":{"id":5426,"nodeType":"Block","src":"11456:548:33","statements":[{"assignments":[5379],"declarations":[{"constant":false,"id":5379,"mutability":"mutable","name":"last","nameLocation":"11543:4:33","nodeType":"VariableDeclaration","scope":5426,"src":"11522:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":5378,"nodeType":"UserDefinedTypeName","pathNode":{"id":5377,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"11522:13:33"},"referencedDeclaration":5070,"src":"11522:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":5386,"initialValue":{"arguments":[{"id":5381,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"11564:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5382,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"11570:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11576:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11570:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5380,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"11550:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11522:56:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5388,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"11656:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":5389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"11656:9:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5390,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"11669:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11656:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11674:29:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""},"value":"Checkpoint: decreasing keys"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""}],"id":5387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11648:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11648:56:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5394,"nodeType":"ExpressionStatement","src":"11648:56:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5395,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"11768:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":5396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"11768:9:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5397,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"11781:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11768:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5419,"nodeType":"Block","src":"11868:85:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":5414,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"11917:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"11930:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":5413,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"11896:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"11896:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":5410,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"11886:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"11886:9:33","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$5070_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11886:52:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5418,"nodeType":"ExpressionStatement","src":"11886:52:33"}]},"id":5420,"nodeType":"IfStatement","src":"11764:189:33","trueBody":{"id":5409,"nodeType":"Block","src":"11786:76:33","statements":[{"expression":{"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":5400,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"11818:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"11824:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11830:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11824:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5399,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"11804:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11804:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"11804:35:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"11842:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"11804:43:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":5408,"nodeType":"ExpressionStatement","src":"11804:43:33"}]}},{"expression":{"components":[{"expression":{"id":5421,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"11974:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":5422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"11974:11:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"11987:5:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":5424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11973:20:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":5368,"id":5425,"nodeType":"Return","src":"11966:27:33"}]}}]},"documentation":{"id":5354,"nodeType":"StructuredDocumentation","src":"11118:165:33","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":5443,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11297:7:33","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"self","nameLocation":"11329:4:33","nodeType":"VariableDeclaration","scope":5443,"src":"11305:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":5356,"nodeType":"UserDefinedTypeName","pathNode":{"id":5355,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"11305:13:33"},"referencedDeclaration":5070,"src":"11305:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":5357,"nodeType":"ArrayTypeName","src":"11305:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":5360,"mutability":"mutable","name":"key","nameLocation":"11342:3:33","nodeType":"VariableDeclaration","scope":5443,"src":"11335:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5359,"name":"uint32","nodeType":"ElementaryTypeName","src":"11335:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"11355:5:33","nodeType":"VariableDeclaration","scope":5443,"src":"11347:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5361,"name":"uint224","nodeType":"ElementaryTypeName","src":"11347:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"11304:57:33"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"11379:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5364,"name":"uint224","nodeType":"ElementaryTypeName","src":"11379:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":5367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"11388:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5366,"name":"uint224","nodeType":"ElementaryTypeName","src":"11388:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"11378:18:33"},"scope":6065,"src":"11288:836:33","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5494,"nodeType":"Block","src":"12636:267:33","statements":[{"body":{"id":5490,"nodeType":"Block","src":"12665:211:33","statements":[{"assignments":[5463],"declarations":[{"constant":false,"id":5463,"mutability":"mutable","name":"mid","nameLocation":"12687:3:33","nodeType":"VariableDeclaration","scope":5490,"src":"12679:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12679:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5469,"initialValue":{"arguments":[{"id":5466,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"12706:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5467,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"12711:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5464,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"12693:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"12693:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12693:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12679:37:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5471,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"12748:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":5472,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"12754:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"12734:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12734:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"12734:29:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5475,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"12766:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12734:35:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5488,"nodeType":"Block","src":"12820:46:33","statements":[{"expression":{"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5482,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"12838:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"12844:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12850:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12844:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12838:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5487,"nodeType":"ExpressionStatement","src":"12838:13:33"}]},"id":5489,"nodeType":"IfStatement","src":"12730:136:33","trueBody":{"id":5481,"nodeType":"Block","src":"12771:43:33","statements":[{"expression":{"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5477,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"12789:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5478,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"12796:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12789:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5480,"nodeType":"ExpressionStatement","src":"12789:10:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"12653:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5460,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"12659:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12653:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5491,"nodeType":"WhileStatement","src":"12646:230:33"},{"expression":{"id":5492,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"12892:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5458,"id":5493,"nodeType":"Return","src":"12885:11:33"}]},"documentation":{"id":5444,"nodeType":"StructuredDocumentation","src":"12130:335:33","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":5495,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12479:18:33","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"self","nameLocation":"12531:4:33","nodeType":"VariableDeclaration","scope":5495,"src":"12507:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":5446,"nodeType":"UserDefinedTypeName","pathNode":{"id":5445,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"12507:13:33"},"referencedDeclaration":5070,"src":"12507:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":5447,"nodeType":"ArrayTypeName","src":"12507:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":5450,"mutability":"mutable","name":"key","nameLocation":"12552:3:33","nodeType":"VariableDeclaration","scope":5495,"src":"12545:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5449,"name":"uint32","nodeType":"ElementaryTypeName","src":"12545:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"low","nameLocation":"12573:3:33","nodeType":"VariableDeclaration","scope":5495,"src":"12565:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"12565:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"high","nameLocation":"12594:4:33","nodeType":"VariableDeclaration","scope":5495,"src":"12586:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"12586:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12497:107:33"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5495,"src":"12627:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"12627:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12626:9:33"},"scope":6065,"src":"12470:433:33","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5546,"nodeType":"Block","src":"13416:267:33","statements":[{"body":{"id":5542,"nodeType":"Block","src":"13445:211:33","statements":[{"assignments":[5515],"declarations":[{"constant":false,"id":5515,"mutability":"mutable","name":"mid","nameLocation":"13467:3:33","nodeType":"VariableDeclaration","scope":5542,"src":"13459:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5514,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5521,"initialValue":{"arguments":[{"id":5518,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"13486:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5519,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"13491:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5516,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"13473:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"13473:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13473:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13459:37:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5523,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"13528:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":5524,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"13534:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":5562,"src":"13514:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$5070_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13514:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":5526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5067,"src":"13514:29:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5527,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"13546:3:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"13514:35:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5540,"nodeType":"Block","src":"13603:43:33","statements":[{"expression":{"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5536,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"13621:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5537,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"13628:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13621:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5539,"nodeType":"ExpressionStatement","src":"13621:10:33"}]},"id":5541,"nodeType":"IfStatement","src":"13510:136:33","trueBody":{"id":5535,"nodeType":"Block","src":"13551:46:33","statements":[{"expression":{"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5529,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"13569:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5530,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"13575:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13581:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13575:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13569:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5534,"nodeType":"ExpressionStatement","src":"13569:13:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"13433:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5512,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"13439:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13433:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5543,"nodeType":"WhileStatement","src":"13426:230:33"},{"expression":{"id":5544,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"13672:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5510,"id":5545,"nodeType":"Return","src":"13665:11:33"}]},"documentation":{"id":5496,"nodeType":"StructuredDocumentation","src":"12909:336:33","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":5547,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13259:18:33","nodeType":"FunctionDefinition","parameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"self","nameLocation":"13311:4:33","nodeType":"VariableDeclaration","scope":5547,"src":"13287:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":5498,"nodeType":"UserDefinedTypeName","pathNode":{"id":5497,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"13287:13:33"},"referencedDeclaration":5070,"src":"13287:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":5499,"nodeType":"ArrayTypeName","src":"13287:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"key","nameLocation":"13332:3:33","nodeType":"VariableDeclaration","scope":5547,"src":"13325:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5501,"name":"uint32","nodeType":"ElementaryTypeName","src":"13325:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5504,"mutability":"mutable","name":"low","nameLocation":"13353:3:33","nodeType":"VariableDeclaration","scope":5547,"src":"13345:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"13345:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5506,"mutability":"mutable","name":"high","nameLocation":"13374:4:33","nodeType":"VariableDeclaration","scope":5547,"src":"13366:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"13366:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13277:107:33"},"returnParameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5547,"src":"13407:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"13407:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13406:9:33"},"scope":6065,"src":"13250:433:33","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5561,"nodeType":"Block","src":"13966:125:33","statements":[{"AST":{"nodeType":"YulBlock","src":"13985:100:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14006:1:33","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"14009:9:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13999:6:33"},"nodeType":"YulFunctionCall","src":"13999:20:33"},"nodeType":"YulExpressionStatement","src":"13999:20:33"},{"nodeType":"YulAssignment","src":"14032:43:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14061:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14064:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14051:9:33"},"nodeType":"YulFunctionCall","src":"14051:18:33"},{"name":"pos","nodeType":"YulIdentifier","src":"14071:3:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14047:3:33"},"nodeType":"YulFunctionCall","src":"14047:28:33"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"14032:11:33"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5554,"isOffset":false,"isSlot":false,"src":"14071:3:33","valueSize":1},{"declaration":5558,"isOffset":false,"isSlot":true,"src":"14032:11:33","suffix":"slot","valueSize":1},{"declaration":5552,"isOffset":false,"isSlot":true,"src":"14009:9:33","suffix":"slot","valueSize":1}],"id":5560,"nodeType":"InlineAssembly","src":"13976:109:33"}]},"documentation":{"id":5548,"nodeType":"StructuredDocumentation","src":"13689:132:33","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":5562,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"13835:13:33","nodeType":"FunctionDefinition","parameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"self","nameLocation":"13882:4:33","nodeType":"VariableDeclaration","scope":5562,"src":"13858:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":5550,"nodeType":"UserDefinedTypeName","pathNode":{"id":5549,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"13858:13:33"},"referencedDeclaration":5070,"src":"13858:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":5551,"nodeType":"ArrayTypeName","src":"13858:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$5070_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":5554,"mutability":"mutable","name":"pos","nameLocation":"13904:3:33","nodeType":"VariableDeclaration","scope":5562,"src":"13896:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5553,"name":"uint256","nodeType":"ElementaryTypeName","src":"13896:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13848:65:33"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"result","nameLocation":"13958:6:33","nodeType":"VariableDeclaration","scope":5562,"src":"13936:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":5557,"nodeType":"UserDefinedTypeName","pathNode":{"id":5556,"name":"Checkpoint224","nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"13936:13:33"},"referencedDeclaration":5070,"src":"13936:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$5070_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"13935:30:33"},"scope":6065,"src":"13826:265:33","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":5567,"members":[{"constant":false,"id":5566,"mutability":"mutable","name":"_checkpoints","nameLocation":"14139:12:33","nodeType":"VariableDeclaration","scope":5567,"src":"14123:28:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":5564,"nodeType":"UserDefinedTypeName","pathNode":{"id":5563,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"14123:13:33"},"referencedDeclaration":5572,"src":"14123:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":5565,"nodeType":"ArrayTypeName","src":"14123:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14104:8:33","nodeType":"StructDefinition","scope":6065,"src":"14097:61:33","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":5572,"members":[{"constant":false,"id":5569,"mutability":"mutable","name":"_key","nameLocation":"14202:4:33","nodeType":"VariableDeclaration","scope":5572,"src":"14195:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5568,"name":"uint96","nodeType":"ElementaryTypeName","src":"14195:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":5571,"mutability":"mutable","name":"_value","nameLocation":"14224:6:33","nodeType":"VariableDeclaration","scope":5572,"src":"14216:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5570,"name":"uint160","nodeType":"ElementaryTypeName","src":"14216:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14171:13:33","nodeType":"StructDefinition","scope":6065,"src":"14164:73:33","visibility":"public"},{"body":{"id":5594,"nodeType":"Block","src":"14510:62:33","statements":[{"expression":{"arguments":[{"expression":{"id":5588,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"14535:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"14535:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":5590,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"14554:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"14559:5:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5587,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[4941,5443,5945],"referencedDeclaration":5945,"src":"14527:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14527:38:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":5586,"id":5593,"nodeType":"Return","src":"14520:45:33"}]},"documentation":{"id":5573,"nodeType":"StructuredDocumentation","src":"14243:162:33","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"14419:4:33","nodeType":"FunctionDefinition","parameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"self","nameLocation":"14441:4:33","nodeType":"VariableDeclaration","scope":5595,"src":"14424:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":5575,"nodeType":"UserDefinedTypeName","pathNode":{"id":5574,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"14424:8:33"},"referencedDeclaration":5567,"src":"14424:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":5578,"mutability":"mutable","name":"key","nameLocation":"14454:3:33","nodeType":"VariableDeclaration","scope":5595,"src":"14447:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5577,"name":"uint96","nodeType":"ElementaryTypeName","src":"14447:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":5580,"mutability":"mutable","name":"value","nameLocation":"14467:5:33","nodeType":"VariableDeclaration","scope":5595,"src":"14459:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5579,"name":"uint160","nodeType":"ElementaryTypeName","src":"14459:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14423:50:33"},"returnParameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5595,"src":"14492:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5582,"name":"uint160","nodeType":"ElementaryTypeName","src":"14492:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5595,"src":"14501:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5584,"name":"uint160","nodeType":"ElementaryTypeName","src":"14501:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14491:18:33"},"scope":6065,"src":"14410:162:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5634,"nodeType":"Block","src":"14818:207:33","statements":[{"assignments":[5607],"declarations":[{"constant":false,"id":5607,"mutability":"mutable","name":"len","nameLocation":"14836:3:33","nodeType":"VariableDeclaration","scope":5634,"src":"14828:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"14828:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5611,"initialValue":{"expression":{"expression":{"id":5608,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"14842:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"14842:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14842:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14828:38:33"},{"assignments":[5613],"declarations":[{"constant":false,"id":5613,"mutability":"mutable","name":"pos","nameLocation":"14884:3:33","nodeType":"VariableDeclaration","scope":5634,"src":"14876:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"14876:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5621,"initialValue":{"arguments":[{"expression":{"id":5615,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"14909:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"14909:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":5617,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"14928:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14933:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5619,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"14936:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5614,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[5045,5547,6049],"referencedDeclaration":6049,"src":"14890:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14890:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14876:64:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"14957:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5623,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"14964:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14957:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5627,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"14988:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"14988:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":5629,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"15007:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"14974:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14974:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":5631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"14974:44:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14957:61:33","trueExpression":{"hexValue":"30","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14970:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5605,"id":5633,"nodeType":"Return","src":"14950:68:33"}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"14578:147:33","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if there is none."},"id":5635,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"14739:11:33","nodeType":"FunctionDefinition","parameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"self","nameLocation":"14768:4:33","nodeType":"VariableDeclaration","scope":5635,"src":"14751:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":5598,"nodeType":"UserDefinedTypeName","pathNode":{"id":5597,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"14751:8:33"},"referencedDeclaration":5567,"src":"14751:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":5601,"mutability":"mutable","name":"key","nameLocation":"14781:3:33","nodeType":"VariableDeclaration","scope":5635,"src":"14774:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5600,"name":"uint96","nodeType":"ElementaryTypeName","src":"14774:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14750:35:33"},"returnParameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5635,"src":"14809:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5603,"name":"uint160","nodeType":"ElementaryTypeName","src":"14809:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14808:9:33"},"scope":6065,"src":"14730:295:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5676,"nodeType":"Block","src":"15273:209:33","statements":[{"assignments":[5647],"declarations":[{"constant":false,"id":5647,"mutability":"mutable","name":"len","nameLocation":"15291:3:33","nodeType":"VariableDeclaration","scope":5676,"src":"15283:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5646,"name":"uint256","nodeType":"ElementaryTypeName","src":"15283:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5651,"initialValue":{"expression":{"expression":{"id":5648,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"15297:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"15297:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15297:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15283:38:33"},{"assignments":[5653],"declarations":[{"constant":false,"id":5653,"mutability":"mutable","name":"pos","nameLocation":"15339:3:33","nodeType":"VariableDeclaration","scope":5676,"src":"15331:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"15331:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5661,"initialValue":{"arguments":[{"expression":{"id":5655,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"15364:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"15364:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":5657,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"15383:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15388:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5659,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"15391:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[4993,5495,5997],"referencedDeclaration":5997,"src":"15345:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15345:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15331:64:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"15412:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15419:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15412:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5667,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"15441:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"15441:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"15460:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15466:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15460:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"15427:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15427:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":5673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"15427:48:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15412:63:33","trueExpression":{"hexValue":"30","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15423:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5645,"id":5675,"nodeType":"Return","src":"15405:70:33"}]},"documentation":{"id":5636,"nodeType":"StructuredDocumentation","src":"15031:149:33","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none."},"id":5677,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15194:11:33","nodeType":"FunctionDefinition","parameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"self","nameLocation":"15223:4:33","nodeType":"VariableDeclaration","scope":5677,"src":"15206:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":5638,"nodeType":"UserDefinedTypeName","pathNode":{"id":5637,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"15206:8:33"},"referencedDeclaration":5567,"src":"15206:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":5641,"mutability":"mutable","name":"key","nameLocation":"15236:3:33","nodeType":"VariableDeclaration","scope":5677,"src":"15229:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5640,"name":"uint96","nodeType":"ElementaryTypeName","src":"15229:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15205:35:33"},"returnParameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5677,"src":"15264:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5643,"name":"uint160","nodeType":"ElementaryTypeName","src":"15264:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15263:9:33"},"scope":6065,"src":"15185:297:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5761,"nodeType":"Block","src":"15867:512:33","statements":[{"assignments":[5689],"declarations":[{"constant":false,"id":5689,"mutability":"mutable","name":"len","nameLocation":"15885:3:33","nodeType":"VariableDeclaration","scope":5761,"src":"15877:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"15877:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5693,"initialValue":{"expression":{"expression":{"id":5690,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"15891:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"15891:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"15891:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15877:38:33"},{"assignments":[5695],"declarations":[{"constant":false,"id":5695,"mutability":"mutable","name":"low","nameLocation":"15934:3:33","nodeType":"VariableDeclaration","scope":5761,"src":"15926:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"15926:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5697,"initialValue":{"hexValue":"30","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15940:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15926:15:33"},{"assignments":[5699],"declarations":[{"constant":false,"id":5699,"mutability":"mutable","name":"high","nameLocation":"15959:4:33","nodeType":"VariableDeclaration","scope":5761,"src":"15951:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"15951:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5701,"initialValue":{"id":5700,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"15966:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15951:18:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5702,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"15984:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15990:1:33","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"15984:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5736,"nodeType":"IfStatement","src":"15980:234:33","trueBody":{"id":5735,"nodeType":"Block","src":"15993:221:33","statements":[{"assignments":[5706],"declarations":[{"constant":false,"id":5706,"mutability":"mutable","name":"mid","nameLocation":"16015:3:33","nodeType":"VariableDeclaration","scope":5735,"src":"16007:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5705,"name":"uint256","nodeType":"ElementaryTypeName","src":"16007:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5713,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5707,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"16021:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5710,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"16037:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5708,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"16027:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"16027:9:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16027:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16021:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16007:34:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"16059:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":5716,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"16079:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"16079:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":5718,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"16098:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5715,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"16065:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16065:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":5720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5569,"src":"16065:42:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16059:48:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5733,"nodeType":"Block","src":"16158:46:33","statements":[{"expression":{"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5727,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"16176:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5728,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"16182:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16188:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16182:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16176:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5732,"nodeType":"ExpressionStatement","src":"16176:13:33"}]},"id":5734,"nodeType":"IfStatement","src":"16055:149:33","trueBody":{"id":5726,"nodeType":"Block","src":"16109:43:33","statements":[{"expression":{"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5722,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"16127:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5723,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"16134:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16127:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5725,"nodeType":"ExpressionStatement","src":"16127:10:33"}]}}]}},{"assignments":[5738],"declarations":[{"constant":false,"id":5738,"mutability":"mutable","name":"pos","nameLocation":"16232:3:33","nodeType":"VariableDeclaration","scope":5761,"src":"16224:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"16224:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5746,"initialValue":{"arguments":[{"expression":{"id":5740,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"16257:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"16257:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":5742,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"16276:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":5743,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"16281:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5744,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"16286:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5739,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[4993,5495,5997],"referencedDeclaration":5997,"src":"16238:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16238:53:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16224:67:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"16309:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16316:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16309:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5752,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"16338:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"16338:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"16357:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16363:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16357:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5751,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"16324:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16324:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":5758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"16324:48:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16309:63:33","trueExpression":{"hexValue":"30","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16320:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5687,"id":5760,"nodeType":"Return","src":"16302:70:33"}]},"documentation":{"id":5678,"nodeType":"StructuredDocumentation","src":"15488:280:33","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high keys)."},"id":5762,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"15782:17:33","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"self","nameLocation":"15817:4:33","nodeType":"VariableDeclaration","scope":5762,"src":"15800:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":5680,"nodeType":"UserDefinedTypeName","pathNode":{"id":5679,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"15800:8:33"},"referencedDeclaration":5567,"src":"15800:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":5683,"mutability":"mutable","name":"key","nameLocation":"15830:3:33","nodeType":"VariableDeclaration","scope":5762,"src":"15823:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5682,"name":"uint96","nodeType":"ElementaryTypeName","src":"15823:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15799:35:33"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5762,"src":"15858:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5685,"name":"uint160","nodeType":"ElementaryTypeName","src":"15858:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15857:9:33"},"scope":6065,"src":"15773:606:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5791,"nodeType":"Block","src":"16570:135:33","statements":[{"assignments":[5772],"declarations":[{"constant":false,"id":5772,"mutability":"mutable","name":"pos","nameLocation":"16588:3:33","nodeType":"VariableDeclaration","scope":5791,"src":"16580:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"16580:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5776,"initialValue":{"expression":{"expression":{"id":5773,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"16594:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"16594:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16594:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16580:38:33"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"16635:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16642:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16635:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":5782,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"16664:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"16664:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5784,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"16683:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16689:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16683:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5781,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"16650:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16650:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":5788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"16650:48:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16635:63:33","trueExpression":{"hexValue":"30","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16646:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5770,"id":5790,"nodeType":"Return","src":"16628:70:33"}]},"documentation":{"id":5763,"nodeType":"StructuredDocumentation","src":"16385:109:33","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":5792,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"16508:6:33","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"self","nameLocation":"16532:4:33","nodeType":"VariableDeclaration","scope":5792,"src":"16515:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":5765,"nodeType":"UserDefinedTypeName","pathNode":{"id":5764,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"16515:8:33"},"referencedDeclaration":5567,"src":"16515:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16514:23:33"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5792,"src":"16561:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5768,"name":"uint160","nodeType":"ElementaryTypeName","src":"16561:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16560:9:33"},"scope":6065,"src":"16499:206:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5840,"nodeType":"Block","src":"16998:274:33","statements":[{"assignments":[5806],"declarations":[{"constant":false,"id":5806,"mutability":"mutable","name":"pos","nameLocation":"17016:3:33","nodeType":"VariableDeclaration","scope":5840,"src":"17008:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5805,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5810,"initialValue":{"expression":{"expression":{"id":5807,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"17022:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"17022:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17022:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17008:38:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5811,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"17060:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17067:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17060:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5838,"nodeType":"Block","src":"17121:145:33","statements":[{"assignments":[5822],"declarations":[{"constant":false,"id":5822,"mutability":"mutable","name":"ckpt","nameLocation":"17156:4:33","nodeType":"VariableDeclaration","scope":5838,"src":"17135:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":5821,"nodeType":"UserDefinedTypeName","pathNode":{"id":5820,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"17135:13:33"},"referencedDeclaration":5572,"src":"17135:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":5830,"initialValue":{"arguments":[{"expression":{"id":5824,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"17177:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"17177:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5826,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"17196:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17202:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17196:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5823,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"17163:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17163:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17135:69:33"},{"expression":{"components":[{"hexValue":"74727565","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17226:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":5832,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"17232:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":5833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5569,"src":"17232:9:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":5834,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"17243:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":5835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"17243:11:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":5836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17225:30:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":5804,"id":5837,"nodeType":"Return","src":"17218:37:33"}]},"id":5839,"nodeType":"IfStatement","src":"17056:210:33","trueBody":{"id":5819,"nodeType":"Block","src":"17070:45:33","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17092:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17099:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17102:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17091:13:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":5804,"id":5818,"nodeType":"Return","src":"17084:20:33"}]}}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"16711:168:33","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":5841,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"16893:16:33","nodeType":"FunctionDefinition","parameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"self","nameLocation":"16927:4:33","nodeType":"VariableDeclaration","scope":5841,"src":"16910:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":5795,"nodeType":"UserDefinedTypeName","pathNode":{"id":5794,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"16910:8:33"},"referencedDeclaration":5567,"src":"16910:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16909:23:33"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5799,"mutability":"mutable","name":"exists","nameLocation":"16961:6:33","nodeType":"VariableDeclaration","scope":5841,"src":"16956:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5798,"name":"bool","nodeType":"ElementaryTypeName","src":"16956:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5801,"mutability":"mutable","name":"_key","nameLocation":"16976:4:33","nodeType":"VariableDeclaration","scope":5841,"src":"16969:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5800,"name":"uint96","nodeType":"ElementaryTypeName","src":"16969:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":5803,"mutability":"mutable","name":"_value","nameLocation":"16990:6:33","nodeType":"VariableDeclaration","scope":5841,"src":"16982:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5802,"name":"uint160","nodeType":"ElementaryTypeName","src":"16982:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16955:42:33"},"scope":6065,"src":"16884:388:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"17411:48:33","statements":[{"expression":{"expression":{"expression":{"id":5850,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"17428:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":5851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":5566,"src":"17428:17:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17428:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5849,"id":5853,"nodeType":"Return","src":"17421:31:33"}]},"documentation":{"id":5842,"nodeType":"StructuredDocumentation","src":"17278:57:33","text":" @dev Returns the number of checkpoint."},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"17349:6:33","nodeType":"FunctionDefinition","parameters":{"id":5846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"self","nameLocation":"17373:4:33","nodeType":"VariableDeclaration","scope":5855,"src":"17356:21:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":5844,"nodeType":"UserDefinedTypeName","pathNode":{"id":5843,"name":"Trace160","nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"17356:8:33"},"referencedDeclaration":5567,"src":"17356:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$5567_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17355:23:33"},"returnParameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5855,"src":"17402:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5847,"name":"uint256","nodeType":"ElementaryTypeName","src":"17402:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17401:9:33"},"scope":6065,"src":"17340:119:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5944,"nodeType":"Block","src":"17744:727:33","statements":[{"assignments":[5872],"declarations":[{"constant":false,"id":5872,"mutability":"mutable","name":"pos","nameLocation":"17762:3:33","nodeType":"VariableDeclaration","scope":5944,"src":"17754:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"17754:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5875,"initialValue":{"expression":{"id":5873,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"17768:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17768:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17754:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5876,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"17794:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17800:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17794:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5942,"nodeType":"Block","src":"18357:108:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":5933,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"18402:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"18415:5:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5932,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"18381:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"18381:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":5929,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"18371:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"18371:9:33","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$5572_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18371:52:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5937,"nodeType":"ExpressionStatement","src":"18371:52:33"},{"expression":{"components":[{"hexValue":"30","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18445:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"18448:5:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":5940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18444:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":5870,"id":5941,"nodeType":"Return","src":"18437:17:33"}]},"id":5943,"nodeType":"IfStatement","src":"17790:675:33","trueBody":{"id":5928,"nodeType":"Block","src":"17803:548:33","statements":[{"assignments":[5881],"declarations":[{"constant":false,"id":5881,"mutability":"mutable","name":"last","nameLocation":"17890:4:33","nodeType":"VariableDeclaration","scope":5928,"src":"17869:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":5880,"nodeType":"UserDefinedTypeName","pathNode":{"id":5879,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"17869:13:33"},"referencedDeclaration":5572,"src":"17869:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":5888,"initialValue":{"arguments":[{"id":5883,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"17911:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"17917:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17923:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17917:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5882,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"17897:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17897:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17869:56:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5890,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"18003:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":5891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5569,"src":"18003:9:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5892,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"18016:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18003:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a2064656372656173696e67206b657973","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18021:29:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""},"value":"Checkpoint: decreasing keys"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f6b1769383e9e01fad001f10d4f9180a25f63424c2597419936b157d29f34ec","typeString":"literal_string \"Checkpoint: decreasing keys\""}],"id":5889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17995:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17995:56:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5896,"nodeType":"ExpressionStatement","src":"17995:56:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5897,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"18115:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":5898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5569,"src":"18115:9:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5899,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"18128:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18115:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5921,"nodeType":"Block","src":"18215:85:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":5916,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"18264:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"18277:5:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5915,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"18243:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"18243:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":5912,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"18233:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"18233:9:33","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$5572_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18233:52:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5920,"nodeType":"ExpressionStatement","src":"18233:52:33"}]},"id":5922,"nodeType":"IfStatement","src":"18111:189:33","trueBody":{"id":5911,"nodeType":"Block","src":"18133:76:33","statements":[{"expression":{"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":5902,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"18165:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5903,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"18171:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18171:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5901,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"18151:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18151:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":5907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"18151:35:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"18189:5:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"18151:43:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5910,"nodeType":"ExpressionStatement","src":"18151:43:33"}]}},{"expression":{"components":[{"expression":{"id":5923,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"18321:4:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":5924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5571,"src":"18321:11:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"18334:5:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":5926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18320:20:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":5870,"id":5927,"nodeType":"Return","src":"18313:27:33"}]}}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"17465:165:33","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":5945,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"17644:7:33","nodeType":"FunctionDefinition","parameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"self","nameLocation":"17676:4:33","nodeType":"VariableDeclaration","scope":5945,"src":"17652:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":5858,"nodeType":"UserDefinedTypeName","pathNode":{"id":5857,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"17652:13:33"},"referencedDeclaration":5572,"src":"17652:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":5859,"nodeType":"ArrayTypeName","src":"17652:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":5862,"mutability":"mutable","name":"key","nameLocation":"17689:3:33","nodeType":"VariableDeclaration","scope":5945,"src":"17682:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5861,"name":"uint96","nodeType":"ElementaryTypeName","src":"17682:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":5864,"mutability":"mutable","name":"value","nameLocation":"17702:5:33","nodeType":"VariableDeclaration","scope":5945,"src":"17694:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5863,"name":"uint160","nodeType":"ElementaryTypeName","src":"17694:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17651:57:33"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5945,"src":"17726:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5866,"name":"uint160","nodeType":"ElementaryTypeName","src":"17726:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5945,"src":"17735:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5868,"name":"uint160","nodeType":"ElementaryTypeName","src":"17735:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17725:18:33"},"scope":6065,"src":"17635:836:33","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5996,"nodeType":"Block","src":"18983:267:33","statements":[{"body":{"id":5992,"nodeType":"Block","src":"19012:211:33","statements":[{"assignments":[5965],"declarations":[{"constant":false,"id":5965,"mutability":"mutable","name":"mid","nameLocation":"19034:3:33","nodeType":"VariableDeclaration","scope":5992,"src":"19026:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint256","nodeType":"ElementaryTypeName","src":"19026:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5971,"initialValue":{"arguments":[{"id":5968,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"19053:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5969,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"19058:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5966,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"19040:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"19040:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19040:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19026:37:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5973,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"19095:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":5974,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"19101:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5972,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"19081:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19081:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":5976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5569,"src":"19081:29:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5977,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"19113:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19081:35:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5990,"nodeType":"Block","src":"19167:46:33","statements":[{"expression":{"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5984,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"19185:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5985,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"19191:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19197:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19191:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19185:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5989,"nodeType":"ExpressionStatement","src":"19185:13:33"}]},"id":5991,"nodeType":"IfStatement","src":"19077:136:33","trueBody":{"id":5983,"nodeType":"Block","src":"19118:43:33","statements":[{"expression":{"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5979,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"19136:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5980,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"19143:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19136:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5982,"nodeType":"ExpressionStatement","src":"19136:10:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"19000:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5962,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"19006:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19000:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5993,"nodeType":"WhileStatement","src":"18993:230:33"},{"expression":{"id":5994,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"19239:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5960,"id":5995,"nodeType":"Return","src":"19232:11:33"}]},"documentation":{"id":5946,"nodeType":"StructuredDocumentation","src":"18477:335:33","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":5997,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"18826:18:33","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"self","nameLocation":"18878:4:33","nodeType":"VariableDeclaration","scope":5997,"src":"18854:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":5948,"nodeType":"UserDefinedTypeName","pathNode":{"id":5947,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"18854:13:33"},"referencedDeclaration":5572,"src":"18854:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":5949,"nodeType":"ArrayTypeName","src":"18854:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":5952,"mutability":"mutable","name":"key","nameLocation":"18899:3:33","nodeType":"VariableDeclaration","scope":5997,"src":"18892:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5951,"name":"uint96","nodeType":"ElementaryTypeName","src":"18892:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":5954,"mutability":"mutable","name":"low","nameLocation":"18920:3:33","nodeType":"VariableDeclaration","scope":5997,"src":"18912:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"18912:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5956,"mutability":"mutable","name":"high","nameLocation":"18941:4:33","nodeType":"VariableDeclaration","scope":5997,"src":"18933:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"18933:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18844:107:33"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5997,"src":"18974:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"18974:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18973:9:33"},"scope":6065,"src":"18817:433:33","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6048,"nodeType":"Block","src":"19763:267:33","statements":[{"body":{"id":6044,"nodeType":"Block","src":"19792:211:33","statements":[{"assignments":[6017],"declarations":[{"constant":false,"id":6017,"mutability":"mutable","name":"mid","nameLocation":"19814:3:33","nodeType":"VariableDeclaration","scope":6044,"src":"19806:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6016,"name":"uint256","nodeType":"ElementaryTypeName","src":"19806:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6023,"initialValue":{"arguments":[{"id":6020,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"19833:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6021,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19838:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6018,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"19820:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7388,"src":"19820:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19820:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19806:37:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6025,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"19875:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":6026,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"19881:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6024,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5060,5562,6064],"referencedDeclaration":6064,"src":"19861:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$5572_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19861:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":6028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":5569,"src":"19861:29:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6029,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"19893:3:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19861:35:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6042,"nodeType":"Block","src":"19950:43:33","statements":[{"expression":{"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6038,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19968:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6039,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"19975:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19968:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6041,"nodeType":"ExpressionStatement","src":"19968:10:33"}]},"id":6043,"nodeType":"IfStatement","src":"19857:136:33","trueBody":{"id":6037,"nodeType":"Block","src":"19898:46:33","statements":[{"expression":{"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6031,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"19916:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6032,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"19922:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19928:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19922:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19916:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6036,"nodeType":"ExpressionStatement","src":"19916:13:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6013,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"19780:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6014,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19786:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19780:10:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6045,"nodeType":"WhileStatement","src":"19773:230:33"},{"expression":{"id":6046,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"20019:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6012,"id":6047,"nodeType":"Return","src":"20012:11:33"}]},"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"19256:336:33","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":6049,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"19606:18:33","nodeType":"FunctionDefinition","parameters":{"id":6009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"self","nameLocation":"19658:4:33","nodeType":"VariableDeclaration","scope":6049,"src":"19634:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":6000,"nodeType":"UserDefinedTypeName","pathNode":{"id":5999,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"19634:13:33"},"referencedDeclaration":5572,"src":"19634:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":6001,"nodeType":"ArrayTypeName","src":"19634:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":6004,"mutability":"mutable","name":"key","nameLocation":"19679:3:33","nodeType":"VariableDeclaration","scope":6049,"src":"19672:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6003,"name":"uint96","nodeType":"ElementaryTypeName","src":"19672:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":6006,"mutability":"mutable","name":"low","nameLocation":"19700:3:33","nodeType":"VariableDeclaration","scope":6049,"src":"19692:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"19692:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6008,"mutability":"mutable","name":"high","nameLocation":"19721:4:33","nodeType":"VariableDeclaration","scope":6049,"src":"19713:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6007,"name":"uint256","nodeType":"ElementaryTypeName","src":"19713:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19624:107:33"},"returnParameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6049,"src":"19754:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6010,"name":"uint256","nodeType":"ElementaryTypeName","src":"19754:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19753:9:33"},"scope":6065,"src":"19597:433:33","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6063,"nodeType":"Block","src":"20313:125:33","statements":[{"AST":{"nodeType":"YulBlock","src":"20332:100:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20353:1:33","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"20356:9:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20346:6:33"},"nodeType":"YulFunctionCall","src":"20346:20:33"},"nodeType":"YulExpressionStatement","src":"20346:20:33"},{"nodeType":"YulAssignment","src":"20379:43:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20408:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20411:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"20398:9:33"},"nodeType":"YulFunctionCall","src":"20398:18:33"},{"name":"pos","nodeType":"YulIdentifier","src":"20418:3:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20394:3:33"},"nodeType":"YulFunctionCall","src":"20394:28:33"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"20379:11:33"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6056,"isOffset":false,"isSlot":false,"src":"20418:3:33","valueSize":1},{"declaration":6060,"isOffset":false,"isSlot":true,"src":"20379:11:33","suffix":"slot","valueSize":1},{"declaration":6054,"isOffset":false,"isSlot":true,"src":"20356:9:33","suffix":"slot","valueSize":1}],"id":6062,"nodeType":"InlineAssembly","src":"20323:109:33"}]},"documentation":{"id":6050,"nodeType":"StructuredDocumentation","src":"20036:132:33","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":6064,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"20182:13:33","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"self","nameLocation":"20229:4:33","nodeType":"VariableDeclaration","scope":6064,"src":"20205:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":6052,"nodeType":"UserDefinedTypeName","pathNode":{"id":6051,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"20205:13:33"},"referencedDeclaration":5572,"src":"20205:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":6053,"nodeType":"ArrayTypeName","src":"20205:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$5572_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":6056,"mutability":"mutable","name":"pos","nameLocation":"20251:3:33","nodeType":"VariableDeclaration","scope":6064,"src":"20243:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6055,"name":"uint256","nodeType":"ElementaryTypeName","src":"20243:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20195:65:33"},"returnParameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"result","nameLocation":"20305:6:33","nodeType":"VariableDeclaration","scope":6064,"src":"20283:28:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":6059,"nodeType":"UserDefinedTypeName","pathNode":{"id":6058,"name":"Checkpoint160","nodeType":"IdentifierPath","referencedDeclaration":5572,"src":"20283:13:33"},"referencedDeclaration":5572,"src":"20283:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$5572_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"20282:30:33"},"scope":6065,"src":"20173:265:33","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6066,"src":"708:19732:33","usedErrors":[]}],"src":"193:20248:33"},"id":33},"contracts/utils/Context.sol":{"ast":{"absolutePath":"contracts/utils/Context.sol","exportedSymbols":{"Context":[6087]},"id":6088,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6067,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:34"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"111:496:34","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":6087,"linearizedBaseContracts":[6087],"name":"Context","nameLocation":"626:7:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":6076,"nodeType":"Block","src":"702:34:34","statements":[{"expression":{"expression":{"id":6073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6072,"id":6075,"nodeType":"Return","src":"712:17:34"}]},"id":6077,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:34","nodeType":"FunctionDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[],"src":"659:2:34"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6077,"src":"693:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6070,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:34"},"scope":6087,"src":"640:96:34","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":6085,"nodeType":"Block","src":"809:32:34","statements":[{"expression":{"expression":{"id":6082,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:34","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":6081,"id":6084,"nodeType":"Return","src":"819:15:34"}]},"id":6086,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:34","nodeType":"FunctionDefinition","parameters":{"id":6078,"nodeType":"ParameterList","parameters":[],"src":"759:2:34"},"returnParameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6086,"src":"793:14:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6079,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:34"},"scope":6087,"src":"742:99:34","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":6088,"src":"608:235:34","usedErrors":[]}],"src":"86:758:34"},"id":34},"contracts/utils/Counters.sol":{"ast":{"absolutePath":"contracts/utils/Counters.sol","exportedSymbols":{"Counters":[6161]},"id":6162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6089,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:35"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":6090,"nodeType":"StructuredDocumentation","src":"112:311:35","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":6161,"linearizedBaseContracts":[6161],"name":"Counters","nameLocation":"432:8:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":6093,"members":[{"constant":false,"id":6092,"mutability":"mutable","name":"_value","nameLocation":"794:6:35","nodeType":"VariableDeclaration","scope":6093,"src":"786:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6091,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:35","nodeType":"StructDefinition","scope":6161,"src":"447:374:35","visibility":"public"},{"body":{"id":6104,"nodeType":"Block","src":"901:38:35","statements":[{"expression":{"expression":{"id":6101,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"918:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":6102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"918:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6100,"id":6103,"nodeType":"Return","src":"911:21:35"}]},"id":6105,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:35","nodeType":"FunctionDefinition","parameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"counter","nameLocation":"860:7:35","nodeType":"VariableDeclaration","scope":6105,"src":"844:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":6095,"nodeType":"UserDefinedTypeName","pathNode":{"id":6094,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"844:7:35"},"referencedDeclaration":6093,"src":"844:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:35"},"returnParameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6105,"src":"892:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:35"},"scope":6161,"src":"827:112:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6118,"nodeType":"Block","src":"998:70:35","statements":[{"id":6117,"nodeType":"UncheckedBlock","src":"1008:54:35","statements":[{"expression":{"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6111,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"1032:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":6113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"1032:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6116,"nodeType":"ExpressionStatement","src":"1032:19:35"}]}]},"id":6119,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:35","nodeType":"FunctionDefinition","parameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"counter","nameLocation":"980:7:35","nodeType":"VariableDeclaration","scope":6119,"src":"964:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":6107,"nodeType":"UserDefinedTypeName","pathNode":{"id":6106,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"964:7:35"},"referencedDeclaration":6093,"src":"964:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:35"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[],"src":"998:0:35"},"scope":6161,"src":"945:123:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6146,"nodeType":"Block","src":"1127:176:35","statements":[{"assignments":[6126],"declarations":[{"constant":false,"id":6126,"mutability":"mutable","name":"value","nameLocation":"1145:5:35","nodeType":"VariableDeclaration","scope":6146,"src":"1137:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6129,"initialValue":{"expression":{"id":6127,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"1153:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":6128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"1153:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"1185:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":6130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6136,"nodeType":"ExpressionStatement","src":"1177:49:35"},{"id":6145,"nodeType":"UncheckedBlock","src":"1236:61:35","statements":[{"expression":{"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6137,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"1260:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":6139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"1260:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"1277:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6144,"nodeType":"ExpressionStatement","src":"1260:26:35"}]}]},"id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:35","nodeType":"FunctionDefinition","parameters":{"id":6123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6122,"mutability":"mutable","name":"counter","nameLocation":"1109:7:35","nodeType":"VariableDeclaration","scope":6147,"src":"1093:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":6121,"nodeType":"UserDefinedTypeName","pathNode":{"id":6120,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"1093:7:35"},"referencedDeclaration":6093,"src":"1093:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:35"},"returnParameters":{"id":6124,"nodeType":"ParameterList","parameters":[],"src":"1127:0:35"},"scope":6161,"src":"1074:229:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6159,"nodeType":"Block","src":"1358:35:35","statements":[{"expression":{"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6153,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"1368:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":6155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6092,"src":"1368:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6158,"nodeType":"ExpressionStatement","src":"1368:18:35"}]},"id":6160,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:35","nodeType":"FunctionDefinition","parameters":{"id":6151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6150,"mutability":"mutable","name":"counter","nameLocation":"1340:7:35","nodeType":"VariableDeclaration","scope":6160,"src":"1324:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":6149,"nodeType":"UserDefinedTypeName","pathNode":{"id":6148,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":6093,"src":"1324:7:35"},"referencedDeclaration":6093,"src":"1324:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$6093_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:35"},"returnParameters":{"id":6152,"nodeType":"ParameterList","parameters":[],"src":"1358:0:35"},"scope":6161,"src":"1309:84:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6162,"src":"424:971:35","usedErrors":[]}],"src":"87:1309:35"},"id":35},"contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[6166],"ShortStrings":[6377],"StorageSlot":[6487]},"id":6378,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6163,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:36"},{"absolutePath":"contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":6164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6378,"sourceUnit":6488,"src":"131:27:36","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":6166,"name":"ShortString","nameLocation":"333:11:36","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:36","underlyingType":{"id":6165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":6167,"nodeType":"StructuredDocumentation","src":"358:876:36","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":6377,"linearizedBaseContracts":[6377],"name":"ShortStrings","nameLocation":"1243:12:36","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6170,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:36","nodeType":"VariableDeclaration","scope":6377,"src":"1325:112:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:36","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"id":6174,"name":"StringTooLong","nameLocation":"1450:13:36","nodeType":"ErrorDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"str","nameLocation":"1471:3:36","nodeType":"VariableDeclaration","scope":6174,"src":"1464:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6171,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:36"},"src":"1444:32:36"},{"id":6176,"name":"InvalidShortString","nameLocation":"1487:18:36","nodeType":"ErrorDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[],"src":"1505:2:36"},"src":"1481:27:36"},{"body":{"id":6219,"nodeType":"Block","src":"1767:208:36","statements":[{"assignments":[6186],"declarations":[{"constant":false,"id":6186,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:36","nodeType":"VariableDeclaration","scope":6219,"src":"1777:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6185,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6191,"initialValue":{"arguments":[{"id":6189,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"1803:3:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6187,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:36","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6192,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"1821:4:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1821:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:36","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6201,"nodeType":"IfStatement","src":"1817:72:36","trueBody":{"id":6200,"nodeType":"Block","src":"1839:50:36","statements":[{"errorCall":{"arguments":[{"id":6197,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"1874:3:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6196,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"1860:13:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1860:18:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6199,"nodeType":"RevertStatement","src":"1853:25:36"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6210,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"1946:4:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:36","typeDescriptions":{}}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1938:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:36","typeDescriptions":{}}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1930:22:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":6213,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"1955:4:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1955:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:36","typeDescriptions":{}}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1922:45:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6202,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"1905:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"type(ShortString)"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:36","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1905:63:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"functionReturnParameters":6184,"id":6218,"nodeType":"Return","src":"1898:70:36"}]},"documentation":{"id":6177,"nodeType":"StructuredDocumentation","src":"1514:170:36","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":6220,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:36","nodeType":"FunctionDefinition","parameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"str","nameLocation":"1726:3:36","nodeType":"VariableDeclaration","scope":6220,"src":"1712:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6178,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:36"},"returnParameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6220,"src":"1754:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":6182,"nodeType":"UserDefinedTypeName","pathNode":{"id":6181,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"1754:11:36"},"referencedDeclaration":6166,"src":"1754:11:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:36"},"scope":6377,"src":"1689:286:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6245,"nodeType":"Block","src":"2133:331:36","statements":[{"assignments":[6230],"declarations":[{"constant":false,"id":6230,"mutability":"mutable","name":"len","nameLocation":"2151:3:36","nodeType":"VariableDeclaration","scope":6245,"src":"2143:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6234,"initialValue":{"arguments":[{"id":6232,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"2168:4:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}],"id":6231,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"2157:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$6166_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2157:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:36"},{"assignments":[6236],"declarations":[{"constant":false,"id":6236,"mutability":"mutable","name":"str","nameLocation":"2275:3:36","nodeType":"VariableDeclaration","scope":6245,"src":"2261:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6235,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6241,"initialValue":{"arguments":[{"hexValue":"3332","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:36","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:36","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":6237,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:36"},{"AST":{"nodeType":"YulBlock","src":"2357:81:36","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:36"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:36"},"nodeType":"YulFunctionCall","src":"2371:16:36"},"nodeType":"YulExpressionStatement","src":"2371:16:36"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:36"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:36","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:36"},"nodeType":"YulFunctionCall","src":"2407:14:36"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:36"},"nodeType":"YulFunctionCall","src":"2400:28:36"},"nodeType":"YulExpressionStatement","src":"2400:28:36"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6230,"isOffset":false,"isSlot":false,"src":"2383:3:36","valueSize":1},{"declaration":6224,"isOffset":false,"isSlot":false,"src":"2423:4:36","valueSize":1},{"declaration":6236,"isOffset":false,"isSlot":false,"src":"2378:3:36","valueSize":1},{"declaration":6236,"isOffset":false,"isSlot":false,"src":"2411:3:36","valueSize":1}],"id":6242,"nodeType":"InlineAssembly","src":"2348:90:36"},{"expression":{"id":6243,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"2454:3:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6228,"id":6244,"nodeType":"Return","src":"2447:10:36"}]},"documentation":{"id":6221,"nodeType":"StructuredDocumentation","src":"1981:73:36","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":6246,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:36","nodeType":"FunctionDefinition","parameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:36","nodeType":"VariableDeclaration","scope":6246,"src":"2077:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":6223,"nodeType":"UserDefinedTypeName","pathNode":{"id":6222,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"2077:11:36"},"referencedDeclaration":6166,"src":"2077:11:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:36"},"returnParameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6246,"src":"2118:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6226,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:36"},"scope":6377,"src":"2059:405:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6277,"nodeType":"Block","src":"2606:175:36","statements":[{"assignments":[6256],"declarations":[{"constant":false,"id":6256,"mutability":"mutable","name":"result","nameLocation":"2624:6:36","nodeType":"VariableDeclaration","scope":6277,"src":"2616:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6255,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6266,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6261,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"2660:4:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}],"expression":{"id":6259,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"2641:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"type(ShortString)"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:36","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$6166_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2641:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:36","typeDescriptions":{}}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2633:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:36","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"2687:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:36","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6274,"nodeType":"IfStatement","src":"2683:69:36","trueBody":{"id":6273,"nodeType":"Block","src":"2700:52:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6270,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"2721:18:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2721:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6272,"nodeType":"RevertStatement","src":"2714:27:36"}]}},{"expression":{"id":6275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"2768:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6254,"id":6276,"nodeType":"Return","src":"2761:13:36"}]},"documentation":{"id":6247,"nodeType":"StructuredDocumentation","src":"2470:61:36","text":" @dev Return the length of a `ShortString`."},"id":6278,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:36","nodeType":"FunctionDefinition","parameters":{"id":6251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:36","nodeType":"VariableDeclaration","scope":6278,"src":"2556:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":6249,"nodeType":"UserDefinedTypeName","pathNode":{"id":6248,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"2556:11:36"},"referencedDeclaration":6166,"src":"2556:11:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:36"},"returnParameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6278,"src":"2597:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:36"},"scope":6377,"src":"2536:245:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6317,"nodeType":"Block","src":"3004:232:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3024:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6289,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:36","typeDescriptions":{}}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3018:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:36","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6315,"nodeType":"Block","src":"3102:128:36","statements":[{"expression":{"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":6304,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"3142:5:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":6301,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"3116:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$6487_$","typeString":"type(library StorageSlot)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":6464,"src":"3116:25:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$6395_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3116:32:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$6395_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":6306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":6394,"src":"3116:38:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3157:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6309,"nodeType":"ExpressionStatement","src":"3116:46:36"},{"expression":{"arguments":[{"id":6312,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"3200:18:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6310,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"3183:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"type(ShortString)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:36","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3183:36:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"functionReturnParameters":6288,"id":6314,"nodeType":"Return","src":"3176:43:36"}]},"id":6316,"nodeType":"IfStatement","src":"3014:216:36","trueBody":{"id":6300,"nodeType":"Block","src":"3044:52:36","statements":[{"expression":{"arguments":[{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3079:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6296,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"3065:13:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3065:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"functionReturnParameters":6288,"id":6299,"nodeType":"Return","src":"3058:27:36"}]}}]},"documentation":{"id":6279,"nodeType":"StructuredDocumentation","src":"2787:103:36","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":6318,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:36","nodeType":"FunctionDefinition","parameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"value","nameLocation":"2944:5:36","nodeType":"VariableDeclaration","scope":6318,"src":"2930:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6280,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6283,"mutability":"mutable","name":"store","nameLocation":"2966:5:36","nodeType":"VariableDeclaration","scope":6318,"src":"2951:20:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6282,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:36"},"returnParameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6318,"src":"2991:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":6286,"nodeType":"UserDefinedTypeName","pathNode":{"id":6285,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"2991:11:36"},"referencedDeclaration":6166,"src":"2991:11:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:36"},"scope":6377,"src":"2895:341:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6344,"nodeType":"Block","src":"3476:159:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"3509:5:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}],"expression":{"id":6329,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"3490:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"type(ShortString)"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:36","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$6166_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3490:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6333,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"3519:18:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6342,"nodeType":"Block","src":"3592:37:36","statements":[{"expression":{"id":6340,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"3613:5:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":6328,"id":6341,"nodeType":"Return","src":"3606:12:36"}]},"id":6343,"nodeType":"IfStatement","src":"3486:143:36","trueBody":{"id":6339,"nodeType":"Block","src":"3539:47:36","statements":[{"expression":{"arguments":[{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"3569:5:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}],"id":6335,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"3560:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$6166_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3560:15:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6328,"id":6338,"nodeType":"Return","src":"3553:22:36"}]}}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"3242:120:36","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":6345,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:36","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"value","nameLocation":"3409:5:36","nodeType":"VariableDeclaration","scope":6345,"src":"3397:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":6321,"nodeType":"UserDefinedTypeName","pathNode":{"id":6320,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"3397:11:36"},"referencedDeclaration":6166,"src":"3397:11:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":6324,"mutability":"mutable","name":"store","nameLocation":"3431:5:36","nodeType":"VariableDeclaration","scope":6345,"src":"3416:20:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6323,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:36"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6345,"src":"3461:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6326,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:36"},"scope":6377,"src":"3367:268:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6375,"nodeType":"Block","src":"4108:175:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"4141:5:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}],"expression":{"id":6356,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"4122:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"type(ShortString)"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:36","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$6166_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4122:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6360,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"4151:18:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6373,"nodeType":"Block","src":"4226:51:36","statements":[{"expression":{"expression":{"arguments":[{"id":6369,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"4253:5:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:36","typeDescriptions":{}}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4247:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4247:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6355,"id":6372,"nodeType":"Return","src":"4240:26:36"}]},"id":6374,"nodeType":"IfStatement","src":"4118:159:36","trueBody":{"id":6366,"nodeType":"Block","src":"4171:49:36","statements":[{"expression":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"4203:5:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}],"id":6362,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"4192:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$6166_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:17:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6355,"id":6365,"nodeType":"Return","src":"4185:24:36"}]}}]},"documentation":{"id":6346,"nodeType":"StructuredDocumentation","src":"3641:357:36","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":6376,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:36","nodeType":"FunctionDefinition","parameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"value","nameLocation":"4047:5:36","nodeType":"VariableDeclaration","scope":6376,"src":"4035:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":6348,"nodeType":"UserDefinedTypeName","pathNode":{"id":6347,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"4035:11:36"},"referencedDeclaration":6166,"src":"4035:11:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":6351,"mutability":"mutable","name":"store","nameLocation":"4069:5:36","nodeType":"VariableDeclaration","scope":6376,"src":"4054:20:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6350,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:36"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6376,"src":"4099:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6353,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:36"},"scope":6377,"src":"4003:280:36","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6378,"src":"1235:3050:36","usedErrors":[6174,6176]}],"src":"106:4180:36"},"id":36},"contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[6487]},"id":6488,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6379,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:37"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":6380,"nodeType":"StructuredDocumentation","src":"218:1201:37","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":6487,"linearizedBaseContracts":[6487],"name":"StorageSlot","nameLocation":"1428:11:37","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":6383,"members":[{"constant":false,"id":6382,"mutability":"mutable","name":"value","nameLocation":"1483:5:37","nodeType":"VariableDeclaration","scope":6383,"src":"1475:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6381,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:37","nodeType":"StructDefinition","scope":6487,"src":"1446:49:37","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":6386,"members":[{"constant":false,"id":6385,"mutability":"mutable","name":"value","nameLocation":"1535:5:37","nodeType":"VariableDeclaration","scope":6386,"src":"1530:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6384,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:37","nodeType":"StructDefinition","scope":6487,"src":"1501:46:37","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":6389,"members":[{"constant":false,"id":6388,"mutability":"mutable","name":"value","nameLocation":"1590:5:37","nodeType":"VariableDeclaration","scope":6389,"src":"1582:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:37","nodeType":"StructDefinition","scope":6487,"src":"1553:49:37","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":6392,"members":[{"constant":false,"id":6391,"mutability":"mutable","name":"value","nameLocation":"1645:5:37","nodeType":"VariableDeclaration","scope":6392,"src":"1637:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:37","nodeType":"StructDefinition","scope":6487,"src":"1608:49:37","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":6395,"members":[{"constant":false,"id":6394,"mutability":"mutable","name":"value","nameLocation":"1698:5:37","nodeType":"VariableDeclaration","scope":6395,"src":"1691:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6393,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:37","nodeType":"StructDefinition","scope":6487,"src":"1663:47:37","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":6398,"members":[{"constant":false,"id":6397,"mutability":"mutable","name":"value","nameLocation":"1749:5:37","nodeType":"VariableDeclaration","scope":6398,"src":"1743:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6396,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:37","nodeType":"StructDefinition","scope":6487,"src":"1716:45:37","visibility":"public"},{"body":{"id":6408,"nodeType":"Block","src":"1943:106:37","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:37","statements":[{"nodeType":"YulAssignment","src":"2019:14:37","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6405,"isOffset":false,"isSlot":true,"src":"2019:6:37","suffix":"slot","valueSize":1},{"declaration":6401,"isOffset":false,"isSlot":false,"src":"2029:4:37","valueSize":1}],"id":6407,"nodeType":"InlineAssembly","src":"1996:47:37"}]},"documentation":{"id":6399,"nodeType":"StructuredDocumentation","src":"1767:87:37","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":6409,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:37","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"slot","nameLocation":"1891:4:37","nodeType":"VariableDeclaration","scope":6409,"src":"1883:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:37"},"returnParameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"r","nameLocation":"1940:1:37","nodeType":"VariableDeclaration","scope":6409,"src":"1920:21:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$6383_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":6404,"nodeType":"UserDefinedTypeName","pathNode":{"id":6403,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":6383,"src":"1920:11:37"},"referencedDeclaration":6383,"src":"1920:11:37","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$6383_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:37"},"scope":6487,"src":"1859:190:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6419,"nodeType":"Block","src":"2231:106:37","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:37","statements":[{"nodeType":"YulAssignment","src":"2307:14:37","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6416,"isOffset":false,"isSlot":true,"src":"2307:6:37","suffix":"slot","valueSize":1},{"declaration":6412,"isOffset":false,"isSlot":false,"src":"2317:4:37","valueSize":1}],"id":6418,"nodeType":"InlineAssembly","src":"2284:47:37"}]},"documentation":{"id":6410,"nodeType":"StructuredDocumentation","src":"2055:87:37","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":6420,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:37","nodeType":"FunctionDefinition","parameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"slot","nameLocation":"2179:4:37","nodeType":"VariableDeclaration","scope":6420,"src":"2171:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:37"},"returnParameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"r","nameLocation":"2228:1:37","nodeType":"VariableDeclaration","scope":6420,"src":"2208:21:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$6386_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":6415,"nodeType":"UserDefinedTypeName","pathNode":{"id":6414,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":6386,"src":"2208:11:37"},"referencedDeclaration":6386,"src":"2208:11:37","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$6386_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:37"},"scope":6487,"src":"2147:190:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6430,"nodeType":"Block","src":"2519:106:37","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:37","statements":[{"nodeType":"YulAssignment","src":"2595:14:37","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6427,"isOffset":false,"isSlot":true,"src":"2595:6:37","suffix":"slot","valueSize":1},{"declaration":6423,"isOffset":false,"isSlot":false,"src":"2605:4:37","valueSize":1}],"id":6429,"nodeType":"InlineAssembly","src":"2572:47:37"}]},"documentation":{"id":6421,"nodeType":"StructuredDocumentation","src":"2343:87:37","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":6431,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:37","nodeType":"FunctionDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"slot","nameLocation":"2467:4:37","nodeType":"VariableDeclaration","scope":6431,"src":"2459:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:37"},"returnParameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"r","nameLocation":"2516:1:37","nodeType":"VariableDeclaration","scope":6431,"src":"2496:21:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$6389_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":6426,"nodeType":"UserDefinedTypeName","pathNode":{"id":6425,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"2496:11:37"},"referencedDeclaration":6389,"src":"2496:11:37","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$6389_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:37"},"scope":6487,"src":"2435:190:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6441,"nodeType":"Block","src":"2807:106:37","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:37","statements":[{"nodeType":"YulAssignment","src":"2883:14:37","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6438,"isOffset":false,"isSlot":true,"src":"2883:6:37","suffix":"slot","valueSize":1},{"declaration":6434,"isOffset":false,"isSlot":false,"src":"2893:4:37","valueSize":1}],"id":6440,"nodeType":"InlineAssembly","src":"2860:47:37"}]},"documentation":{"id":6432,"nodeType":"StructuredDocumentation","src":"2631:87:37","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":6442,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:37","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"slot","nameLocation":"2755:4:37","nodeType":"VariableDeclaration","scope":6442,"src":"2747:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:37"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"r","nameLocation":"2804:1:37","nodeType":"VariableDeclaration","scope":6442,"src":"2784:21:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$6392_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":6437,"nodeType":"UserDefinedTypeName","pathNode":{"id":6436,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":6392,"src":"2784:11:37"},"referencedDeclaration":6392,"src":"2784:11:37","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$6392_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:37"},"scope":6487,"src":"2723:190:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6452,"nodeType":"Block","src":"3092:106:37","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:37","statements":[{"nodeType":"YulAssignment","src":"3168:14:37","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6449,"isOffset":false,"isSlot":true,"src":"3168:6:37","suffix":"slot","valueSize":1},{"declaration":6445,"isOffset":false,"isSlot":false,"src":"3178:4:37","valueSize":1}],"id":6451,"nodeType":"InlineAssembly","src":"3145:47:37"}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"2919:86:37","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":6453,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:37","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"slot","nameLocation":"3041:4:37","nodeType":"VariableDeclaration","scope":6453,"src":"3033:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:37"},"returnParameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6449,"mutability":"mutable","name":"r","nameLocation":"3089:1:37","nodeType":"VariableDeclaration","scope":6453,"src":"3070:20:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$6395_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":6448,"nodeType":"UserDefinedTypeName","pathNode":{"id":6447,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":6395,"src":"3070:10:37"},"referencedDeclaration":6395,"src":"3070:10:37","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$6395_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:37"},"scope":6487,"src":"3010:188:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6463,"nodeType":"Block","src":"3400:112:37","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:37","statements":[{"nodeType":"YulAssignment","src":"3476:20:37","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6460,"isOffset":false,"isSlot":true,"src":"3476:6:37","suffix":"slot","valueSize":1},{"declaration":6456,"isOffset":false,"isSlot":true,"src":"3486:10:37","suffix":"slot","valueSize":1}],"id":6462,"nodeType":"InlineAssembly","src":"3453:53:37"}]},"documentation":{"id":6454,"nodeType":"StructuredDocumentation","src":"3204:101:37","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":6464,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:37","nodeType":"FunctionDefinition","parameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"store","nameLocation":"3348:5:37","nodeType":"VariableDeclaration","scope":6464,"src":"3333:20:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6455,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:37"},"returnParameters":{"id":6461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6460,"mutability":"mutable","name":"r","nameLocation":"3397:1:37","nodeType":"VariableDeclaration","scope":6464,"src":"3378:20:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$6395_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":6459,"nodeType":"UserDefinedTypeName","pathNode":{"id":6458,"name":"StringSlot","nodeType":"IdentifierPath","referencedDeclaration":6395,"src":"3378:10:37"},"referencedDeclaration":6395,"src":"3378:10:37","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$6395_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:37"},"scope":6487,"src":"3310:202:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6474,"nodeType":"Block","src":"3688:106:37","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:37","statements":[{"nodeType":"YulAssignment","src":"3764:14:37","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6471,"isOffset":false,"isSlot":true,"src":"3764:6:37","suffix":"slot","valueSize":1},{"declaration":6467,"isOffset":false,"isSlot":false,"src":"3774:4:37","valueSize":1}],"id":6473,"nodeType":"InlineAssembly","src":"3741:47:37"}]},"documentation":{"id":6465,"nodeType":"StructuredDocumentation","src":"3518:85:37","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":6475,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:37","nodeType":"FunctionDefinition","parameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"slot","nameLocation":"3638:4:37","nodeType":"VariableDeclaration","scope":6475,"src":"3630:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:37"},"returnParameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"r","nameLocation":"3685:1:37","nodeType":"VariableDeclaration","scope":6475,"src":"3667:19:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$6398_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":6470,"nodeType":"UserDefinedTypeName","pathNode":{"id":6469,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":6398,"src":"3667:9:37"},"referencedDeclaration":6398,"src":"3667:9:37","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$6398_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:37"},"scope":6487,"src":"3608:186:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6485,"nodeType":"Block","src":"3991:112:37","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:37","statements":[{"nodeType":"YulAssignment","src":"4067:20:37","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:37"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6482,"isOffset":false,"isSlot":true,"src":"4067:6:37","suffix":"slot","valueSize":1},{"declaration":6478,"isOffset":false,"isSlot":true,"src":"4077:10:37","suffix":"slot","valueSize":1}],"id":6484,"nodeType":"InlineAssembly","src":"4044:53:37"}]},"documentation":{"id":6476,"nodeType":"StructuredDocumentation","src":"3800:99:37","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:37","nodeType":"FunctionDefinition","parameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"store","nameLocation":"3940:5:37","nodeType":"VariableDeclaration","scope":6486,"src":"3926:19:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6477,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:37"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"r","nameLocation":"3988:1:37","nodeType":"VariableDeclaration","scope":6486,"src":"3970:19:37","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$6398_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":6481,"nodeType":"UserDefinedTypeName","pathNode":{"id":6480,"name":"BytesSlot","nodeType":"IdentifierPath","referencedDeclaration":6398,"src":"3970:9:37"},"referencedDeclaration":6398,"src":"3970:9:37","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$6398_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:37"},"scope":6487,"src":"3904:199:37","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6488,"src":"1420:2685:37","usedErrors":[]}],"src":"193:3913:37"},"id":37},"contracts/utils/Strings.sol":{"ast":{"absolutePath":"contracts/utils/Strings.sol","exportedSymbols":{"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":6717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6489,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:38"},{"absolutePath":"contracts/utils/math/Math.sol","file":"./math/Math.sol","id":6490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6717,"sourceUnit":8189,"src":"126:25:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":6491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6717,"sourceUnit":9835,"src":"152:31:38","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":6492,"nodeType":"StructuredDocumentation","src":"185:34:38","text":" @dev String operations."},"fullyImplemented":true,"id":6716,"linearizedBaseContracts":[6716],"name":"Strings","nameLocation":"228:7:38","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6495,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:38","nodeType":"VariableDeclaration","scope":6716,"src":"242:54:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":6493,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:38","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":6494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":6498,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:38","nodeType":"VariableDeclaration","scope":6716,"src":"302:43:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6496,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":6497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:38","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":6545,"nodeType":"Block","src":"518:625:38","statements":[{"id":6544,"nodeType":"UncheckedBlock","src":"528:609:38","statements":[{"assignments":[6507],"declarations":[{"constant":false,"id":6507,"mutability":"mutable","name":"length","nameLocation":"560:6:38","nodeType":"VariableDeclaration","scope":6544,"src":"552:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6506,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"580:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6508,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"569:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":8025,"src":"569:10:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:38"},{"assignments":[6516],"declarations":[{"constant":false,"id":6516,"mutability":"mutable","name":"buffer","nameLocation":"618:6:38","nodeType":"VariableDeclaration","scope":6544,"src":"604:20:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6515,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6521,"initialValue":{"arguments":[{"id":6519,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"638:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:38","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":6517,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:38"},{"assignments":[6523],"declarations":[{"constant":false,"id":6523,"mutability":"mutable","name":"ptr","nameLocation":"667:3:38","nodeType":"VariableDeclaration","scope":6544,"src":"659:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6524,"nodeType":"VariableDeclarationStatement","src":"659:11:38"},{"AST":{"nodeType":"YulBlock","src":"740:67:38","statements":[{"nodeType":"YulAssignment","src":"758:35:38","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:38"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:38","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:38"},"nodeType":"YulFunctionCall","src":"777:15:38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:38"},"nodeType":"YulFunctionCall","src":"765:28:38"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:38"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6516,"isOffset":false,"isSlot":false,"src":"769:6:38","valueSize":1},{"declaration":6507,"isOffset":false,"isSlot":false,"src":"785:6:38","valueSize":1},{"declaration":6523,"isOffset":false,"isSlot":false,"src":"758:3:38","valueSize":1}],"id":6525,"nodeType":"InlineAssembly","src":"731:76:38"},{"body":{"id":6540,"nodeType":"Block","src":"833:267:38","statements":[{"expression":{"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:38","subExpression":{"id":6527,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"851:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6529,"nodeType":"ExpressionStatement","src":"851:5:38"},{"AST":{"nodeType":"YulBlock","src":"934:84:38","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:38"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:38"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:38","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:38"},"nodeType":"YulFunctionCall","src":"974:14:38"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:38"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:38"},"nodeType":"YulFunctionCall","src":"969:30:38"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:38"},"nodeType":"YulFunctionCall","src":"956:44:38"},"nodeType":"YulExpressionStatement","src":"956:44:38"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6495,"isOffset":false,"isSlot":false,"src":"990:8:38","valueSize":1},{"declaration":6523,"isOffset":false,"isSlot":false,"src":"964:3:38","valueSize":1},{"declaration":6501,"isOffset":false,"isSlot":false,"src":"978:5:38","valueSize":1}],"id":6530,"nodeType":"InlineAssembly","src":"925:93:38"},{"expression":{"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"1035:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6534,"nodeType":"ExpressionStatement","src":"1035:11:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"1068:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6539,"nodeType":"IfStatement","src":"1064:21:38","trueBody":{"id":6538,"nodeType":"Break","src":"1080:5:38"}}]},"condition":{"hexValue":"74727565","id":6526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":6541,"nodeType":"WhileStatement","src":"820:280:38"},{"expression":{"id":6542,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"1120:6:38","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6505,"id":6543,"nodeType":"Return","src":"1113:13:38"}]}]},"documentation":{"id":6499,"nodeType":"StructuredDocumentation","src":"352:90:38","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":6546,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:38","nodeType":"FunctionDefinition","parameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"value","nameLocation":"473:5:38","nodeType":"VariableDeclaration","scope":6546,"src":"465:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6500,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:38"},"returnParameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6546,"src":"503:13:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6503,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:38"},"scope":6716,"src":"447:696:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6573,"nodeType":"Block","src":"1313:103:38","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"1354:5:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:38","trueExpression":{"hexValue":"2d","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"1400:5:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":6565,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9834,"src":"1385:10:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9834_$","typeString":"type(library SignedMath)"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9833,"src":"1385:14:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6564,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[6546,6574],"referencedDeclaration":6546,"src":"1376:8:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6556,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:38","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:38","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6554,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:38","typeDescriptions":{}}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6553,"id":6572,"nodeType":"Return","src":"1323:86:38"}]},"documentation":{"id":6547,"nodeType":"StructuredDocumentation","src":"1149:89:38","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":6574,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:38","nodeType":"FunctionDefinition","parameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"value","nameLocation":"1268:5:38","nodeType":"VariableDeclaration","scope":6574,"src":"1261:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6548,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:38"},"returnParameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6574,"src":"1298:13:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6551,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:38"},"scope":6716,"src":"1243:173:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6593,"nodeType":"Block","src":"1595:100:38","statements":[{"id":6592,"nodeType":"UncheckedBlock","src":"1605:84:38","statements":[{"expression":{"arguments":[{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"1648:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"1667:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6584,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"1655:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8188_$","typeString":"type(library Math)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":8148,"src":"1655:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6582,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[6594,6670,6690],"referencedDeclaration":6670,"src":"1636:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6581,"id":6591,"nodeType":"Return","src":"1629:49:38"}]}]},"documentation":{"id":6575,"nodeType":"StructuredDocumentation","src":"1422:94:38","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":6594,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:38","nodeType":"FunctionDefinition","parameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"value","nameLocation":"1550:5:38","nodeType":"VariableDeclaration","scope":6594,"src":"1542:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:38"},"returnParameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6594,"src":"1580:13:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6579,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:38"},"scope":6716,"src":"1521:174:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6669,"nodeType":"Block","src":"1908:347:38","statements":[{"assignments":[6605],"declarations":[{"constant":false,"id":6605,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:38","nodeType":"VariableDeclaration","scope":6669,"src":"1918:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6604,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6614,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6609,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"1954:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:38","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6606,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:38"},{"expression":{"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6615,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"1975:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6617,"indexExpression":{"hexValue":"30","id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6620,"nodeType":"ExpressionStatement","src":"1975:15:38"},{"expression":{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6621,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"2000:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6623,"indexExpression":{"hexValue":"31","id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6626,"nodeType":"ExpressionStatement","src":"2000:15:38"},{"body":{"id":6655,"nodeType":"Block","src":"2070:83:38","statements":[{"expression":{"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6641,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"2084:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6643,"indexExpression":{"id":6642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"2091:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6644,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"2096:8:38","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":6648,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"2105:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:38","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6650,"nodeType":"ExpressionStatement","src":"2084:33:38"},{"expression":{"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"2131:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6654,"nodeType":"ExpressionStatement","src":"2131:11:38"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"2058:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6656,"initializationExpression":{"assignments":[6628],"declarations":[{"constant":false,"id":6628,"mutability":"mutable","name":"i","nameLocation":"2038:1:38","nodeType":"VariableDeclaration","scope":6656,"src":"2030:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6634,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6630,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"2046:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:38"},"loopExpression":{"expression":{"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:38","subExpression":{"id":6638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"2067:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6640,"nodeType":"ExpressionStatement","src":"2065:3:38"},"nodeType":"ForStatement","src":"2025:128:38"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"2170:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":6657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6663,"nodeType":"ExpressionStatement","src":"2162:55:38"},{"expression":{"arguments":[{"id":6666,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"2241:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6664,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:38","typeDescriptions":{}}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6603,"id":6668,"nodeType":"Return","src":"2227:21:38"}]},"documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"1701:112:38","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":6670,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:38","nodeType":"FunctionDefinition","parameters":{"id":6600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"value","nameLocation":"1847:5:38","nodeType":"VariableDeclaration","scope":6670,"src":"1839:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6599,"mutability":"mutable","name":"length","nameLocation":"1862:6:38","nodeType":"VariableDeclaration","scope":6670,"src":"1854:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:38"},"returnParameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6670,"src":"1893:13:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6601,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:38"},"scope":6716,"src":"1818:437:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6689,"nodeType":"Block","src":"2480:76:38","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6683,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"2525:4:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6681,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:38","typeDescriptions":{}}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:38","typeDescriptions":{}}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6686,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"2533:15:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6678,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[6594,6670,6690],"referencedDeclaration":6670,"src":"2497:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6677,"id":6688,"nodeType":"Return","src":"2490:59:38"}]},"documentation":{"id":6671,"nodeType":"StructuredDocumentation","src":"2261:141:38","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":6690,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:38","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"addr","nameLocation":"2436:4:38","nodeType":"VariableDeclaration","scope":6690,"src":"2428:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6672,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:38"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6690,"src":"2465:13:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6675,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:38"},"scope":6716,"src":"2407:149:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6714,"nodeType":"Block","src":"2711:66:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"2744:1:38","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6701,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:38","typeDescriptions":{}}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6700,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":6709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"2767:1:38","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6707,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:38","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6706,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6699,"id":6713,"nodeType":"Return","src":"2721:49:38"}]},"documentation":{"id":6691,"nodeType":"StructuredDocumentation","src":"2562:66:38","text":" @dev Returns true if the two strings are equal."},"id":6715,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:38","nodeType":"FunctionDefinition","parameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"a","nameLocation":"2662:1:38","nodeType":"VariableDeclaration","scope":6715,"src":"2648:15:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6692,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6695,"mutability":"mutable","name":"b","nameLocation":"2679:1:38","nodeType":"VariableDeclaration","scope":6715,"src":"2665:15:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6694,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:38"},"returnParameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6715,"src":"2705:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6697,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:38"},"scope":6716,"src":"2633:144:38","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6717,"src":"220:2559:38","usedErrors":[]}],"src":"101:2679:38"},"id":38},"contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[7082],"Math":[8188],"SignedMath":[9834],"Strings":[6716]},"id":7083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6718,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:39"},{"absolutePath":"contracts/utils/Strings.sol","file":"../Strings.sol","id":6719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7083,"sourceUnit":6717,"src":"137:24:39","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":6720,"nodeType":"StructuredDocumentation","src":"163:205:39","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":7082,"linearizedBaseContracts":[7082],"name":"ECDSA","nameLocation":"377:5:39","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":6726,"members":[{"id":6721,"name":"NoError","nameLocation":"417:7:39","nodeType":"EnumValue","src":"417:7:39"},{"id":6722,"name":"InvalidSignature","nameLocation":"434:16:39","nodeType":"EnumValue","src":"434:16:39"},{"id":6723,"name":"InvalidSignatureLength","nameLocation":"460:22:39","nodeType":"EnumValue","src":"460:22:39"},{"id":6724,"name":"InvalidSignatureS","nameLocation":"492:17:39","nodeType":"EnumValue","src":"492:17:39"},{"id":6725,"name":"InvalidSignatureV","nameLocation":"519:17:39","nodeType":"EnumValue","src":"519:17:39"}],"name":"RecoverError","nameLocation":"394:12:39","nodeType":"EnumDefinition","src":"389:175:39"},{"body":{"id":6769,"nodeType":"Block","src":"624:457:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6732,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"638:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6733,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"647:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":6721,"src":"647:20:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6738,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"734:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6739,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"743:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":6722,"src":"743:29:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"843:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6748,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"852:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":6723,"src":"852:35:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6756,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"965:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6757,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"974:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":6724,"src":"974:30:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6765,"nodeType":"IfStatement","src":"961:114:39","trueBody":{"id":6764,"nodeType":"Block","src":"1006:69:39","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":6760,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:39","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6763,"nodeType":"ExpressionStatement","src":"1020:44:39"}]}},"id":6766,"nodeType":"IfStatement","src":"839:236:39","trueBody":{"id":6755,"nodeType":"Block","src":"889:66:39","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":6752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":6751,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:39","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6754,"nodeType":"ExpressionStatement","src":"903:41:39"}]}},"id":6767,"nodeType":"IfStatement","src":"730:345:39","trueBody":{"id":6746,"nodeType":"Block","src":"774:59:39","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":6742,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:39","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6745,"nodeType":"ExpressionStatement","src":"788:34:39"}]}},"id":6768,"nodeType":"IfStatement","src":"634:441:39","trueBody":{"id":6737,"nodeType":"Block","src":"669:55:39","statements":[{"functionReturnParameters":6731,"id":6736,"nodeType":"Return","src":"683:7:39"}]}}]},"id":6770,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:39","nodeType":"FunctionDefinition","parameters":{"id":6730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"error","nameLocation":"604:5:39","nodeType":"VariableDeclaration","scope":6770,"src":"591:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6728,"nodeType":"UserDefinedTypeName","pathNode":{"id":6727,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":6726,"src":"591:12:39"},"referencedDeclaration":6726,"src":"591:12:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:39"},"returnParameters":{"id":6731,"nodeType":"ParameterList","parameters":[],"src":"624:0:39"},"scope":7082,"src":"570:511:39","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6815,"nodeType":"Block","src":"2249:626:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6783,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"2263:9:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":6785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:39","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6813,"nodeType":"Block","src":"2788:81:39","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6805,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:39","typeDescriptions":{}}},"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6809,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"2822:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":6723,"src":"2822:35:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}}],"id":6811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":6782,"id":6812,"nodeType":"Return","src":"2802:56:39"}]},"id":6814,"nodeType":"IfStatement","src":"2259:610:39","trueBody":{"id":6804,"nodeType":"Block","src":"2287:495:39","statements":[{"assignments":[6788],"declarations":[{"constant":false,"id":6788,"mutability":"mutable","name":"r","nameLocation":"2309:1:39","nodeType":"VariableDeclaration","scope":6804,"src":"2301:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6789,"nodeType":"VariableDeclarationStatement","src":"2301:9:39"},{"assignments":[6791],"declarations":[{"constant":false,"id":6791,"mutability":"mutable","name":"s","nameLocation":"2332:1:39","nodeType":"VariableDeclaration","scope":6804,"src":"2324:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6792,"nodeType":"VariableDeclarationStatement","src":"2324:9:39"},{"assignments":[6794],"declarations":[{"constant":false,"id":6794,"mutability":"mutable","name":"v","nameLocation":"2353:1:39","nodeType":"VariableDeclaration","scope":6804,"src":"2347:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6793,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6795,"nodeType":"VariableDeclarationStatement","src":"2347:7:39"},{"AST":{"nodeType":"YulBlock","src":"2555:171:39","statements":[{"nodeType":"YulAssignment","src":"2573:32:39","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:39"},"nodeType":"YulFunctionCall","src":"2584:20:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:39"},"nodeType":"YulFunctionCall","src":"2578:27:39"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:39"}]},{"nodeType":"YulAssignment","src":"2622:32:39","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:39","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:39"},"nodeType":"YulFunctionCall","src":"2633:20:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:39"},"nodeType":"YulFunctionCall","src":"2627:27:39"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:39"}]},{"nodeType":"YulAssignment","src":"2671:41:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:39","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:39"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:39","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:39"},"nodeType":"YulFunctionCall","src":"2690:20:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:39"},"nodeType":"YulFunctionCall","src":"2684:27:39"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:39"},"nodeType":"YulFunctionCall","src":"2676:36:39"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:39"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":6788,"isOffset":false,"isSlot":false,"src":"2573:1:39","valueSize":1},{"declaration":6791,"isOffset":false,"isSlot":false,"src":"2622:1:39","valueSize":1},{"declaration":6775,"isOffset":false,"isSlot":false,"src":"2588:9:39","valueSize":1},{"declaration":6775,"isOffset":false,"isSlot":false,"src":"2637:9:39","valueSize":1},{"declaration":6775,"isOffset":false,"isSlot":false,"src":"2694:9:39","valueSize":1},{"declaration":6794,"isOffset":false,"isSlot":false,"src":"2671:1:39","valueSize":1}],"id":6796,"nodeType":"InlineAssembly","src":"2546:180:39"},{"expression":{"arguments":[{"id":6798,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"2757:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6799,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"2763:1:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6800,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"2766:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6801,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"2769:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6797,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6816,6890,6984],"referencedDeclaration":6984,"src":"2746:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":6782,"id":6803,"nodeType":"Return","src":"2739:32:39"}]}}]},"documentation":{"id":6771,"nodeType":"StructuredDocumentation","src":"1087:1053:39","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":6816,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:39","nodeType":"FunctionDefinition","parameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"hash","nameLocation":"2173:4:39","nodeType":"VariableDeclaration","scope":6816,"src":"2165:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6775,"mutability":"mutable","name":"signature","nameLocation":"2192:9:39","nodeType":"VariableDeclaration","scope":6816,"src":"2179:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6774,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:39"},"returnParameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6816,"src":"2226:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6777,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6816,"src":"2235:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6780,"nodeType":"UserDefinedTypeName","pathNode":{"id":6779,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":6726,"src":"2235:12:39"},"referencedDeclaration":6726,"src":"2235:12:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:39"},"scope":7082,"src":"2145:730:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6842,"nodeType":"Block","src":"3748:140:39","statements":[{"assignments":[6827,6830],"declarations":[{"constant":false,"id":6827,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:39","nodeType":"VariableDeclaration","scope":6842,"src":"3759:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6826,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6830,"mutability":"mutable","name":"error","nameLocation":"3791:5:39","nodeType":"VariableDeclaration","scope":6842,"src":"3778:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6829,"nodeType":"UserDefinedTypeName","pathNode":{"id":6828,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":6726,"src":"3778:12:39"},"referencedDeclaration":6726,"src":"3778:12:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":6835,"initialValue":{"arguments":[{"id":6832,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"3811:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6833,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"3817:9:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6831,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6816,6890,6984],"referencedDeclaration":6816,"src":"3800:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:39"},{"expression":{"arguments":[{"id":6837,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"3849:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}],"id":6836,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"3837:11:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$6726_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6839,"nodeType":"ExpressionStatement","src":"3837:18:39"},{"expression":{"id":6840,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"3872:9:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6825,"id":6841,"nodeType":"Return","src":"3865:16:39"}]},"documentation":{"id":6817,"nodeType":"StructuredDocumentation","src":"2881:775:39","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":6843,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:39","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"hash","nameLocation":"3686:4:39","nodeType":"VariableDeclaration","scope":6843,"src":"3678:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6821,"mutability":"mutable","name":"signature","nameLocation":"3705:9:39","nodeType":"VariableDeclaration","scope":6843,"src":"3692:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6820,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:39"},"returnParameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6843,"src":"3739:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6823,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:39"},"scope":7082,"src":"3661:227:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6889,"nodeType":"Block","src":"4245:203:39","statements":[{"assignments":[6859],"declarations":[{"constant":false,"id":6859,"mutability":"mutable","name":"s","nameLocation":"4263:1:39","nodeType":"VariableDeclaration","scope":6889,"src":"4255:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6866,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6860,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"4267:2:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:39","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:39","typeDescriptions":{}}},"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:75:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:39"},{"assignments":[6868],"declarations":[{"constant":false,"id":6868,"mutability":"mutable","name":"v","nameLocation":"4363:1:39","nodeType":"VariableDeclaration","scope":6889,"src":"4357:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6867,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6881,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6873,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"4382:2:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:39","typeDescriptions":{}}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4374:11:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:39","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:39","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6869,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:39","typeDescriptions":{}}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:32:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:39"},{"expression":{"arguments":[{"id":6883,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"4427:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6884,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"4433:1:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6885,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"4436:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6886,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"4439:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6882,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6816,6890,6984],"referencedDeclaration":6984,"src":"4416:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4416:25:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":6857,"id":6888,"nodeType":"Return","src":"4409:32:39"}]},"documentation":{"id":6844,"nodeType":"StructuredDocumentation","src":"3894:243:39","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":6890,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:39","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"hash","nameLocation":"4170:4:39","nodeType":"VariableDeclaration","scope":6890,"src":"4162:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6848,"mutability":"mutable","name":"r","nameLocation":"4184:1:39","nodeType":"VariableDeclaration","scope":6890,"src":"4176:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"vs","nameLocation":"4195:2:39","nodeType":"VariableDeclaration","scope":6890,"src":"4187:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:39"},"returnParameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6890,"src":"4222:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6852,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6890,"src":"4231:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6855,"nodeType":"UserDefinedTypeName","pathNode":{"id":6854,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":6726,"src":"4231:12:39"},"referencedDeclaration":6726,"src":"4231:12:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:39"},"scope":7082,"src":"4142:306:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6919,"nodeType":"Block","src":"4699:136:39","statements":[{"assignments":[6903,6906],"declarations":[{"constant":false,"id":6903,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:39","nodeType":"VariableDeclaration","scope":6919,"src":"4710:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6902,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6906,"mutability":"mutable","name":"error","nameLocation":"4742:5:39","nodeType":"VariableDeclaration","scope":6919,"src":"4729:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6905,"nodeType":"UserDefinedTypeName","pathNode":{"id":6904,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":6726,"src":"4729:12:39"},"referencedDeclaration":6726,"src":"4729:12:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":6912,"initialValue":{"arguments":[{"id":6908,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"4762:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6909,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"4768:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6910,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"4771:2:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6907,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6816,6890,6984],"referencedDeclaration":6890,"src":"4751:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4751:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:39"},{"expression":{"arguments":[{"id":6914,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"4796:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}],"id":6913,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"4784:11:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$6726_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4784:18:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6916,"nodeType":"ExpressionStatement","src":"4784:18:39"},{"expression":{"id":6917,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"4819:9:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6901,"id":6918,"nodeType":"Return","src":"4812:16:39"}]},"documentation":{"id":6891,"nodeType":"StructuredDocumentation","src":"4454:154:39","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":6920,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:39","nodeType":"FunctionDefinition","parameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"hash","nameLocation":"4638:4:39","nodeType":"VariableDeclaration","scope":6920,"src":"4630:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6895,"mutability":"mutable","name":"r","nameLocation":"4652:1:39","nodeType":"VariableDeclaration","scope":6920,"src":"4644:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6897,"mutability":"mutable","name":"vs","nameLocation":"4663:2:39","nodeType":"VariableDeclaration","scope":6920,"src":"4655:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:39"},"returnParameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6920,"src":"4690:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6899,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:39"},"scope":7082,"src":"4613:222:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6983,"nodeType":"Block","src":"5120:1345:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6939,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"6016:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:39","typeDescriptions":{}}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6008:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:39","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6952,"nodeType":"IfStatement","src":"6004:161:39","trueBody":{"id":6951,"nodeType":"Block","src":"6089:76:39","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6943,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:39","typeDescriptions":{}}},"id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6111:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6947,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"6123:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":6724,"src":"6123:30:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}}],"id":6949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":6936,"id":6950,"nodeType":"Return","src":"6103:51:39"}]}},{"assignments":[6954],"declarations":[{"constant":false,"id":6954,"mutability":"mutable","name":"signer","nameLocation":"6267:6:39","nodeType":"VariableDeclaration","scope":6983,"src":"6259:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6953,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6961,"initialValue":{"arguments":[{"id":6956,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"6286:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6957,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"6292:1:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6958,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"6295:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6959,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"6298:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6955,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:39","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6276:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:39"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6962,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"6314:6:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6963,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:39","typeDescriptions":{}}},"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6324:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6977,"nodeType":"IfStatement","src":"6310:101:39","trueBody":{"id":6976,"nodeType":"Block","src":"6336:75:39","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":6970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6968,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:39","typeDescriptions":{}}},"id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6972,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"6370:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":6722,"src":"6370:29:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}}],"id":6974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":6936,"id":6975,"nodeType":"Return","src":"6350:50:39"}]}},{"expression":{"components":[{"id":6978,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"6429:6:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6979,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"6437:12:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$6726_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":6721,"src":"6437:20:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}}],"id":6981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":6936,"id":6982,"nodeType":"Return","src":"6421:37:39"}]},"documentation":{"id":6921,"nodeType":"StructuredDocumentation","src":"4841:163:39","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":6984,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:39","nodeType":"FunctionDefinition","parameters":{"id":6930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"hash","nameLocation":"5037:4:39","nodeType":"VariableDeclaration","scope":6984,"src":"5029:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6925,"mutability":"mutable","name":"v","nameLocation":"5049:1:39","nodeType":"VariableDeclaration","scope":6984,"src":"5043:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6924,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6927,"mutability":"mutable","name":"r","nameLocation":"5060:1:39","nodeType":"VariableDeclaration","scope":6984,"src":"5052:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6929,"mutability":"mutable","name":"s","nameLocation":"5071:1:39","nodeType":"VariableDeclaration","scope":6984,"src":"5063:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:39"},"returnParameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6984,"src":"5097:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6931,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6984,"src":"5106:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6934,"nodeType":"UserDefinedTypeName","pathNode":{"id":6933,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":6726,"src":"5106:12:39"},"referencedDeclaration":6726,"src":"5106:12:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:39"},"scope":7082,"src":"5009:1456:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7016,"nodeType":"Block","src":"6692:138:39","statements":[{"assignments":[6999,7002],"declarations":[{"constant":false,"id":6999,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:39","nodeType":"VariableDeclaration","scope":7016,"src":"6703:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6998,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7002,"mutability":"mutable","name":"error","nameLocation":"6735:5:39","nodeType":"VariableDeclaration","scope":7016,"src":"6722:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":7001,"nodeType":"UserDefinedTypeName","pathNode":{"id":7000,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":6726,"src":"6722:12:39"},"referencedDeclaration":6726,"src":"6722:12:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":7009,"initialValue":{"arguments":[{"id":7004,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"6755:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7005,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"6761:1:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7006,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"6764:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7007,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"6767:1:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7003,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6816,6890,6984],"referencedDeclaration":6984,"src":"6744:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6744:25:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$6726_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:39"},{"expression":{"arguments":[{"id":7011,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"6791:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$6726","typeString":"enum ECDSA.RecoverError"}],"id":7010,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"6779:11:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$6726_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6779:18:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7013,"nodeType":"ExpressionStatement","src":"6779:18:39"},{"expression":{"id":7014,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"6814:9:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6997,"id":7015,"nodeType":"Return","src":"6807:16:39"}]},"documentation":{"id":6985,"nodeType":"StructuredDocumentation","src":"6471:122:39","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":7017,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:39","nodeType":"FunctionDefinition","parameters":{"id":6994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"hash","nameLocation":"6623:4:39","nodeType":"VariableDeclaration","scope":7017,"src":"6615:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6989,"mutability":"mutable","name":"v","nameLocation":"6635:1:39","nodeType":"VariableDeclaration","scope":7017,"src":"6629:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6988,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"r","nameLocation":"6646:1:39","nodeType":"VariableDeclaration","scope":7017,"src":"6638:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6993,"mutability":"mutable","name":"s","nameLocation":"6657:1:39","nodeType":"VariableDeclaration","scope":7017,"src":"6649:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:39"},"returnParameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7017,"src":"6683:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6995,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:39"},"scope":7082,"src":"6598:232:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7026,"nodeType":"Block","src":"7206:310:39","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:39","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:39","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:39","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:39"},"nodeType":"YulFunctionCall","src":"7376:48:39"},"nodeType":"YulExpressionStatement","src":"7376:48:39"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:39","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:39"},"nodeType":"YulFunctionCall","src":"7437:18:39"},"nodeType":"YulExpressionStatement","src":"7437:18:39"},{"nodeType":"YulAssignment","src":"7468:32:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:39","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:39","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:39"},"nodeType":"YulFunctionCall","src":"7479:21:39"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:39"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7020,"isOffset":false,"isSlot":false,"src":"7450:4:39","valueSize":1},{"declaration":7023,"isOffset":false,"isSlot":false,"src":"7468:7:39","valueSize":1}],"id":7025,"nodeType":"InlineAssembly","src":"7353:157:39"}]},"documentation":{"id":7018,"nodeType":"StructuredDocumentation","src":"6836:279:39","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":7027,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:39","nodeType":"FunctionDefinition","parameters":{"id":7021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7020,"mutability":"mutable","name":"hash","nameLocation":"7160:4:39","nodeType":"VariableDeclaration","scope":7027,"src":"7152:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:39"},"returnParameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"message","nameLocation":"7197:7:39","nodeType":"VariableDeclaration","scope":7027,"src":"7189:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:39"},"scope":7082,"src":"7120:396:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"7881:116:39","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":7038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":7041,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"7976:1:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7976:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7039,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"7959:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$6716_$","typeString":"type(library Strings)"}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":6546,"src":"7959:16:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7959:26:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7044,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"7987:1:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7036,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:39","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:39","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:81:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7035,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7898:92:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7034,"id":7047,"nodeType":"Return","src":"7891:99:39"}]},"documentation":{"id":7028,"nodeType":"StructuredDocumentation","src":"7522:274:39","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:39","nodeType":"FunctionDefinition","parameters":{"id":7031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7030,"mutability":"mutable","name":"s","nameLocation":"7846:1:39","nodeType":"VariableDeclaration","scope":7049,"src":"7833:14:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7029,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:39"},"returnParameters":{"id":7034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7049,"src":"7872:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:39"},"scope":7082,"src":"7801:196:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7060,"nodeType":"Block","src":"8443:290:39","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:39","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:39","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:39"},"nodeType":"YulFunctionCall","src":"8530:11:39"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:39","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:39"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:39","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:39"},"nodeType":"YulFunctionCall","src":"8554:23:39"},"nodeType":"YulExpressionStatement","src":"8554:23:39"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:39","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:39"},"nodeType":"YulFunctionCall","src":"8597:14:39"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:39"},"nodeType":"YulFunctionCall","src":"8590:39:39"},"nodeType":"YulExpressionStatement","src":"8590:39:39"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:39","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:39"},"nodeType":"YulFunctionCall","src":"8649:14:39"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:39"},"nodeType":"YulFunctionCall","src":"8642:34:39"},"nodeType":"YulExpressionStatement","src":"8642:34:39"},{"nodeType":"YulAssignment","src":"8689:28:39","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:39","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:39"},"nodeType":"YulFunctionCall","src":"8697:20:39"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:39"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":7057,"isOffset":false,"isSlot":false,"src":"8689:4:39","valueSize":1},{"declaration":7052,"isOffset":false,"isSlot":false,"src":"8613:15:39","valueSize":1},{"declaration":7054,"isOffset":false,"isSlot":false,"src":"8665:10:39","valueSize":1}],"id":7059,"nodeType":"InlineAssembly","src":"8496:231:39"}]},"documentation":{"id":7050,"nodeType":"StructuredDocumentation","src":"8003:328:39","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":7061,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:39","nodeType":"FunctionDefinition","parameters":{"id":7055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:39","nodeType":"VariableDeclaration","scope":7061,"src":"8361:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7054,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:39","nodeType":"VariableDeclaration","scope":7061,"src":"8386:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:39"},"returnParameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"data","nameLocation":"8437:4:39","nodeType":"VariableDeclaration","scope":7061,"src":"8429:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:39"},"scope":7082,"src":"8336:397:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7080,"nodeType":"Block","src":"9048:80:39","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":7074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":7075,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"9104:9:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7076,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"9115:4:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7072,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:39","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:39","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9075:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9065:56:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7070,"id":7079,"nodeType":"Return","src":"9058:63:39"}]},"documentation":{"id":7062,"nodeType":"StructuredDocumentation","src":"8739:193:39","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":7081,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:39","nodeType":"FunctionDefinition","parameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"validator","nameLocation":"8986:9:39","nodeType":"VariableDeclaration","scope":7081,"src":"8978:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7063,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7066,"mutability":"mutable","name":"data","nameLocation":"9010:4:39","nodeType":"VariableDeclaration","scope":7081,"src":"8997:17:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7065,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:39"},"returnParameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7081,"src":"9039:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:39"},"scope":7082,"src":"8937:191:39","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7083,"src":"369:8761:39","usedErrors":[]}],"src":"112:9019:39"},"id":39},"contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[7082],"EIP712":[7286],"IERC5267":[1352],"Math":[8188],"ShortString":[6166],"ShortStrings":[6377],"SignedMath":[9834],"StorageSlot":[6487],"Strings":[6716]},"id":7287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7084,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:40"},{"absolutePath":"contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":7085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7287,"sourceUnit":7083,"src":"138:21:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":7086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7287,"sourceUnit":6378,"src":"160:29:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":7087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7287,"sourceUnit":1353,"src":"190:39:40","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7089,"name":"IERC5267","nodeType":"IdentifierPath","referencedDeclaration":1352,"src":"1837:8:40"},"id":7090,"nodeType":"InheritanceSpecifier","src":"1837:8:40"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":7088,"nodeType":"StructuredDocumentation","src":"231:1577:40","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":7286,"linearizedBaseContracts":[7286,1352],"name":"EIP712","nameLocation":"1827:6:40","nodeType":"ContractDefinition","nodes":[{"id":7092,"libraryName":{"id":7091,"name":"ShortStrings","nodeType":"IdentifierPath","referencedDeclaration":6377,"src":"1858:12:40"},"nodeType":"UsingForDirective","src":"1852:25:40"},{"constant":true,"id":7097,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:40","nodeType":"VariableDeclaration","scope":7286,"src":"1883:141:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":7094,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:95:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":7099,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:40","nodeType":"VariableDeclaration","scope":7286,"src":"2223:48:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":7101,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:40","nodeType":"VariableDeclaration","scope":7286,"src":"2277:40:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7103,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:40","nodeType":"VariableDeclaration","scope":7286,"src":"2323:37:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7102,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":7105,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:40","nodeType":"VariableDeclaration","scope":7286,"src":"2367:37:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":7107,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:40","nodeType":"VariableDeclaration","scope":7286,"src":"2410:40:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":7110,"mutability":"immutable","name":"_name","nameLocation":"2487:5:40","nodeType":"VariableDeclaration","scope":7286,"src":"2457:35:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":7109,"nodeType":"UserDefinedTypeName","pathNode":{"id":7108,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"2457:11:40"},"referencedDeclaration":6166,"src":"2457:11:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":7113,"mutability":"immutable","name":"_version","nameLocation":"2528:8:40","nodeType":"VariableDeclaration","scope":7286,"src":"2498:38:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"},"typeName":{"id":7112,"nodeType":"UserDefinedTypeName","pathNode":{"id":7111,"name":"ShortString","nodeType":"IdentifierPath","referencedDeclaration":6166,"src":"2498:11:40"},"referencedDeclaration":6166,"src":"2498:11:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":7115,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:40","nodeType":"VariableDeclaration","scope":7286,"src":"2542:28:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7114,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":7117,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:40","nodeType":"VariableDeclaration","scope":7286,"src":"2576:31:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7116,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":7174,"nodeType":"Block","src":"3233:376:40","statements":[{"expression":{"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7125,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"3243:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7128,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"3282:13:40","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7126,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"3251:4:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":6318,"src":"3251:30:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$6166_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3251:45:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"src":"3243:53:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"id":7131,"nodeType":"ExpressionStatement","src":"3243:53:40"},{"expression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7132,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"3306:8:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7135,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"3351:16:40","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7133,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"3317:7:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":6318,"src":"3317:33:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$6166_$bound_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3317:51:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"src":"3306:62:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"id":7138,"nodeType":"ExpressionStatement","src":"3306:62:40"},{"expression":{"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7139,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"3378:11:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7143,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"3408:4:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7141,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:40","typeDescriptions":{}}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3402:11:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7140,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3392:22:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7147,"nodeType":"ExpressionStatement","src":"3378:36:40"},{"expression":{"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7148,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"3424:14:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7152,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"3457:7:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7150,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:40","typeDescriptions":{}}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3451:14:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7149,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3441:25:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7156,"nodeType":"ExpressionStatement","src":"3424:42:40"},{"expression":{"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7157,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"3477:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7158,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:40","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7161,"nodeType":"ExpressionStatement","src":"3477:30:40"},{"expression":{"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7162,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"3517:22:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":7163,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"3542:21:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3542:23:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7166,"nodeType":"ExpressionStatement","src":"3517:48:40"},{"expression":{"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7167,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"3575:11:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:40","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}],"id":7169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7168,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:40","typeDescriptions":{}}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3589:13:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7173,"nodeType":"ExpressionStatement","src":"3575:27:40"}]},"documentation":{"id":7118,"nodeType":"StructuredDocumentation","src":"2614:559:40","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":7175,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"name","nameLocation":"3204:4:40","nodeType":"VariableDeclaration","scope":7175,"src":"3190:18:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7119,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7122,"mutability":"mutable","name":"version","nameLocation":"3224:7:40","nodeType":"VariableDeclaration","scope":7175,"src":"3210:21:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7121,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:40"},"returnParameters":{"id":7124,"nodeType":"ParameterList","parameters":[],"src":"3233:0:40"},"scope":7286,"src":"3178:431:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7200,"nodeType":"Block","src":"3757:200:40","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:40","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}],"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7181,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:40","typeDescriptions":{}}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3771:13:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7185,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"3788:11:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7187,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:40","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7189,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"3820:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7198,"nodeType":"Block","src":"3896:55:40","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7195,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"3917:21:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3917:23:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7180,"id":7197,"nodeType":"Return","src":"3910:30:40"}]},"id":7199,"nodeType":"IfStatement","src":"3767:184:40","trueBody":{"id":7194,"nodeType":"Block","src":"3836:54:40","statements":[{"expression":{"id":7192,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"3857:22:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7180,"id":7193,"nodeType":"Return","src":"3850:29:40"}]}}]},"documentation":{"id":7176,"nodeType":"StructuredDocumentation","src":"3615:75:40","text":" @dev Returns the domain separator for the current chain."},"id":7201,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:40","nodeType":"FunctionDefinition","parameters":{"id":7177,"nodeType":"ParameterList","parameters":[],"src":"3722:2:40"},"returnParameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7201,"src":"3748:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:40"},"scope":7286,"src":"3695:262:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7221,"nodeType":"Block","src":"4027:116:40","statements":[{"expression":{"arguments":[{"arguments":[{"id":7209,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"4065:10:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7210,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"4077:11:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7211,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"4090:14:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7212,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:40","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7216,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:40","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}],"id":7215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7214,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:40","typeDescriptions":{}}},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4121:13:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:40","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4054:10:40","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4054:81:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7206,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4044:92:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7205,"id":7220,"nodeType":"Return","src":"4037:99:40"}]},"id":7222,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:40","nodeType":"FunctionDefinition","parameters":{"id":7202,"nodeType":"ParameterList","parameters":[],"src":"3993:2:40"},"returnParameters":{"id":7205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7222,"src":"4018:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:40"},"scope":7286,"src":"3963:180:40","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7237,"nodeType":"Block","src":"4854:79:40","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7232,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"4893:18:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4893:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7234,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"4915:10:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7230,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"4871:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$7082_$","typeString":"type(library ECDSA)"}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":7061,"src":"4871:21:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4871:55:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7229,"id":7236,"nodeType":"Return","src":"4864:62:40"}]},"documentation":{"id":7223,"nodeType":"StructuredDocumentation","src":"4149:614:40","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":7238,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:40","nodeType":"FunctionDefinition","parameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:40","nodeType":"VariableDeclaration","scope":7238,"src":"4794:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:40"},"returnParameters":{"id":7229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7238,"src":"4845:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:40"},"scope":7286,"src":"4768:165:40","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1351],"body":{"id":7284,"nodeType":"Block","src":"5366:288:40","statements":[{"expression":{"components":[{"hexValue":"0f","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":7261,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"5454:13:40","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7259,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"5427:5:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":6345,"src":"5427:26:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$6166_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5427:41:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":7265,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"5512:16:40","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7263,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"5482:8:40","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$6166","typeString":"ShortString"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":6345,"src":"5482:29:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$6166_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_userDefinedValueType$_ShortString_$6166_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5482:47:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7267,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:40","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7271,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:40","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$7286","typeString":"contract EIP712"}],"id":7270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7269,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:40","typeDescriptions":{}}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5570:13:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":7275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:40","typeDescriptions":{}}},"id":7276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5597:10:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":7280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:40","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7277,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7278,"nodeType":"ArrayTypeName","src":"5625:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5621:16:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":7282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:40","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":7257,"id":7283,"nodeType":"Return","src":"5376:271:40"}]},"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"4939:77:40","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":7285,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:40","nodeType":"FunctionDefinition","overrides":{"id":7241,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:40"},"parameters":{"id":7240,"nodeType":"ParameterList","parameters":[],"src":"5042:2:40"},"returnParameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7243,"mutability":"mutable","name":"fields","nameLocation":"5143:6:40","nodeType":"VariableDeclaration","scope":7285,"src":"5136:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7242,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":7245,"mutability":"mutable","name":"name","nameLocation":"5177:4:40","nodeType":"VariableDeclaration","scope":7285,"src":"5163:18:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7244,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7247,"mutability":"mutable","name":"version","nameLocation":"5209:7:40","nodeType":"VariableDeclaration","scope":7285,"src":"5195:21:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7246,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7249,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:40","nodeType":"VariableDeclaration","scope":7285,"src":"5230:15:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7251,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:40","nodeType":"VariableDeclaration","scope":7285,"src":"5259:25:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7250,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7253,"mutability":"mutable","name":"salt","nameLocation":"5306:4:40","nodeType":"VariableDeclaration","scope":7285,"src":"5298:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7256,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:40","nodeType":"VariableDeclaration","scope":7285,"src":"5324:27:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7254,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7255,"nodeType":"ArrayTypeName","src":"5324:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:40"},"scope":7286,"src":"5021:633:40","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":7287,"src":"1809:3847:40","usedErrors":[6174,6176]}],"src":"113:5544:40"},"id":40},"contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[7310],"IERC165":[7322]},"id":7311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7288,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:41"},{"absolutePath":"contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":7289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7311,"sourceUnit":7323,"src":"124:23:41","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7291,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":7322,"src":"754:7:41"},"id":7292,"nodeType":"InheritanceSpecifier","src":"754:7:41"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":7290,"nodeType":"StructuredDocumentation","src":"149:576:41","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":7310,"linearizedBaseContracts":[7310,7322],"name":"ERC165","nameLocation":"744:6:41","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[7321],"body":{"id":7308,"nodeType":"Block","src":"920:64:41","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7301,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"937:11:41","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":7303,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"957:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$7322_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$7322_$","typeString":"type(contract IERC165)"}],"id":7302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:41","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$7322","typeString":"type(contract IERC165)"}},"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:41","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7300,"id":7307,"nodeType":"Return","src":"930:47:41"}]},"documentation":{"id":7293,"nodeType":"StructuredDocumentation","src":"768:56:41","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":7309,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:41","nodeType":"FunctionDefinition","overrides":{"id":7297,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:41"},"parameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:41","nodeType":"VariableDeclaration","scope":7309,"src":"856:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7294,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:41","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:41"},"returnParameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7309,"src":"914:4:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7298,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:41"},"scope":7310,"src":"829:155:41","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":7311,"src":"726:260:41","usedErrors":[]}],"src":"99:888:41"},"id":41},"contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[7322]},"id":7323,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7312,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:42"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":7313,"nodeType":"StructuredDocumentation","src":"125:279:42","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":7322,"linearizedBaseContracts":[7322],"name":"IERC165","nameLocation":"415:7:42","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7314,"nodeType":"StructuredDocumentation","src":"429:340:42","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":7321,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:42","nodeType":"FunctionDefinition","parameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:42","nodeType":"VariableDeclaration","scope":7321,"src":"801:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7315,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:42","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:42"},"returnParameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7321,"src":"844:4:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7318,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:42"},"scope":7322,"src":"774:76:42","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7323,"src":"405:447:42","usedErrors":[]}],"src":"100:753:42"},"id":42},"contracts/utils/math/Math.sol":{"ast":{"absolutePath":"contracts/utils/math/Math.sol","exportedSymbols":{"Math":[8188]},"id":8189,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7324,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:43"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":7325,"nodeType":"StructuredDocumentation","src":"128:73:43","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8188,"linearizedBaseContracts":[8188],"name":"Math","nameLocation":"210:4:43","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":7329,"members":[{"id":7326,"name":"Down","nameLocation":"245:4:43","nodeType":"EnumValue","src":"245:4:43"},{"id":7327,"name":"Up","nameLocation":"287:2:43","nodeType":"EnumValue","src":"287:2:43"},{"id":7328,"name":"Zero","nameLocation":"318:4:43","nodeType":"EnumValue","src":"318:4:43"}],"name":"Rounding","nameLocation":"226:8:43","nodeType":"EnumDefinition","src":"221:122:43"},{"body":{"id":7346,"nodeType":"Block","src":"480:37:43","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"497:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"501:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"509:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:43","trueExpression":{"id":7342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"505:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7338,"id":7345,"nodeType":"Return","src":"490:20:43"}]},"documentation":{"id":7330,"nodeType":"StructuredDocumentation","src":"349:59:43","text":" @dev Returns the largest of two numbers."},"id":7347,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:43","nodeType":"FunctionDefinition","parameters":{"id":7335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"mutability":"mutable","name":"a","nameLocation":"434:1:43","nodeType":"VariableDeclaration","scope":7347,"src":"426:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7331,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7334,"mutability":"mutable","name":"b","nameLocation":"445:1:43","nodeType":"VariableDeclaration","scope":7347,"src":"437:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7333,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:43"},"returnParameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7347,"src":"471:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7336,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:43"},"scope":8188,"src":"413:104:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7364,"nodeType":"Block","src":"655:37:43","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"672:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"676:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7361,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"684:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:43","trueExpression":{"id":7360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"680:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7356,"id":7363,"nodeType":"Return","src":"665:20:43"}]},"documentation":{"id":7348,"nodeType":"StructuredDocumentation","src":"523:60:43","text":" @dev Returns the smallest of two numbers."},"id":7365,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:43","nodeType":"FunctionDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7350,"mutability":"mutable","name":"a","nameLocation":"609:1:43","nodeType":"VariableDeclaration","scope":7365,"src":"601:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7349,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7352,"mutability":"mutable","name":"b","nameLocation":"620:1:43","nodeType":"VariableDeclaration","scope":7365,"src":"612:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7351,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:43"},"returnParameters":{"id":7356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7365,"src":"646:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7354,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:43"},"scope":8188,"src":"588:104:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7387,"nodeType":"Block","src":"876:82:43","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"931:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"935:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7368,"src":"941:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"945:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7374,"id":7386,"nodeType":"Return","src":"923:28:43"}]},"documentation":{"id":7366,"nodeType":"StructuredDocumentation","src":"698:102:43","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":7388,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:43","nodeType":"FunctionDefinition","parameters":{"id":7371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"a","nameLocation":"830:1:43","nodeType":"VariableDeclaration","scope":7388,"src":"822:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7367,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7370,"mutability":"mutable","name":"b","nameLocation":"841:1:43","nodeType":"VariableDeclaration","scope":7388,"src":"833:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7369,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:43"},"returnParameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7388,"src":"867:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:43"},"scope":8188,"src":"805:153:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7412,"nodeType":"Block","src":"1228:123:43","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"1316:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"1330:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"1339:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:43","trueExpression":{"hexValue":"30","id":7401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7397,"id":7411,"nodeType":"Return","src":"1309:35:43"}]},"documentation":{"id":7389,"nodeType":"StructuredDocumentation","src":"964:188:43","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":7413,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:43","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7391,"mutability":"mutable","name":"a","nameLocation":"1182:1:43","nodeType":"VariableDeclaration","scope":7413,"src":"1174:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7393,"mutability":"mutable","name":"b","nameLocation":"1193:1:43","nodeType":"VariableDeclaration","scope":7413,"src":"1185:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:43"},"returnParameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7413,"src":"1219:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:43"},"scope":8188,"src":"1157:194:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7535,"nodeType":"Block","src":"1765:4115:43","statements":[{"id":7534,"nodeType":"UncheckedBlock","src":"1775:4099:43","statements":[{"assignments":[7426],"declarations":[{"constant":false,"id":7426,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:43","nodeType":"VariableDeclaration","scope":7534,"src":"2096:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7427,"nodeType":"VariableDeclarationStatement","src":"2096:13:43"},{"assignments":[7429],"declarations":[{"constant":false,"id":7429,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:43","nodeType":"VariableDeclaration","scope":7534,"src":"2168:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7430,"nodeType":"VariableDeclarationStatement","src":"2168:13:43"},{"AST":{"nodeType":"YulBlock","src":"2248:157:43","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:43","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:43"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:43"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:43","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:43"},"nodeType":"YulFunctionCall","src":"2289:6:43"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:43"},"nodeType":"YulFunctionCall","src":"2276:20:43"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:43","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:43","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:43"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:43"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:43"},"nodeType":"YulFunctionCall","src":"2322:9:43"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:43"}]},{"nodeType":"YulAssignment","src":"2348:43:43","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:43"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:43"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:43"},"nodeType":"YulFunctionCall","src":"2361:14:43"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:43"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:43"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:43"},"nodeType":"YulFunctionCall","src":"2377:13:43"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:43"},"nodeType":"YulFunctionCall","src":"2357:34:43"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:43"}]}]},"evmVersion":"london","externalReferences":[{"declaration":7426,"isOffset":false,"isSlot":false,"src":"2313:5:43","valueSize":1},{"declaration":7426,"isOffset":false,"isSlot":false,"src":"2369:5:43","valueSize":1},{"declaration":7426,"isOffset":false,"isSlot":false,"src":"2384:5:43","valueSize":1},{"declaration":7429,"isOffset":false,"isSlot":false,"src":"2348:5:43","valueSize":1},{"declaration":7416,"isOffset":false,"isSlot":false,"src":"2283:1:43","valueSize":1},{"declaration":7416,"isOffset":false,"isSlot":false,"src":"2326:1:43","valueSize":1},{"declaration":7418,"isOffset":false,"isSlot":false,"src":"2286:1:43","valueSize":1},{"declaration":7418,"isOffset":false,"isSlot":false,"src":"2329:1:43","valueSize":1}],"id":7431,"nodeType":"InlineAssembly","src":"2239:166:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7432,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"2486:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7440,"nodeType":"IfStatement","src":"2482:368:43","trueBody":{"id":7439,"nodeType":"Block","src":"2498:352:43","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"2816:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7436,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"2824:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7424,"id":7438,"nodeType":"Return","src":"2809:26:43"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7442,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"2960:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7443,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"2974:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":7441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7447,"nodeType":"ExpressionStatement","src":"2952:53:43"},{"assignments":[7449],"declarations":[{"constant":false,"id":7449,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:43","nodeType":"VariableDeclaration","scope":7534,"src":"3261:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7450,"nodeType":"VariableDeclarationStatement","src":"3261:17:43"},{"AST":{"nodeType":"YulBlock","src":"3301:291:43","statements":[{"nodeType":"YulAssignment","src":"3370:38:43","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:43"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:43"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:43"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:43"},"nodeType":"YulFunctionCall","src":"3383:25:43"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:43"}]},{"nodeType":"YulAssignment","src":"3490:41:43","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:43"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:43"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:43"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:43"},"nodeType":"YulFunctionCall","src":"3510:20:43"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:43"},"nodeType":"YulFunctionCall","src":"3499:32:43"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:43"}]},{"nodeType":"YulAssignment","src":"3548:30:43","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:43"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:43"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:43"},"nodeType":"YulFunctionCall","src":"3557:21:43"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:43"}]}]},"evmVersion":"london","externalReferences":[{"declaration":7420,"isOffset":false,"isSlot":false,"src":"3396:11:43","valueSize":1},{"declaration":7426,"isOffset":false,"isSlot":false,"src":"3524:5:43","valueSize":1},{"declaration":7426,"isOffset":false,"isSlot":false,"src":"3548:5:43","valueSize":1},{"declaration":7426,"isOffset":false,"isSlot":false,"src":"3561:5:43","valueSize":1},{"declaration":7429,"isOffset":false,"isSlot":false,"src":"3490:5:43","valueSize":1},{"declaration":7429,"isOffset":false,"isSlot":false,"src":"3503:5:43","valueSize":1},{"declaration":7449,"isOffset":false,"isSlot":false,"src":"3370:9:43","valueSize":1},{"declaration":7449,"isOffset":false,"isSlot":false,"src":"3513:9:43","valueSize":1},{"declaration":7449,"isOffset":false,"isSlot":false,"src":"3568:9:43","valueSize":1},{"declaration":7416,"isOffset":false,"isSlot":false,"src":"3390:1:43","valueSize":1},{"declaration":7418,"isOffset":false,"isSlot":false,"src":"3393:1:43","valueSize":1}],"id":7451,"nodeType":"InlineAssembly","src":"3292:300:43"},{"assignments":[7453],"declarations":[{"constant":false,"id":7453,"mutability":"mutable","name":"twos","nameLocation":"3907:4:43","nodeType":"VariableDeclaration","scope":7534,"src":"3899:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7461,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7454,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"3914:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:43","subExpression":{"id":7455,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"3930:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:43"},{"AST":{"nodeType":"YulBlock","src":"3969:362:43","statements":[{"nodeType":"YulAssignment","src":"4034:37:43","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:43"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:43"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:43"},"nodeType":"YulFunctionCall","src":"4049:22:43"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:43"}]},{"nodeType":"YulAssignment","src":"4138:25:43","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:43"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:43"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:43"},"nodeType":"YulFunctionCall","src":"4147:16:43"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:43"}]},{"nodeType":"YulAssignment","src":"4278:39:43","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:43","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:43"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:43"},"nodeType":"YulFunctionCall","src":"4294:12:43"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:43"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:43"},"nodeType":"YulFunctionCall","src":"4290:23:43"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:43","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:43"},"nodeType":"YulFunctionCall","src":"4286:31:43"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:43"}]}]},"evmVersion":"london","externalReferences":[{"declaration":7420,"isOffset":false,"isSlot":false,"src":"4034:11:43","valueSize":1},{"declaration":7420,"isOffset":false,"isSlot":false,"src":"4053:11:43","valueSize":1},{"declaration":7426,"isOffset":false,"isSlot":false,"src":"4138:5:43","valueSize":1},{"declaration":7426,"isOffset":false,"isSlot":false,"src":"4151:5:43","valueSize":1},{"declaration":7453,"isOffset":false,"isSlot":false,"src":"4066:4:43","valueSize":1},{"declaration":7453,"isOffset":false,"isSlot":false,"src":"4158:4:43","valueSize":1},{"declaration":7453,"isOffset":false,"isSlot":false,"src":"4278:4:43","valueSize":1},{"declaration":7453,"isOffset":false,"isSlot":false,"src":"4301:4:43","valueSize":1},{"declaration":7453,"isOffset":false,"isSlot":false,"src":"4308:4:43","valueSize":1}],"id":7462,"nodeType":"InlineAssembly","src":"3960:371:43"},{"expression":{"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7463,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"4397:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7464,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"4406:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7465,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"4414:4:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7468,"nodeType":"ExpressionStatement","src":"4397:21:43"},{"assignments":[7470],"declarations":[{"constant":false,"id":7470,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:43","nodeType":"VariableDeclaration","scope":7534,"src":"4736:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7477,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:43","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7472,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"4759:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:43"},{"expression":{"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7478,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"4992:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7480,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5007:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7481,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5021:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7485,"nodeType":"ExpressionStatement","src":"4992:36:43"},{"expression":{"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7486,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5061:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7488,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5076:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7489,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5090:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7493,"nodeType":"ExpressionStatement","src":"5061:36:43"},{"expression":{"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7494,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5131:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7496,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5146:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7497,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5160:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7501,"nodeType":"ExpressionStatement","src":"5131:36:43"},{"expression":{"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7502,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5201:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7504,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5216:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7505,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5230:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7509,"nodeType":"ExpressionStatement","src":"5201:36:43"},{"expression":{"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5271:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5286:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7513,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5300:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7517,"nodeType":"ExpressionStatement","src":"5271:36:43"},{"expression":{"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5342:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7520,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5357:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7521,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5371:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7525,"nodeType":"ExpressionStatement","src":"5342:36:43"},{"expression":{"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"5812:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7527,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"5821:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7528,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"5829:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7531,"nodeType":"ExpressionStatement","src":"5812:24:43"},{"expression":{"id":7532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"5857:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7424,"id":7533,"nodeType":"Return","src":"5850:13:43"}]}]},"documentation":{"id":7414,"nodeType":"StructuredDocumentation","src":"1357:305:43","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":7536,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:43","nodeType":"FunctionDefinition","parameters":{"id":7421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7416,"mutability":"mutable","name":"x","nameLocation":"1691:1:43","nodeType":"VariableDeclaration","scope":7536,"src":"1683:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7418,"mutability":"mutable","name":"y","nameLocation":"1702:1:43","nodeType":"VariableDeclaration","scope":7536,"src":"1694:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7420,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:43","nodeType":"VariableDeclaration","scope":7536,"src":"1705:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:43"},"returnParameters":{"id":7424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7423,"mutability":"mutable","name":"result","nameLocation":"1757:6:43","nodeType":"VariableDeclaration","scope":7536,"src":"1749:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:43"},"scope":8188,"src":"1667:4213:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7579,"nodeType":"Block","src":"6122:189:43","statements":[{"assignments":[7552],"declarations":[{"constant":false,"id":7552,"mutability":"mutable","name":"result","nameLocation":"6140:6:43","nodeType":"VariableDeclaration","scope":7579,"src":"6132:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7551,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7558,"initialValue":{"arguments":[{"id":7554,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"6156:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7555,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"6159:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7556,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"6162:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7553,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[7536,7580],"referencedDeclaration":7536,"src":"6149:6:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:43"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7559,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"6188:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7560,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"6200:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7329_$","typeString":"type(enum Math.Rounding)"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":7327,"src":"6200:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"src":"6188:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7564,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"6222:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7565,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"6225:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7566,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"6228:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7563,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:43","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7576,"nodeType":"IfStatement","src":"6184:98:43","trueBody":{"id":7575,"nodeType":"Block","src":"6246:36:43","statements":[{"expression":{"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"6260:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7574,"nodeType":"ExpressionStatement","src":"6260:11:43"}]}},{"expression":{"id":7577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"6298:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7550,"id":7578,"nodeType":"Return","src":"6291:13:43"}]},"documentation":{"id":7537,"nodeType":"StructuredDocumentation","src":"5886:121:43","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":7580,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:43","nodeType":"FunctionDefinition","parameters":{"id":7547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"x","nameLocation":"6036:1:43","nodeType":"VariableDeclaration","scope":7580,"src":"6028:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7541,"mutability":"mutable","name":"y","nameLocation":"6047:1:43","nodeType":"VariableDeclaration","scope":7580,"src":"6039:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7540,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7543,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:43","nodeType":"VariableDeclaration","scope":7580,"src":"6050:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7542,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7546,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:43","nodeType":"VariableDeclaration","scope":7580,"src":"6071:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"typeName":{"id":7545,"nodeType":"UserDefinedTypeName","pathNode":{"id":7544,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"6071:8:43"},"referencedDeclaration":7329,"src":"6071:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:43"},"returnParameters":{"id":7550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7580,"src":"6113:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7548,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:43"},"scope":8188,"src":"6012:299:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7691,"nodeType":"Block","src":"6587:1585:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"6601:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7594,"nodeType":"IfStatement","src":"6597:45:43","trueBody":{"id":7593,"nodeType":"Block","src":"6609:33:43","statements":[{"expression":{"hexValue":"30","id":7591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7587,"id":7592,"nodeType":"Return","src":"6623:8:43"}]}},{"assignments":[7596],"declarations":[{"constant":false,"id":7596,"mutability":"mutable","name":"result","nameLocation":"7329:6:43","nodeType":"VariableDeclaration","scope":7691,"src":"7321:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7595,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"7349:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7598,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7860,7896],"referencedDeclaration":7860,"src":"7344:4:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:43"},{"id":7690,"nodeType":"UncheckedBlock","src":"7758:408:43","statements":[{"expression":{"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7782:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7792:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"7801:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7805:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7616,"nodeType":"ExpressionStatement","src":"7782:35:43"},{"expression":{"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7831:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7841:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"7850:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7854:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7627,"nodeType":"ExpressionStatement","src":"7831:35:43"},{"expression":{"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7880:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7890:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"7899:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7903:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7638,"nodeType":"ExpressionStatement","src":"7880:35:43"},{"expression":{"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7929:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7939:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"7948:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7952:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7649,"nodeType":"ExpressionStatement","src":"7929:35:43"},{"expression":{"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7978:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"7988:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"7997:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8001:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7660,"nodeType":"ExpressionStatement","src":"7978:35:43"},{"expression":{"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8027:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8037:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8046:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8050:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7671,"nodeType":"ExpressionStatement","src":"8027:35:43"},{"expression":{"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8076:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8086:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8095:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8099:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7682,"nodeType":"ExpressionStatement","src":"8076:35:43"},{"expression":{"arguments":[{"id":7684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8136:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8144:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"8148:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7683,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"8132:3:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7587,"id":7689,"nodeType":"Return","src":"8125:30:43"}]}]},"documentation":{"id":7581,"nodeType":"StructuredDocumentation","src":"6317:208:43","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":7692,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:43","nodeType":"FunctionDefinition","parameters":{"id":7584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7583,"mutability":"mutable","name":"a","nameLocation":"6552:1:43","nodeType":"VariableDeclaration","scope":7692,"src":"6544:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:43"},"returnParameters":{"id":7587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7692,"src":"6578:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7585,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:43"},"scope":8188,"src":"6530:1642:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7727,"nodeType":"Block","src":"8348:161:43","statements":[{"id":7726,"nodeType":"UncheckedBlock","src":"8358:145:43","statements":[{"assignments":[7704],"declarations":[{"constant":false,"id":7704,"mutability":"mutable","name":"result","nameLocation":"8390:6:43","nodeType":"VariableDeclaration","scope":7726,"src":"8382:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7708,"initialValue":{"arguments":[{"id":7706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"8404:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7705,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7692,7728],"referencedDeclaration":7692,"src":"8399:4:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:43"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"8427:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7710,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"8437:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7711,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"8449:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7329_$","typeString":"type(enum Math.Rounding)"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":7327,"src":"8449:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"src":"8437:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"8464:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"8473:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7717,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"8482:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:43","trueExpression":{"hexValue":"31","id":7720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":7723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:43","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7702,"id":7725,"nodeType":"Return","src":"8420:72:43"}]}]},"documentation":{"id":7693,"nodeType":"StructuredDocumentation","src":"8178:89:43","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":7728,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:43","nodeType":"FunctionDefinition","parameters":{"id":7699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7695,"mutability":"mutable","name":"a","nameLocation":"8294:1:43","nodeType":"VariableDeclaration","scope":7728,"src":"8286:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7694,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7698,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:43","nodeType":"VariableDeclaration","scope":7728,"src":"8297:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"typeName":{"id":7697,"nodeType":"UserDefinedTypeName","pathNode":{"id":7696,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"8297:8:43"},"referencedDeclaration":7329,"src":"8297:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:43"},"returnParameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7728,"src":"8339:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7700,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:43"},"scope":8188,"src":"8272:237:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7859,"nodeType":"Block","src":"8694:922:43","statements":[{"assignments":[7737],"declarations":[{"constant":false,"id":7737,"mutability":"mutable","name":"result","nameLocation":"8712:6:43","nodeType":"VariableDeclaration","scope":7859,"src":"8704:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7736,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7739,"initialValue":{"hexValue":"30","id":7738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:43"},{"id":7856,"nodeType":"UncheckedBlock","src":"8732:855:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"8760:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":7741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:43","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7754,"nodeType":"IfStatement","src":"8756:99:43","trueBody":{"id":7753,"nodeType":"Block","src":"8778:77:43","statements":[{"expression":{"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"8796:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:43","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7748,"nodeType":"ExpressionStatement","src":"8796:13:43"},{"expression":{"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"8827:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":7750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:43","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7752,"nodeType":"ExpressionStatement","src":"8827:13:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"8872:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":7756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7769,"nodeType":"IfStatement","src":"8868:96:43","trueBody":{"id":7768,"nodeType":"Block","src":"8889:75:43","statements":[{"expression":{"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"8907:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7763,"nodeType":"ExpressionStatement","src":"8907:12:43"},{"expression":{"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"8937:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7767,"nodeType":"ExpressionStatement","src":"8937:12:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"8981:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":7771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7784,"nodeType":"IfStatement","src":"8977:96:43","trueBody":{"id":7783,"nodeType":"Block","src":"8998:75:43","statements":[{"expression":{"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9016:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7778,"nodeType":"ExpressionStatement","src":"9016:12:43"},{"expression":{"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"9046:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7782,"nodeType":"ExpressionStatement","src":"9046:12:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9090:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7799,"nodeType":"IfStatement","src":"9086:96:43","trueBody":{"id":7798,"nodeType":"Block","src":"9107:75:43","statements":[{"expression":{"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9125:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7793,"nodeType":"ExpressionStatement","src":"9125:12:43"},{"expression":{"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"9155:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7797,"nodeType":"ExpressionStatement","src":"9155:12:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9199:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":7801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7814,"nodeType":"IfStatement","src":"9195:93:43","trueBody":{"id":7813,"nodeType":"Block","src":"9215:73:43","statements":[{"expression":{"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9233:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7808,"nodeType":"ExpressionStatement","src":"9233:11:43"},{"expression":{"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7809,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"9262:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7812,"nodeType":"ExpressionStatement","src":"9262:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9305:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":7816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:43","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7829,"nodeType":"IfStatement","src":"9301:93:43","trueBody":{"id":7828,"nodeType":"Block","src":"9321:73:43","statements":[{"expression":{"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9339:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:43","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7823,"nodeType":"ExpressionStatement","src":"9339:11:43"},{"expression":{"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"9368:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:43","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7827,"nodeType":"ExpressionStatement","src":"9368:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9411:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":7831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7844,"nodeType":"IfStatement","src":"9407:93:43","trueBody":{"id":7843,"nodeType":"Block","src":"9427:73:43","statements":[{"expression":{"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9445:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":7836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7838,"nodeType":"ExpressionStatement","src":"9445:11:43"},{"expression":{"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"9474:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7842,"nodeType":"ExpressionStatement","src":"9474:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"9517:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7855,"nodeType":"IfStatement","src":"9513:64:43","trueBody":{"id":7854,"nodeType":"Block","src":"9533:44:43","statements":[{"expression":{"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"9551:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7853,"nodeType":"ExpressionStatement","src":"9551:11:43"}]}}]},{"expression":{"id":7857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"9603:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7735,"id":7858,"nodeType":"Return","src":"9596:13:43"}]},"documentation":{"id":7729,"nodeType":"StructuredDocumentation","src":"8515:113:43","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":7860,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:43","nodeType":"FunctionDefinition","parameters":{"id":7732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7731,"mutability":"mutable","name":"value","nameLocation":"8655:5:43","nodeType":"VariableDeclaration","scope":7860,"src":"8647:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7730,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:43"},"returnParameters":{"id":7735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7860,"src":"8685:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7733,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:43"},"scope":8188,"src":"8633:983:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7895,"nodeType":"Block","src":"9849:165:43","statements":[{"id":7894,"nodeType":"UncheckedBlock","src":"9859:149:43","statements":[{"assignments":[7872],"declarations":[{"constant":false,"id":7872,"mutability":"mutable","name":"result","nameLocation":"9891:6:43","nodeType":"VariableDeclaration","scope":7894,"src":"9883:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7871,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7876,"initialValue":{"arguments":[{"id":7874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"9905:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7873,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7860,7896],"referencedDeclaration":7860,"src":"9900:4:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:43"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"9932:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7878,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"9942:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7879,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"9954:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7329_$","typeString":"type(enum Math.Rounding)"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":7327,"src":"9954:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"src":"9942:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"9974:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7863,"src":"9983:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:43","trueExpression":{"hexValue":"31","id":7888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":7891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:43","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7870,"id":7893,"nodeType":"Return","src":"9925:72:43"}]}]},"documentation":{"id":7861,"nodeType":"StructuredDocumentation","src":"9622:142:43","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7896,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:43","nodeType":"FunctionDefinition","parameters":{"id":7867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7863,"mutability":"mutable","name":"value","nameLocation":"9791:5:43","nodeType":"VariableDeclaration","scope":7896,"src":"9783:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7862,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7866,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:43","nodeType":"VariableDeclaration","scope":7896,"src":"9798:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"typeName":{"id":7865,"nodeType":"UserDefinedTypeName","pathNode":{"id":7864,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"9798:8:43"},"referencedDeclaration":7329,"src":"9798:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:43"},"returnParameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7896,"src":"9840:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:43"},"scope":8188,"src":"9769:245:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8024,"nodeType":"Block","src":"10201:854:43","statements":[{"assignments":[7905],"declarations":[{"constant":false,"id":7905,"mutability":"mutable","name":"result","nameLocation":"10219:6:43","nodeType":"VariableDeclaration","scope":8024,"src":"10211:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7904,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7907,"initialValue":{"hexValue":"30","id":7906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:43"},{"id":8021,"nodeType":"UncheckedBlock","src":"10239:787:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10267:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:43","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7924,"nodeType":"IfStatement","src":"10263:103:43","trueBody":{"id":7923,"nodeType":"Block","src":"10286:80:43","statements":[{"expression":{"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10304:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:43","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7918,"nodeType":"ExpressionStatement","src":"10304:17:43"},{"expression":{"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10339:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7922,"nodeType":"ExpressionStatement","src":"10339:12:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10383:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:43","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7941,"nodeType":"IfStatement","src":"10379:103:43","trueBody":{"id":7940,"nodeType":"Block","src":"10402:80:43","statements":[{"expression":{"id":7934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10420:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:43","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7935,"nodeType":"ExpressionStatement","src":"10420:17:43"},{"expression":{"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10455:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7939,"nodeType":"ExpressionStatement","src":"10455:12:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10499:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:43","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7958,"nodeType":"IfStatement","src":"10495:103:43","trueBody":{"id":7957,"nodeType":"Block","src":"10518:80:43","statements":[{"expression":{"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10536:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:43","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7952,"nodeType":"ExpressionStatement","src":"10536:17:43"},{"expression":{"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10571:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7956,"nodeType":"ExpressionStatement","src":"10571:12:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10615:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:43","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7975,"nodeType":"IfStatement","src":"10611:100:43","trueBody":{"id":7974,"nodeType":"Block","src":"10633:78:43","statements":[{"expression":{"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10651:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:43","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7969,"nodeType":"ExpressionStatement","src":"10651:16:43"},{"expression":{"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10685:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7973,"nodeType":"ExpressionStatement","src":"10685:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10728:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:43","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:43","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7992,"nodeType":"IfStatement","src":"10724:100:43","trueBody":{"id":7991,"nodeType":"Block","src":"10746:78:43","statements":[{"expression":{"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10764:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:43","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:43","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7986,"nodeType":"ExpressionStatement","src":"10764:16:43"},{"expression":{"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10798:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:43","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7990,"nodeType":"ExpressionStatement","src":"10798:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10841:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:43","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8009,"nodeType":"IfStatement","src":"10837:100:43","trueBody":{"id":8008,"nodeType":"Block","src":"10859:78:43","statements":[{"expression":{"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10877:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":8001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":8000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:43","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8003,"nodeType":"ExpressionStatement","src":"10877:16:43"},{"expression":{"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10911:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":8005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8007,"nodeType":"ExpressionStatement","src":"10911:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"10954:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":8013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8020,"nodeType":"IfStatement","src":"10950:66:43","trueBody":{"id":8019,"nodeType":"Block","src":"10972:44:43","statements":[{"expression":{"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"10990:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":8016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8018,"nodeType":"ExpressionStatement","src":"10990:11:43"}]}}]},{"expression":{"id":8022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"11042:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7903,"id":8023,"nodeType":"Return","src":"11035:13:43"}]},"documentation":{"id":7897,"nodeType":"StructuredDocumentation","src":"10020:114:43","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":8025,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:43","nodeType":"FunctionDefinition","parameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7899,"mutability":"mutable","name":"value","nameLocation":"10162:5:43","nodeType":"VariableDeclaration","scope":8025,"src":"10154:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7898,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:43"},"returnParameters":{"id":7903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8025,"src":"10192:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7901,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:43"},"scope":8188,"src":"10139:916:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8060,"nodeType":"Block","src":"11290:167:43","statements":[{"id":8059,"nodeType":"UncheckedBlock","src":"11300:151:43","statements":[{"assignments":[8037],"declarations":[{"constant":false,"id":8037,"mutability":"mutable","name":"result","nameLocation":"11332:6:43","nodeType":"VariableDeclaration","scope":8059,"src":"11324:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8036,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8041,"initialValue":{"arguments":[{"id":8039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"11347:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8038,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[8025,8061],"referencedDeclaration":8025,"src":"11341:5:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:43"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"11374:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8043,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"11384:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8044,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"11396:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7329_$","typeString":"type(enum Math.Rounding)"}},"id":8045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":7327,"src":"11396:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"src":"11384:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:43","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"11417:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"11426:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":8054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:43","trueExpression":{"hexValue":"31","id":8053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":8056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:43","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8035,"id":8058,"nodeType":"Return","src":"11367:73:43"}]}]},"documentation":{"id":8026,"nodeType":"StructuredDocumentation","src":"11061:143:43","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8061,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:43","nodeType":"FunctionDefinition","parameters":{"id":8032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"mutability":"mutable","name":"value","nameLocation":"11232:5:43","nodeType":"VariableDeclaration","scope":8061,"src":"11224:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8027,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8031,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:43","nodeType":"VariableDeclaration","scope":8061,"src":"11239:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"typeName":{"id":8030,"nodeType":"UserDefinedTypeName","pathNode":{"id":8029,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"11239:8:43"},"referencedDeclaration":7329,"src":"11239:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:43"},"returnParameters":{"id":8035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8061,"src":"11281:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:43"},"scope":8188,"src":"11209:248:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8147,"nodeType":"Block","src":"11771:600:43","statements":[{"assignments":[8070],"declarations":[{"constant":false,"id":8070,"mutability":"mutable","name":"result","nameLocation":"11789:6:43","nodeType":"VariableDeclaration","scope":8147,"src":"11781:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8069,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8072,"initialValue":{"hexValue":"30","id":8071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:43"},{"id":8144,"nodeType":"UncheckedBlock","src":"11809:533:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"11837:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":8074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:43","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8087,"nodeType":"IfStatement","src":"11833:98:43","trueBody":{"id":8086,"nodeType":"Block","src":"11855:76:43","statements":[{"expression":{"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"11873:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":8079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:43","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8081,"nodeType":"ExpressionStatement","src":"11873:13:43"},{"expression":{"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"11904:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":8083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8085,"nodeType":"ExpressionStatement","src":"11904:12:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"11948:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":8089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8102,"nodeType":"IfStatement","src":"11944:95:43","trueBody":{"id":8101,"nodeType":"Block","src":"11965:74:43","statements":[{"expression":{"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"11983:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":8094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:43","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8096,"nodeType":"ExpressionStatement","src":"11983:12:43"},{"expression":{"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"12013:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":8098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8100,"nodeType":"ExpressionStatement","src":"12013:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"12056:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":8104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8117,"nodeType":"IfStatement","src":"12052:95:43","trueBody":{"id":8116,"nodeType":"Block","src":"12073:74:43","statements":[{"expression":{"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"12091:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":8109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8111,"nodeType":"ExpressionStatement","src":"12091:12:43"},{"expression":{"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"12121:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":8113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:43","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8115,"nodeType":"ExpressionStatement","src":"12121:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"12164:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":8119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8132,"nodeType":"IfStatement","src":"12160:95:43","trueBody":{"id":8131,"nodeType":"Block","src":"12181:74:43","statements":[{"expression":{"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"12199:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":8124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:43","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8126,"nodeType":"ExpressionStatement","src":"12199:12:43"},{"expression":{"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"12229:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":8128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8130,"nodeType":"ExpressionStatement","src":"12229:11:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"12272:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":8134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:43","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8143,"nodeType":"IfStatement","src":"12268:64:43","trueBody":{"id":8142,"nodeType":"Block","src":"12288:44:43","statements":[{"expression":{"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"12306:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":8139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8141,"nodeType":"ExpressionStatement","src":"12306:11:43"}]}}]},{"expression":{"id":8145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"12358:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8068,"id":8146,"nodeType":"Return","src":"12351:13:43"}]},"documentation":{"id":8062,"nodeType":"StructuredDocumentation","src":"11463:240:43","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":8148,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:43","nodeType":"FunctionDefinition","parameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"value","nameLocation":"11732:5:43","nodeType":"VariableDeclaration","scope":8148,"src":"11724:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:43"},"returnParameters":{"id":8068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8148,"src":"11762:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8066,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:43"},"scope":8188,"src":"11708:663:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8186,"nodeType":"Block","src":"12608:174:43","statements":[{"id":8185,"nodeType":"UncheckedBlock","src":"12618:158:43","statements":[{"assignments":[8160],"declarations":[{"constant":false,"id":8160,"mutability":"mutable","name":"result","nameLocation":"12650:6:43","nodeType":"VariableDeclaration","scope":8185,"src":"12642:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8159,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8164,"initialValue":{"arguments":[{"id":8162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"12666:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8161,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[8148,8187],"referencedDeclaration":8148,"src":"12659:6:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:43"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"12693:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8166,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"12703:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8167,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"12715:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7329_$","typeString":"type(enum Math.Rounding)"}},"id":8168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":7327,"src":"12715:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"src":"12703:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"12736:6:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":8172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:43","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"12751:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":8180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:43","trueExpression":{"hexValue":"31","id":8179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":8182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:43","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8158,"id":8184,"nodeType":"Return","src":"12686:79:43"}]}]},"documentation":{"id":8149,"nodeType":"StructuredDocumentation","src":"12377:144:43","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8187,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:43","nodeType":"FunctionDefinition","parameters":{"id":8155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8151,"mutability":"mutable","name":"value","nameLocation":"12550:5:43","nodeType":"VariableDeclaration","scope":8187,"src":"12542:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8150,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8154,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:43","nodeType":"VariableDeclaration","scope":8187,"src":"12557:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"},"typeName":{"id":8153,"nodeType":"UserDefinedTypeName","pathNode":{"id":8152,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":7329,"src":"12557:8:43"},"referencedDeclaration":7329,"src":"12557:8:43","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7329","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:43"},"returnParameters":{"id":8158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8187,"src":"12599:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8156,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:43"},"scope":8188,"src":"12526:256:43","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8189,"src":"202:12582:43","usedErrors":[]}],"src":"103:12682:43"},"id":43},"contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9729]},"id":9730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8190,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:44"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":8191,"nodeType":"StructuredDocumentation","src":"217:709:44","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":9729,"linearizedBaseContracts":[9729],"name":"SafeCast","nameLocation":"935:8:44","nodeType":"ContractDefinition","nodes":[{"body":{"id":8215,"nodeType":"Block","src":"1339:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"1357:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8202,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":8201,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":8205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1366:17:44","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":8199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8209,"nodeType":"ExpressionStatement","src":"1349:78:44"},{"expression":{"arguments":[{"id":8212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"1452:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8210,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:44","typeDescriptions":{}}},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":8198,"id":8214,"nodeType":"Return","src":"1437:21:44"}]},"documentation":{"id":8192,"nodeType":"StructuredDocumentation","src":"950:318:44","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":8216,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:44","nodeType":"FunctionDefinition","parameters":{"id":8195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8194,"mutability":"mutable","name":"value","nameLocation":"1300:5:44","nodeType":"VariableDeclaration","scope":8216,"src":"1292:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:44"},"returnParameters":{"id":8198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8216,"src":"1330:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":8196,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:44","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:44"},"scope":9729,"src":"1273:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8240,"nodeType":"Block","src":"1860:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"1878:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8227,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":8226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":8230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1887:17:44","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":8232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":8224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8234,"nodeType":"ExpressionStatement","src":"1870:78:44"},{"expression":{"arguments":[{"id":8237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"1973:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8235,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:44","typeDescriptions":{}}},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":8223,"id":8239,"nodeType":"Return","src":"1958:21:44"}]},"documentation":{"id":8217,"nodeType":"StructuredDocumentation","src":"1471:318:44","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":8241,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:44","nodeType":"FunctionDefinition","parameters":{"id":8220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8219,"mutability":"mutable","name":"value","nameLocation":"1821:5:44","nodeType":"VariableDeclaration","scope":8241,"src":"1813:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:44"},"returnParameters":{"id":8223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8241,"src":"1851:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":8221,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:44","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:44"},"scope":9729,"src":"1794:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8265,"nodeType":"Block","src":"2381:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"2399:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8252,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":8251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":8255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2408:17:44","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":8257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":8249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8259,"nodeType":"ExpressionStatement","src":"2391:78:44"},{"expression":{"arguments":[{"id":8262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"2494:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8260,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:44","typeDescriptions":{}}},"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":8248,"id":8264,"nodeType":"Return","src":"2479:21:44"}]},"documentation":{"id":8242,"nodeType":"StructuredDocumentation","src":"1992:318:44","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":8266,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:44","nodeType":"FunctionDefinition","parameters":{"id":8245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8244,"mutability":"mutable","name":"value","nameLocation":"2342:5:44","nodeType":"VariableDeclaration","scope":8266,"src":"2334:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:44"},"returnParameters":{"id":8248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8266,"src":"2372:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":8246,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:44","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:44"},"scope":9729,"src":"2315:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8290,"nodeType":"Block","src":"2902:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8269,"src":"2920:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8277,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":8276,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2929:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":8280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2929:17:44","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":8282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":8274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8284,"nodeType":"ExpressionStatement","src":"2912:78:44"},{"expression":{"arguments":[{"id":8287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8269,"src":"3015:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8285,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:44","typeDescriptions":{}}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8273,"id":8289,"nodeType":"Return","src":"3000:21:44"}]},"documentation":{"id":8267,"nodeType":"StructuredDocumentation","src":"2513:318:44","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":8291,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:44","nodeType":"FunctionDefinition","parameters":{"id":8270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8269,"mutability":"mutable","name":"value","nameLocation":"2863:5:44","nodeType":"VariableDeclaration","scope":8291,"src":"2855:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8268,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:44"},"returnParameters":{"id":8273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8291,"src":"2893:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8271,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:44","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:44"},"scope":9729,"src":"2836:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8315,"nodeType":"Block","src":"3423:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"3441:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8302,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":8301,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3450:17:44","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":8307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":8299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8309,"nodeType":"ExpressionStatement","src":"3433:78:44"},{"expression":{"arguments":[{"id":8312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"3536:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8310,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:44","typeDescriptions":{}}},"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":8298,"id":8314,"nodeType":"Return","src":"3521:21:44"}]},"documentation":{"id":8292,"nodeType":"StructuredDocumentation","src":"3034:318:44","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":8316,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:44","nodeType":"FunctionDefinition","parameters":{"id":8295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8294,"mutability":"mutable","name":"value","nameLocation":"3384:5:44","nodeType":"VariableDeclaration","scope":8316,"src":"3376:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:44"},"returnParameters":{"id":8298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8316,"src":"3414:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":8296,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:44","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:44"},"scope":9729,"src":"3357:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8340,"nodeType":"Block","src":"3944:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"3962:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8327,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":8326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":8330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3971:17:44","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":8324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8334,"nodeType":"ExpressionStatement","src":"3954:78:44"},{"expression":{"arguments":[{"id":8337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"4057:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8335,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:44","typeDescriptions":{}}},"id":8338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8323,"id":8339,"nodeType":"Return","src":"4042:21:44"}]},"documentation":{"id":8317,"nodeType":"StructuredDocumentation","src":"3555:318:44","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":8341,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:44","nodeType":"FunctionDefinition","parameters":{"id":8320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8319,"mutability":"mutable","name":"value","nameLocation":"3905:5:44","nodeType":"VariableDeclaration","scope":8341,"src":"3897:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:44"},"returnParameters":{"id":8323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8341,"src":"3935:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8321,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:44","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:44"},"scope":9729,"src":"3878:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8365,"nodeType":"Block","src":"4465:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8344,"src":"4483:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8352,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":8351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":8355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4492:17:44","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":8357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":8349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4475:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8359,"nodeType":"ExpressionStatement","src":"4475:78:44"},{"expression":{"arguments":[{"id":8362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8344,"src":"4578:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8360,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:44","typeDescriptions":{}}},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":8348,"id":8364,"nodeType":"Return","src":"4563:21:44"}]},"documentation":{"id":8342,"nodeType":"StructuredDocumentation","src":"4076:318:44","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":8366,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:44","nodeType":"FunctionDefinition","parameters":{"id":8345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8344,"mutability":"mutable","name":"value","nameLocation":"4426:5:44","nodeType":"VariableDeclaration","scope":8366,"src":"4418:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8343,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:44"},"returnParameters":{"id":8348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8366,"src":"4456:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":8346,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:44","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:44"},"scope":9729,"src":"4399:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8390,"nodeType":"Block","src":"4986:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"5004:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8377,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":8376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5013:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5013:17:44","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":8382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":8374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8384,"nodeType":"ExpressionStatement","src":"4996:78:44"},{"expression":{"arguments":[{"id":8387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"5099:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8385,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:44","typeDescriptions":{}}},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":8373,"id":8389,"nodeType":"Return","src":"5084:21:44"}]},"documentation":{"id":8367,"nodeType":"StructuredDocumentation","src":"4597:318:44","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":8391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:44","nodeType":"FunctionDefinition","parameters":{"id":8370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8369,"mutability":"mutable","name":"value","nameLocation":"4947:5:44","nodeType":"VariableDeclaration","scope":8391,"src":"4939:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8368,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:44"},"returnParameters":{"id":8373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8391,"src":"4977:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":8371,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:44","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:44"},"scope":9729,"src":"4920:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8415,"nodeType":"Block","src":"5507:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"5525:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8402,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":8401,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5534:17:44","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":8407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":8399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8409,"nodeType":"ExpressionStatement","src":"5517:78:44"},{"expression":{"arguments":[{"id":8412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"5620:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8410,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:44","typeDescriptions":{}}},"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":8398,"id":8414,"nodeType":"Return","src":"5605:21:44"}]},"documentation":{"id":8392,"nodeType":"StructuredDocumentation","src":"5118:318:44","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":8416,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:44","nodeType":"FunctionDefinition","parameters":{"id":8395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8394,"mutability":"mutable","name":"value","nameLocation":"5468:5:44","nodeType":"VariableDeclaration","scope":8416,"src":"5460:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8393,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:44"},"returnParameters":{"id":8398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8416,"src":"5498:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":8396,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:44","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:44"},"scope":9729,"src":"5441:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8440,"nodeType":"Block","src":"6028:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"6046:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8427,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":8426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6055:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":8430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6055:17:44","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":8432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":8424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8434,"nodeType":"ExpressionStatement","src":"6038:78:44"},{"expression":{"arguments":[{"id":8437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"6141:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8435,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:44","typeDescriptions":{}}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":8423,"id":8439,"nodeType":"Return","src":"6126:21:44"}]},"documentation":{"id":8417,"nodeType":"StructuredDocumentation","src":"5639:318:44","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":8441,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:44","nodeType":"FunctionDefinition","parameters":{"id":8420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8419,"mutability":"mutable","name":"value","nameLocation":"5989:5:44","nodeType":"VariableDeclaration","scope":8441,"src":"5981:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:44"},"returnParameters":{"id":8423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8441,"src":"6019:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":8421,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:44","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:44"},"scope":9729,"src":"5962:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8465,"nodeType":"Block","src":"6549:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8444,"src":"6567:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8452,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":8451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":8455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6576:17:44","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":8449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8459,"nodeType":"ExpressionStatement","src":"6559:78:44"},{"expression":{"arguments":[{"id":8462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8444,"src":"6662:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8460,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:44","typeDescriptions":{}}},"id":8463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6654:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":8448,"id":8464,"nodeType":"Return","src":"6647:21:44"}]},"documentation":{"id":8442,"nodeType":"StructuredDocumentation","src":"6160:318:44","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":8466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:44","nodeType":"FunctionDefinition","parameters":{"id":8445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8444,"mutability":"mutable","name":"value","nameLocation":"6510:5:44","nodeType":"VariableDeclaration","scope":8466,"src":"6502:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8443,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:44"},"returnParameters":{"id":8448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8466,"src":"6540:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":8446,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:44","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:44"},"scope":9729,"src":"6483:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8490,"nodeType":"Block","src":"7070:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8469,"src":"7088:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8477,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7097:17:44","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":8482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":8474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7080:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8484,"nodeType":"ExpressionStatement","src":"7080:78:44"},{"expression":{"arguments":[{"id":8487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8469,"src":"7183:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8485,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:44","typeDescriptions":{}}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7175:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8473,"id":8489,"nodeType":"Return","src":"7168:21:44"}]},"documentation":{"id":8467,"nodeType":"StructuredDocumentation","src":"6681:318:44","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":8491,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:44","nodeType":"FunctionDefinition","parameters":{"id":8470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8469,"mutability":"mutable","name":"value","nameLocation":"7031:5:44","nodeType":"VariableDeclaration","scope":8491,"src":"7023:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8468,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:44"},"returnParameters":{"id":8473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8491,"src":"7061:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8471,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:44","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:44"},"scope":9729,"src":"7004:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8515,"nodeType":"Block","src":"7591:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"7609:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8502,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8501,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7618:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7618:17:44","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":8507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":8499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7601:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8509,"nodeType":"ExpressionStatement","src":"7601:78:44"},{"expression":{"arguments":[{"id":8512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"7704:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8510,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:44","typeDescriptions":{}}},"id":8513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7696:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8498,"id":8514,"nodeType":"Return","src":"7689:21:44"}]},"documentation":{"id":8492,"nodeType":"StructuredDocumentation","src":"7202:318:44","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":8516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:44","nodeType":"FunctionDefinition","parameters":{"id":8495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8494,"mutability":"mutable","name":"value","nameLocation":"7552:5:44","nodeType":"VariableDeclaration","scope":8516,"src":"7544:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8493,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:44"},"returnParameters":{"id":8498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8516,"src":"7582:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8496,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:44","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:44"},"scope":9729,"src":"7525:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8540,"nodeType":"Block","src":"8112:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"8130:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8527,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8139:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8139:17:44","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":8532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":8524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8534,"nodeType":"ExpressionStatement","src":"8122:78:44"},{"expression":{"arguments":[{"id":8537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"8225:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8535,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:44","typeDescriptions":{}}},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8217:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8523,"id":8539,"nodeType":"Return","src":"8210:21:44"}]},"documentation":{"id":8517,"nodeType":"StructuredDocumentation","src":"7723:318:44","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":8541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:44","nodeType":"FunctionDefinition","parameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8519,"mutability":"mutable","name":"value","nameLocation":"8073:5:44","nodeType":"VariableDeclaration","scope":8541,"src":"8065:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8518,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:44"},"returnParameters":{"id":8523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8541,"src":"8103:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8521,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:44","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:44"},"scope":9729,"src":"8046:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8565,"nodeType":"Block","src":"8633:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"8651:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8552,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8551,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8660:17:44","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":8557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":8549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8559,"nodeType":"ExpressionStatement","src":"8643:78:44"},{"expression":{"arguments":[{"id":8562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"8746:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8560,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:44","typeDescriptions":{}}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8738:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8548,"id":8564,"nodeType":"Return","src":"8731:21:44"}]},"documentation":{"id":8542,"nodeType":"StructuredDocumentation","src":"8244:318:44","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":8566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:44","nodeType":"FunctionDefinition","parameters":{"id":8545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8544,"mutability":"mutable","name":"value","nameLocation":"8594:5:44","nodeType":"VariableDeclaration","scope":8566,"src":"8586:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8543,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:44"},"returnParameters":{"id":8548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8566,"src":"8624:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8546,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:44","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:44"},"scope":9729,"src":"8567:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8590,"nodeType":"Block","src":"9154:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"9172:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8577,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9181:17:44","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":8582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":8574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9164:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8584,"nodeType":"ExpressionStatement","src":"9164:78:44"},{"expression":{"arguments":[{"id":8587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"9267:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8585,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:44","typeDescriptions":{}}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9259:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8573,"id":8589,"nodeType":"Return","src":"9252:21:44"}]},"documentation":{"id":8567,"nodeType":"StructuredDocumentation","src":"8765:318:44","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":8591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:44","nodeType":"FunctionDefinition","parameters":{"id":8570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8569,"mutability":"mutable","name":"value","nameLocation":"9115:5:44","nodeType":"VariableDeclaration","scope":8591,"src":"9107:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8568,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:44"},"returnParameters":{"id":8573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8591,"src":"9145:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8571,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:44","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:44"},"scope":9729,"src":"9088:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8615,"nodeType":"Block","src":"9675:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"9693:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8602,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9702:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9702:17:44","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":8607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":8599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9685:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8609,"nodeType":"ExpressionStatement","src":"9685:78:44"},{"expression":{"arguments":[{"id":8612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"9788:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8610,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:44","typeDescriptions":{}}},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9780:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8598,"id":8614,"nodeType":"Return","src":"9773:21:44"}]},"documentation":{"id":8592,"nodeType":"StructuredDocumentation","src":"9286:318:44","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":8616,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:44","nodeType":"FunctionDefinition","parameters":{"id":8595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8594,"mutability":"mutable","name":"value","nameLocation":"9636:5:44","nodeType":"VariableDeclaration","scope":8616,"src":"9628:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8593,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:44"},"returnParameters":{"id":8598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8616,"src":"9666:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8596,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:44","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:44"},"scope":9729,"src":"9609:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8640,"nodeType":"Block","src":"10196:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8619,"src":"10214:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8627,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8626,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10223:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10223:17:44","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":8632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":8624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8634,"nodeType":"ExpressionStatement","src":"10206:78:44"},{"expression":{"arguments":[{"id":8637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8619,"src":"10309:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8635,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:44","typeDescriptions":{}}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8623,"id":8639,"nodeType":"Return","src":"10294:21:44"}]},"documentation":{"id":8617,"nodeType":"StructuredDocumentation","src":"9807:318:44","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":8641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:44","nodeType":"FunctionDefinition","parameters":{"id":8620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8619,"mutability":"mutable","name":"value","nameLocation":"10157:5:44","nodeType":"VariableDeclaration","scope":8641,"src":"10149:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8618,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:44"},"returnParameters":{"id":8623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8641,"src":"10187:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8621,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:44","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:44"},"scope":9729,"src":"10130:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8665,"nodeType":"Block","src":"10717:126:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"10735:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8652,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10744:17:44","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":8657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":8649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10727:78:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8659,"nodeType":"ExpressionStatement","src":"10727:78:44"},{"expression":{"arguments":[{"id":8662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"10830:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8660,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:44","typeDescriptions":{}}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8648,"id":8664,"nodeType":"Return","src":"10815:21:44"}]},"documentation":{"id":8642,"nodeType":"StructuredDocumentation","src":"10328:318:44","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":8666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:44","nodeType":"FunctionDefinition","parameters":{"id":8645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8644,"mutability":"mutable","name":"value","nameLocation":"10678:5:44","nodeType":"VariableDeclaration","scope":8666,"src":"10670:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8643,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:44"},"returnParameters":{"id":8648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8666,"src":"10708:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8646,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:44","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:44"},"scope":9729,"src":"10651:192:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8690,"nodeType":"Block","src":"11232:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"11250:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8677,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11259:16:44","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":8682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":8674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11242:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8684,"nodeType":"ExpressionStatement","src":"11242:76:44"},{"expression":{"arguments":[{"id":8687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"11342:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8685,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:44","typeDescriptions":{}}},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8673,"id":8689,"nodeType":"Return","src":"11328:20:44"}]},"documentation":{"id":8667,"nodeType":"StructuredDocumentation","src":"10849:314:44","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":8691,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:44","nodeType":"FunctionDefinition","parameters":{"id":8670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8669,"mutability":"mutable","name":"value","nameLocation":"11194:5:44","nodeType":"VariableDeclaration","scope":8691,"src":"11186:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8668,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:44"},"returnParameters":{"id":8673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8691,"src":"11224:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8671,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:44","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:44"},"scope":9729,"src":"11168:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8715,"nodeType":"Block","src":"11744:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"11762:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8702,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8701,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11771:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11771:16:44","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":8707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":8699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11754:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8709,"nodeType":"ExpressionStatement","src":"11754:76:44"},{"expression":{"arguments":[{"id":8712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"11854:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8710,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:44","typeDescriptions":{}}},"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11847:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8698,"id":8714,"nodeType":"Return","src":"11840:20:44"}]},"documentation":{"id":8692,"nodeType":"StructuredDocumentation","src":"11361:314:44","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":8716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:44","nodeType":"FunctionDefinition","parameters":{"id":8695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8694,"mutability":"mutable","name":"value","nameLocation":"11706:5:44","nodeType":"VariableDeclaration","scope":8716,"src":"11698:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8693,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:44"},"returnParameters":{"id":8698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8716,"src":"11736:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8696,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:44","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:44"},"scope":9729,"src":"11680:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8740,"nodeType":"Block","src":"12256:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"12274:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8727,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8726,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12283:16:44","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":8732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":8724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12266:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8734,"nodeType":"ExpressionStatement","src":"12266:76:44"},{"expression":{"arguments":[{"id":8737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"12366:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8735,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:44","typeDescriptions":{}}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12359:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8723,"id":8739,"nodeType":"Return","src":"12352:20:44"}]},"documentation":{"id":8717,"nodeType":"StructuredDocumentation","src":"11873:314:44","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":8741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:44","nodeType":"FunctionDefinition","parameters":{"id":8720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8719,"mutability":"mutable","name":"value","nameLocation":"12218:5:44","nodeType":"VariableDeclaration","scope":8741,"src":"12210:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8718,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:44"},"returnParameters":{"id":8723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8741,"src":"12248:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8721,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:44","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:44"},"scope":9729,"src":"12192:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8765,"nodeType":"Block","src":"12768:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"12786:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8752,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12795:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12795:16:44","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":8757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":8749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12778:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8759,"nodeType":"ExpressionStatement","src":"12778:76:44"},{"expression":{"arguments":[{"id":8762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"12878:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8760,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:44","typeDescriptions":{}}},"id":8763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12871:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8748,"id":8764,"nodeType":"Return","src":"12864:20:44"}]},"documentation":{"id":8742,"nodeType":"StructuredDocumentation","src":"12385:314:44","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":8766,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:44","nodeType":"FunctionDefinition","parameters":{"id":8745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8744,"mutability":"mutable","name":"value","nameLocation":"12730:5:44","nodeType":"VariableDeclaration","scope":8766,"src":"12722:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8743,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:44"},"returnParameters":{"id":8748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8766,"src":"12760:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8746,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:44","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:44"},"scope":9729,"src":"12704:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8790,"nodeType":"Block","src":"13280:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"13298:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8777,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13307:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13307:16:44","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":8782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":8774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13290:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8784,"nodeType":"ExpressionStatement","src":"13290:76:44"},{"expression":{"arguments":[{"id":8787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"13390:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8785,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:44","typeDescriptions":{}}},"id":8788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13383:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8773,"id":8789,"nodeType":"Return","src":"13376:20:44"}]},"documentation":{"id":8767,"nodeType":"StructuredDocumentation","src":"12897:314:44","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":8791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:44","nodeType":"FunctionDefinition","parameters":{"id":8770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8769,"mutability":"mutable","name":"value","nameLocation":"13242:5:44","nodeType":"VariableDeclaration","scope":8791,"src":"13234:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8768,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:44"},"returnParameters":{"id":8773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8791,"src":"13272:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8771,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:44","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:44"},"scope":9729,"src":"13216:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8815,"nodeType":"Block","src":"13792:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"13810:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8802,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13819:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13819:16:44","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":8807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":8799,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8809,"nodeType":"ExpressionStatement","src":"13802:76:44"},{"expression":{"arguments":[{"id":8812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"13902:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8810,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:44","typeDescriptions":{}}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8798,"id":8814,"nodeType":"Return","src":"13888:20:44"}]},"documentation":{"id":8792,"nodeType":"StructuredDocumentation","src":"13409:314:44","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":8816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:44","nodeType":"FunctionDefinition","parameters":{"id":8795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8794,"mutability":"mutable","name":"value","nameLocation":"13754:5:44","nodeType":"VariableDeclaration","scope":8816,"src":"13746:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8793,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:44"},"returnParameters":{"id":8798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8816,"src":"13784:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8796,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:44","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:44"},"scope":9729,"src":"13728:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8840,"nodeType":"Block","src":"14304:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"14322:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8827,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8826,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14331:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14331:16:44","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":8832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":8824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14314:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8834,"nodeType":"ExpressionStatement","src":"14314:76:44"},{"expression":{"arguments":[{"id":8837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"14414:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8835,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:44","typeDescriptions":{}}},"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14407:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8823,"id":8839,"nodeType":"Return","src":"14400:20:44"}]},"documentation":{"id":8817,"nodeType":"StructuredDocumentation","src":"13921:314:44","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":8841,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:44","nodeType":"FunctionDefinition","parameters":{"id":8820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8819,"mutability":"mutable","name":"value","nameLocation":"14266:5:44","nodeType":"VariableDeclaration","scope":8841,"src":"14258:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8818,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:44"},"returnParameters":{"id":8823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8841,"src":"14296:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8821,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:44","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:44"},"scope":9729,"src":"14240:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8865,"nodeType":"Block","src":"14816:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8844,"src":"14834:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8852,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8851,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14843:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14843:16:44","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":8857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":8849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8859,"nodeType":"ExpressionStatement","src":"14826:76:44"},{"expression":{"arguments":[{"id":8862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8844,"src":"14926:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8860,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:44","typeDescriptions":{}}},"id":8863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14919:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8848,"id":8864,"nodeType":"Return","src":"14912:20:44"}]},"documentation":{"id":8842,"nodeType":"StructuredDocumentation","src":"14433:314:44","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":8866,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:44","nodeType":"FunctionDefinition","parameters":{"id":8845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8844,"mutability":"mutable","name":"value","nameLocation":"14778:5:44","nodeType":"VariableDeclaration","scope":8866,"src":"14770:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8843,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:44"},"returnParameters":{"id":8848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8866,"src":"14808:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8846,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:44","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:44"},"scope":9729,"src":"14752:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8890,"nodeType":"Block","src":"15328:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"15346:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8877,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8876,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15355:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15355:16:44","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":8882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":8874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15338:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8884,"nodeType":"ExpressionStatement","src":"15338:76:44"},{"expression":{"arguments":[{"id":8887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"15438:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8885,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:44","typeDescriptions":{}}},"id":8888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8873,"id":8889,"nodeType":"Return","src":"15424:20:44"}]},"documentation":{"id":8867,"nodeType":"StructuredDocumentation","src":"14945:314:44","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":8891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:44","nodeType":"FunctionDefinition","parameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"mutability":"mutable","name":"value","nameLocation":"15290:5:44","nodeType":"VariableDeclaration","scope":8891,"src":"15282:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8868,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:44"},"returnParameters":{"id":8873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8891,"src":"15320:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8871,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:44","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:44"},"scope":9729,"src":"15264:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8915,"nodeType":"Block","src":"15840:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8894,"src":"15858:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8902,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8901,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15867:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15867:16:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":8907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":8899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15850:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8909,"nodeType":"ExpressionStatement","src":"15850:76:44"},{"expression":{"arguments":[{"id":8912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8894,"src":"15950:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8910,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:44","typeDescriptions":{}}},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15943:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8898,"id":8914,"nodeType":"Return","src":"15936:20:44"}]},"documentation":{"id":8892,"nodeType":"StructuredDocumentation","src":"15457:314:44","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":8916,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:44","nodeType":"FunctionDefinition","parameters":{"id":8895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8894,"mutability":"mutable","name":"value","nameLocation":"15802:5:44","nodeType":"VariableDeclaration","scope":8916,"src":"15794:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8893,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:44"},"returnParameters":{"id":8898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8916,"src":"15832:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8896,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:44"},"scope":9729,"src":"15776:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8940,"nodeType":"Block","src":"16352:123:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8919,"src":"16370:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8927,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8926,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16379:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16379:16:44","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":8932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":8924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16362:76:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8934,"nodeType":"ExpressionStatement","src":"16362:76:44"},{"expression":{"arguments":[{"id":8937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8919,"src":"16462:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8935,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:44","typeDescriptions":{}}},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16455:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8923,"id":8939,"nodeType":"Return","src":"16448:20:44"}]},"documentation":{"id":8917,"nodeType":"StructuredDocumentation","src":"15969:314:44","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":8941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:44","nodeType":"FunctionDefinition","parameters":{"id":8920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8919,"mutability":"mutable","name":"value","nameLocation":"16314:5:44","nodeType":"VariableDeclaration","scope":8941,"src":"16306:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8918,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:44"},"returnParameters":{"id":8923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8941,"src":"16344:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8921,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:44","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:44"},"scope":9729,"src":"16288:187:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8965,"nodeType":"Block","src":"16858:120:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"16876:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8952,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:11:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16885:15:44","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":8957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":8949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16868:74:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8959,"nodeType":"ExpressionStatement","src":"16868:74:44"},{"expression":{"arguments":[{"id":8962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8944,"src":"16965:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8960,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:44","typeDescriptions":{}}},"id":8963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8948,"id":8964,"nodeType":"Return","src":"16952:19:44"}]},"documentation":{"id":8942,"nodeType":"StructuredDocumentation","src":"16481:310:44","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":8966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:44","nodeType":"FunctionDefinition","parameters":{"id":8945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8944,"mutability":"mutable","name":"value","nameLocation":"16821:5:44","nodeType":"VariableDeclaration","scope":8966,"src":"16813:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8943,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:44"},"returnParameters":{"id":8948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8966,"src":"16851:5:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8946,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:44","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:44"},"scope":9729,"src":"16796:182:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8986,"nodeType":"Block","src":"17252:103:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8969,"src":"17270:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":8976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:44","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":8978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":8974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17262:55:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8980,"nodeType":"ExpressionStatement","src":"17262:55:44"},{"expression":{"arguments":[{"id":8983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8969,"src":"17342:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8981,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:44","typeDescriptions":{}}},"id":8984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17334:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8973,"id":8985,"nodeType":"Return","src":"17327:21:44"}]},"documentation":{"id":8967,"nodeType":"StructuredDocumentation","src":"16984:198:44","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":8987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:44","nodeType":"FunctionDefinition","parameters":{"id":8970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8969,"mutability":"mutable","name":"value","nameLocation":"17213:5:44","nodeType":"VariableDeclaration","scope":8987,"src":"17206:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8968,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:44"},"returnParameters":{"id":8973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8987,"src":"17243:7:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8971,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:44"},"scope":9729,"src":"17187:168:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9009,"nodeType":"Block","src":"17790:124:44","statements":[{"expression":{"id":9000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"17800:10:44","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"17820:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8996,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:44","typeDescriptions":{}}},"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17813:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:44","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":9001,"nodeType":"ExpressionStatement","src":"17800:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9003,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"17844:10:44","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"17858:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":9006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":9002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17836:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9008,"nodeType":"ExpressionStatement","src":"17836:71:44"}]},"documentation":{"id":8988,"nodeType":"StructuredDocumentation","src":"17361:350:44","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":9010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:44","nodeType":"FunctionDefinition","parameters":{"id":8991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8990,"mutability":"mutable","name":"value","nameLocation":"17741:5:44","nodeType":"VariableDeclaration","scope":9010,"src":"17734:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8989,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:44"},"returnParameters":{"id":8994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8993,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:44","nodeType":"VariableDeclaration","scope":9010,"src":"17771:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8992,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:44","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:44"},"scope":9729,"src":"17716:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9032,"nodeType":"Block","src":"18349:124:44","statements":[{"expression":{"id":9023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"18359:10:44","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"18379:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":9019,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:44","typeDescriptions":{}}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18372:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:44","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":9024,"nodeType":"ExpressionStatement","src":"18359:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"18403:10:44","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"18417:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":9029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":9025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18395:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9031,"nodeType":"ExpressionStatement","src":"18395:71:44"}]},"documentation":{"id":9011,"nodeType":"StructuredDocumentation","src":"17920:350:44","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":9033,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:44","nodeType":"FunctionDefinition","parameters":{"id":9014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9013,"mutability":"mutable","name":"value","nameLocation":"18300:5:44","nodeType":"VariableDeclaration","scope":9033,"src":"18293:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9012,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:44"},"returnParameters":{"id":9017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9016,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:44","nodeType":"VariableDeclaration","scope":9033,"src":"18330:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":9015,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:44","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:44"},"scope":9729,"src":"18275:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9055,"nodeType":"Block","src":"18908:124:44","statements":[{"expression":{"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9039,"src":"18918:10:44","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"18938:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":9042,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:44","typeDescriptions":{}}},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18931:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:44","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":9047,"nodeType":"ExpressionStatement","src":"18918:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9039,"src":"18962:10:44","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9036,"src":"18976:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":9052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":9048,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18954:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9054,"nodeType":"ExpressionStatement","src":"18954:71:44"}]},"documentation":{"id":9034,"nodeType":"StructuredDocumentation","src":"18479:350:44","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":9056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:44","nodeType":"FunctionDefinition","parameters":{"id":9037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9036,"mutability":"mutable","name":"value","nameLocation":"18859:5:44","nodeType":"VariableDeclaration","scope":9056,"src":"18852:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9035,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:44"},"returnParameters":{"id":9040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9039,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:44","nodeType":"VariableDeclaration","scope":9056,"src":"18889:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":9038,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:44","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:44"},"scope":9729,"src":"18834:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9078,"nodeType":"Block","src":"19467:124:44","statements":[{"expression":{"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9062,"src":"19477:10:44","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9059,"src":"19497:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":9065,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:44","typeDescriptions":{}}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19490:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:44","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":9070,"nodeType":"ExpressionStatement","src":"19477:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9062,"src":"19521:10:44","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9059,"src":"19535:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":9075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":9071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19513:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9077,"nodeType":"ExpressionStatement","src":"19513:71:44"}]},"documentation":{"id":9057,"nodeType":"StructuredDocumentation","src":"19038:350:44","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":9079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:44","nodeType":"FunctionDefinition","parameters":{"id":9060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9059,"mutability":"mutable","name":"value","nameLocation":"19418:5:44","nodeType":"VariableDeclaration","scope":9079,"src":"19411:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9058,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:44"},"returnParameters":{"id":9063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9062,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:44","nodeType":"VariableDeclaration","scope":9079,"src":"19448:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":9061,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:44","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:44"},"scope":9729,"src":"19393:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9101,"nodeType":"Block","src":"20026:124:44","statements":[{"expression":{"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"20036:10:44","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9082,"src":"20056:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":9088,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:44","typeDescriptions":{}}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20049:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:44","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":9093,"nodeType":"ExpressionStatement","src":"20036:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"20080:10:44","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9082,"src":"20094:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":9098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":9094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20072:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9100,"nodeType":"ExpressionStatement","src":"20072:71:44"}]},"documentation":{"id":9080,"nodeType":"StructuredDocumentation","src":"19597:350:44","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":9102,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:44","nodeType":"FunctionDefinition","parameters":{"id":9083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9082,"mutability":"mutable","name":"value","nameLocation":"19977:5:44","nodeType":"VariableDeclaration","scope":9102,"src":"19970:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9081,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:44"},"returnParameters":{"id":9086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9085,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:44","nodeType":"VariableDeclaration","scope":9102,"src":"20007:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":9084,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:44","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:44"},"scope":9729,"src":"19952:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9124,"nodeType":"Block","src":"20585:124:44","statements":[{"expression":{"id":9115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9108,"src":"20595:10:44","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9105,"src":"20615:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":9111,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:44","typeDescriptions":{}}},"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:44","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":9116,"nodeType":"ExpressionStatement","src":"20595:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9108,"src":"20639:10:44","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9105,"src":"20653:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":9121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":9117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20631:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9123,"nodeType":"ExpressionStatement","src":"20631:71:44"}]},"documentation":{"id":9103,"nodeType":"StructuredDocumentation","src":"20156:350:44","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":9125,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:44","nodeType":"FunctionDefinition","parameters":{"id":9106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9105,"mutability":"mutable","name":"value","nameLocation":"20536:5:44","nodeType":"VariableDeclaration","scope":9125,"src":"20529:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9104,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:44"},"returnParameters":{"id":9109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9108,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:44","nodeType":"VariableDeclaration","scope":9125,"src":"20566:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":9107,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:44","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:44"},"scope":9729,"src":"20511:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9147,"nodeType":"Block","src":"21144:124:44","statements":[{"expression":{"id":9138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"21154:10:44","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9128,"src":"21174:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":9134,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:44","typeDescriptions":{}}},"id":9137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21167:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:44","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":9139,"nodeType":"ExpressionStatement","src":"21154:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"21198:10:44","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9128,"src":"21212:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":9144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":9140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21190:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9146,"nodeType":"ExpressionStatement","src":"21190:71:44"}]},"documentation":{"id":9126,"nodeType":"StructuredDocumentation","src":"20715:350:44","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":9148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:44","nodeType":"FunctionDefinition","parameters":{"id":9129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9128,"mutability":"mutable","name":"value","nameLocation":"21095:5:44","nodeType":"VariableDeclaration","scope":9148,"src":"21088:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9127,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:44"},"returnParameters":{"id":9132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9131,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:44","nodeType":"VariableDeclaration","scope":9148,"src":"21125:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":9130,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:44","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:44"},"scope":9729,"src":"21070:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9170,"nodeType":"Block","src":"21703:124:44","statements":[{"expression":{"id":9161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9154,"src":"21713:10:44","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"21733:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":9157,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:44","typeDescriptions":{}}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:44","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":9162,"nodeType":"ExpressionStatement","src":"21713:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9154,"src":"21757:10:44","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"21771:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":9167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":9163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21749:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9169,"nodeType":"ExpressionStatement","src":"21749:71:44"}]},"documentation":{"id":9149,"nodeType":"StructuredDocumentation","src":"21274:350:44","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":9171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:44","nodeType":"FunctionDefinition","parameters":{"id":9152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9151,"mutability":"mutable","name":"value","nameLocation":"21654:5:44","nodeType":"VariableDeclaration","scope":9171,"src":"21647:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9150,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:44"},"returnParameters":{"id":9155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9154,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:44","nodeType":"VariableDeclaration","scope":9171,"src":"21684:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":9153,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:44","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:44"},"scope":9729,"src":"21629:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9193,"nodeType":"Block","src":"22262:124:44","statements":[{"expression":{"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"22272:10:44","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9174,"src":"22292:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":9180,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:44","typeDescriptions":{}}},"id":9183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22285:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:44","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":9185,"nodeType":"ExpressionStatement","src":"22272:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"22316:10:44","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9174,"src":"22330:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":9190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":9186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9192,"nodeType":"ExpressionStatement","src":"22308:71:44"}]},"documentation":{"id":9172,"nodeType":"StructuredDocumentation","src":"21833:350:44","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":9194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:44","nodeType":"FunctionDefinition","parameters":{"id":9175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9174,"mutability":"mutable","name":"value","nameLocation":"22213:5:44","nodeType":"VariableDeclaration","scope":9194,"src":"22206:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9173,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:44"},"returnParameters":{"id":9178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9177,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:44","nodeType":"VariableDeclaration","scope":9194,"src":"22243:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":9176,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:44","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:44"},"scope":9729,"src":"22188:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9216,"nodeType":"Block","src":"22821:124:44","statements":[{"expression":{"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9200,"src":"22831:10:44","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"22851:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":9203,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:44","typeDescriptions":{}}},"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22844:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:44","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":9208,"nodeType":"ExpressionStatement","src":"22831:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9200,"src":"22875:10:44","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"22889:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":9213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":9209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22867:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9215,"nodeType":"ExpressionStatement","src":"22867:71:44"}]},"documentation":{"id":9195,"nodeType":"StructuredDocumentation","src":"22392:350:44","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":9217,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:44","nodeType":"FunctionDefinition","parameters":{"id":9198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9197,"mutability":"mutable","name":"value","nameLocation":"22772:5:44","nodeType":"VariableDeclaration","scope":9217,"src":"22765:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9196,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:44"},"returnParameters":{"id":9201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9200,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:44","nodeType":"VariableDeclaration","scope":9217,"src":"22802:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":9199,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:44","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:44"},"scope":9729,"src":"22747:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9239,"nodeType":"Block","src":"23380:124:44","statements":[{"expression":{"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"23390:10:44","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"23410:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":9226,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:44","typeDescriptions":{}}},"id":9229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23403:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:44","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":9231,"nodeType":"ExpressionStatement","src":"23390:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"23434:10:44","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"23448:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":9236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":9232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23426:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9238,"nodeType":"ExpressionStatement","src":"23426:71:44"}]},"documentation":{"id":9218,"nodeType":"StructuredDocumentation","src":"22951:350:44","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":9240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:44","nodeType":"FunctionDefinition","parameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"mutability":"mutable","name":"value","nameLocation":"23331:5:44","nodeType":"VariableDeclaration","scope":9240,"src":"23324:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9219,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:44"},"returnParameters":{"id":9224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9223,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:44","nodeType":"VariableDeclaration","scope":9240,"src":"23361:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":9222,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:44","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:44"},"scope":9729,"src":"23306:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9262,"nodeType":"Block","src":"23939:124:44","statements":[{"expression":{"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9246,"src":"23949:10:44","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"23969:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":9249,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:44","typeDescriptions":{}}},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23962:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:44","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":9254,"nodeType":"ExpressionStatement","src":"23949:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9246,"src":"23993:10:44","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"24007:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":9259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":9255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23985:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9261,"nodeType":"ExpressionStatement","src":"23985:71:44"}]},"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"23510:350:44","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":9263,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:44","nodeType":"FunctionDefinition","parameters":{"id":9244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"value","nameLocation":"23890:5:44","nodeType":"VariableDeclaration","scope":9263,"src":"23883:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9242,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:44"},"returnParameters":{"id":9247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9246,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:44","nodeType":"VariableDeclaration","scope":9263,"src":"23920:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":9245,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:44","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:44"},"scope":9729,"src":"23865:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9285,"nodeType":"Block","src":"24498:124:44","statements":[{"expression":{"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9269,"src":"24508:10:44","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9266,"src":"24528:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":9272,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:44","typeDescriptions":{}}},"id":9275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24521:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:44","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":9277,"nodeType":"ExpressionStatement","src":"24508:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9269,"src":"24552:10:44","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9266,"src":"24566:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":9282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":9278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24544:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9284,"nodeType":"ExpressionStatement","src":"24544:71:44"}]},"documentation":{"id":9264,"nodeType":"StructuredDocumentation","src":"24069:350:44","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":9286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:44","nodeType":"FunctionDefinition","parameters":{"id":9267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9266,"mutability":"mutable","name":"value","nameLocation":"24449:5:44","nodeType":"VariableDeclaration","scope":9286,"src":"24442:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9265,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:44"},"returnParameters":{"id":9270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9269,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:44","nodeType":"VariableDeclaration","scope":9286,"src":"24479:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":9268,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:44","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:44"},"scope":9729,"src":"24424:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9308,"nodeType":"Block","src":"25057:124:44","statements":[{"expression":{"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9292,"src":"25067:10:44","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"25087:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":9295,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:44","typeDescriptions":{}}},"id":9298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25080:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:44","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":9300,"nodeType":"ExpressionStatement","src":"25067:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9292,"src":"25111:10:44","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"25125:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":9305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":9301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25103:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9307,"nodeType":"ExpressionStatement","src":"25103:71:44"}]},"documentation":{"id":9287,"nodeType":"StructuredDocumentation","src":"24628:350:44","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":9309,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:44","nodeType":"FunctionDefinition","parameters":{"id":9290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9289,"mutability":"mutable","name":"value","nameLocation":"25008:5:44","nodeType":"VariableDeclaration","scope":9309,"src":"25001:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9288,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:44"},"returnParameters":{"id":9293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9292,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:44","nodeType":"VariableDeclaration","scope":9309,"src":"25038:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":9291,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:44","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:44"},"scope":9729,"src":"24983:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9331,"nodeType":"Block","src":"25616:124:44","statements":[{"expression":{"id":9322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"25626:10:44","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"25646:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":9318,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:44","typeDescriptions":{}}},"id":9321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25639:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:44","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":9323,"nodeType":"ExpressionStatement","src":"25626:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9315,"src":"25670:10:44","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"25684:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":9328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":9324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25662:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9330,"nodeType":"ExpressionStatement","src":"25662:71:44"}]},"documentation":{"id":9310,"nodeType":"StructuredDocumentation","src":"25187:350:44","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":9332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:44","nodeType":"FunctionDefinition","parameters":{"id":9313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9312,"mutability":"mutable","name":"value","nameLocation":"25567:5:44","nodeType":"VariableDeclaration","scope":9332,"src":"25560:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9311,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:44"},"returnParameters":{"id":9316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9315,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:44","nodeType":"VariableDeclaration","scope":9332,"src":"25597:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":9314,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:44","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:44"},"scope":9729,"src":"25542:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9354,"nodeType":"Block","src":"26175:124:44","statements":[{"expression":{"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"26185:10:44","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9335,"src":"26205:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9341,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:44","typeDescriptions":{}}},"id":9344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26198:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:44","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9346,"nodeType":"ExpressionStatement","src":"26185:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"26229:10:44","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9335,"src":"26243:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":9351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":9347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26221:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9353,"nodeType":"ExpressionStatement","src":"26221:71:44"}]},"documentation":{"id":9333,"nodeType":"StructuredDocumentation","src":"25746:350:44","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":9355,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:44","nodeType":"FunctionDefinition","parameters":{"id":9336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9335,"mutability":"mutable","name":"value","nameLocation":"26126:5:44","nodeType":"VariableDeclaration","scope":9355,"src":"26119:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9334,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:44"},"returnParameters":{"id":9339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9338,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:44","nodeType":"VariableDeclaration","scope":9355,"src":"26156:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9337,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:44","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:44"},"scope":9729,"src":"26101:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9377,"nodeType":"Block","src":"26734:124:44","statements":[{"expression":{"id":9368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"26744:10:44","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9358,"src":"26764:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9364,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:44","typeDescriptions":{}}},"id":9367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26757:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:44","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9369,"nodeType":"ExpressionStatement","src":"26744:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"26788:10:44","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9358,"src":"26802:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":9374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":9370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26780:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9376,"nodeType":"ExpressionStatement","src":"26780:71:44"}]},"documentation":{"id":9356,"nodeType":"StructuredDocumentation","src":"26305:350:44","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":9378,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:44","nodeType":"FunctionDefinition","parameters":{"id":9359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9358,"mutability":"mutable","name":"value","nameLocation":"26685:5:44","nodeType":"VariableDeclaration","scope":9378,"src":"26678:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9357,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:44"},"returnParameters":{"id":9362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9361,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:44","nodeType":"VariableDeclaration","scope":9378,"src":"26715:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":9360,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:44","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:44"},"scope":9729,"src":"26660:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9400,"nodeType":"Block","src":"27293:124:44","statements":[{"expression":{"id":9391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9386,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9384,"src":"27303:10:44","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"27323:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9387,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:44","typeDescriptions":{}}},"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27316:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:44","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9392,"nodeType":"ExpressionStatement","src":"27303:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9384,"src":"27347:10:44","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"27361:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":9397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":9393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27339:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9399,"nodeType":"ExpressionStatement","src":"27339:71:44"}]},"documentation":{"id":9379,"nodeType":"StructuredDocumentation","src":"26864:350:44","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":9401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:44","nodeType":"FunctionDefinition","parameters":{"id":9382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9381,"mutability":"mutable","name":"value","nameLocation":"27244:5:44","nodeType":"VariableDeclaration","scope":9401,"src":"27237:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9380,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:44"},"returnParameters":{"id":9385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9384,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:44","nodeType":"VariableDeclaration","scope":9401,"src":"27274:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9383,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:44","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:44"},"scope":9729,"src":"27219:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9423,"nodeType":"Block","src":"27852:124:44","statements":[{"expression":{"id":9414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9407,"src":"27862:10:44","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"27882:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9410,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:44","typeDescriptions":{}}},"id":9413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27875:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:44","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9415,"nodeType":"ExpressionStatement","src":"27862:26:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9407,"src":"27906:10:44","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"27920:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":9420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":9416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27898:71:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9422,"nodeType":"ExpressionStatement","src":"27898:71:44"}]},"documentation":{"id":9402,"nodeType":"StructuredDocumentation","src":"27423:350:44","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":9424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:44","nodeType":"FunctionDefinition","parameters":{"id":9405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9404,"mutability":"mutable","name":"value","nameLocation":"27803:5:44","nodeType":"VariableDeclaration","scope":9424,"src":"27796:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9403,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:44"},"returnParameters":{"id":9408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9407,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:44","nodeType":"VariableDeclaration","scope":9424,"src":"27833:17:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9406,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:44","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:44"},"scope":9729,"src":"27778:198:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9446,"nodeType":"Block","src":"28404:122:44","statements":[{"expression":{"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"28414:10:44","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"28433:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9433,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:44","typeDescriptions":{}}},"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:44","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9438,"nodeType":"ExpressionStatement","src":"28414:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"28457:10:44","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"28471:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":9443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":9439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28449:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9445,"nodeType":"ExpressionStatement","src":"28449:70:44"}]},"documentation":{"id":9425,"nodeType":"StructuredDocumentation","src":"27982:345:44","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":9447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:44","nodeType":"FunctionDefinition","parameters":{"id":9428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9427,"mutability":"mutable","name":"value","nameLocation":"28356:5:44","nodeType":"VariableDeclaration","scope":9447,"src":"28349:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9426,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:44"},"returnParameters":{"id":9431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9430,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:44","nodeType":"VariableDeclaration","scope":9447,"src":"28386:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9429,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:44","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:44"},"scope":9729,"src":"28332:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9469,"nodeType":"Block","src":"28954:122:44","statements":[{"expression":{"id":9460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9453,"src":"28964:10:44","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9450,"src":"28983:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9456,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:44","typeDescriptions":{}}},"id":9459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28977:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:44","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9461,"nodeType":"ExpressionStatement","src":"28964:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9453,"src":"29007:10:44","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9450,"src":"29021:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":9466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":9462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28999:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9468,"nodeType":"ExpressionStatement","src":"28999:70:44"}]},"documentation":{"id":9448,"nodeType":"StructuredDocumentation","src":"28532:345:44","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":9470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:44","nodeType":"FunctionDefinition","parameters":{"id":9451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9450,"mutability":"mutable","name":"value","nameLocation":"28906:5:44","nodeType":"VariableDeclaration","scope":9470,"src":"28899:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9449,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:44"},"returnParameters":{"id":9454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9453,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:44","nodeType":"VariableDeclaration","scope":9470,"src":"28936:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9452,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:44","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:44"},"scope":9729,"src":"28882:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9492,"nodeType":"Block","src":"29504:122:44","statements":[{"expression":{"id":9483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9476,"src":"29514:10:44","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"29533:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9479,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:44","typeDescriptions":{}}},"id":9482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29527:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:44","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9484,"nodeType":"ExpressionStatement","src":"29514:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9476,"src":"29557:10:44","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"29571:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":9489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":9485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29549:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9491,"nodeType":"ExpressionStatement","src":"29549:70:44"}]},"documentation":{"id":9471,"nodeType":"StructuredDocumentation","src":"29082:345:44","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":9493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:44","nodeType":"FunctionDefinition","parameters":{"id":9474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9473,"mutability":"mutable","name":"value","nameLocation":"29456:5:44","nodeType":"VariableDeclaration","scope":9493,"src":"29449:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9472,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:44"},"returnParameters":{"id":9477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9476,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:44","nodeType":"VariableDeclaration","scope":9493,"src":"29486:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9475,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:44","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:44"},"scope":9729,"src":"29432:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9515,"nodeType":"Block","src":"30054:122:44","statements":[{"expression":{"id":9506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9499,"src":"30064:10:44","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9496,"src":"30083:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9502,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:44","typeDescriptions":{}}},"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30077:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:44","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9507,"nodeType":"ExpressionStatement","src":"30064:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9499,"src":"30107:10:44","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9496,"src":"30121:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":9512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":9508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30099:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9514,"nodeType":"ExpressionStatement","src":"30099:70:44"}]},"documentation":{"id":9494,"nodeType":"StructuredDocumentation","src":"29632:345:44","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":9516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:44","nodeType":"FunctionDefinition","parameters":{"id":9497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9496,"mutability":"mutable","name":"value","nameLocation":"30006:5:44","nodeType":"VariableDeclaration","scope":9516,"src":"29999:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9495,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:44"},"returnParameters":{"id":9500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9499,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:44","nodeType":"VariableDeclaration","scope":9516,"src":"30036:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9498,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:44","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:44"},"scope":9729,"src":"29982:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9538,"nodeType":"Block","src":"30604:122:44","statements":[{"expression":{"id":9529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"30614:10:44","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"30633:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9525,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:44","typeDescriptions":{}}},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30627:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:44","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9530,"nodeType":"ExpressionStatement","src":"30614:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"30657:10:44","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"30671:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":9535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":9531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30649:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9537,"nodeType":"ExpressionStatement","src":"30649:70:44"}]},"documentation":{"id":9517,"nodeType":"StructuredDocumentation","src":"30182:345:44","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":9539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:44","nodeType":"FunctionDefinition","parameters":{"id":9520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9519,"mutability":"mutable","name":"value","nameLocation":"30556:5:44","nodeType":"VariableDeclaration","scope":9539,"src":"30549:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9518,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:44"},"returnParameters":{"id":9523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9522,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:44","nodeType":"VariableDeclaration","scope":9539,"src":"30586:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9521,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:44","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:44"},"scope":9729,"src":"30532:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9561,"nodeType":"Block","src":"31154:122:44","statements":[{"expression":{"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"31164:10:44","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"31183:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9548,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:44","typeDescriptions":{}}},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31177:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:44","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9553,"nodeType":"ExpressionStatement","src":"31164:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"31207:10:44","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"31221:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":9558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":9554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31199:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9560,"nodeType":"ExpressionStatement","src":"31199:70:44"}]},"documentation":{"id":9540,"nodeType":"StructuredDocumentation","src":"30732:345:44","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":9562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:44","nodeType":"FunctionDefinition","parameters":{"id":9543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9542,"mutability":"mutable","name":"value","nameLocation":"31106:5:44","nodeType":"VariableDeclaration","scope":9562,"src":"31099:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9541,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:44"},"returnParameters":{"id":9546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9545,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:44","nodeType":"VariableDeclaration","scope":9562,"src":"31136:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9544,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:44","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:44"},"scope":9729,"src":"31082:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9584,"nodeType":"Block","src":"31704:122:44","statements":[{"expression":{"id":9575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"31714:10:44","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9565,"src":"31733:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9571,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:44","typeDescriptions":{}}},"id":9574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31727:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:44","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9576,"nodeType":"ExpressionStatement","src":"31714:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9578,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"31757:10:44","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9565,"src":"31771:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":9581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":9577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31749:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9583,"nodeType":"ExpressionStatement","src":"31749:70:44"}]},"documentation":{"id":9563,"nodeType":"StructuredDocumentation","src":"31282:345:44","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":9585,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:44","nodeType":"FunctionDefinition","parameters":{"id":9566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9565,"mutability":"mutable","name":"value","nameLocation":"31656:5:44","nodeType":"VariableDeclaration","scope":9585,"src":"31649:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9564,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:44"},"returnParameters":{"id":9569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9568,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:44","nodeType":"VariableDeclaration","scope":9585,"src":"31686:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9567,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:44","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:44"},"scope":9729,"src":"31632:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9607,"nodeType":"Block","src":"32254:122:44","statements":[{"expression":{"id":9598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9591,"src":"32264:10:44","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"32283:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9594,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:44","typeDescriptions":{}}},"id":9597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32277:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:44","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9599,"nodeType":"ExpressionStatement","src":"32264:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9591,"src":"32307:10:44","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"32321:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":9604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":9600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32299:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9606,"nodeType":"ExpressionStatement","src":"32299:70:44"}]},"documentation":{"id":9586,"nodeType":"StructuredDocumentation","src":"31832:345:44","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":9608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:44","nodeType":"FunctionDefinition","parameters":{"id":9589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9588,"mutability":"mutable","name":"value","nameLocation":"32206:5:44","nodeType":"VariableDeclaration","scope":9608,"src":"32199:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9587,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:44"},"returnParameters":{"id":9592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9591,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:44","nodeType":"VariableDeclaration","scope":9608,"src":"32236:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9590,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:44","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:44"},"scope":9729,"src":"32182:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9630,"nodeType":"Block","src":"32804:122:44","statements":[{"expression":{"id":9621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"32814:10:44","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9611,"src":"32833:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9617,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:44","typeDescriptions":{}}},"id":9620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32827:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:44","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9622,"nodeType":"ExpressionStatement","src":"32814:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"32857:10:44","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9611,"src":"32871:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":9627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":9623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32849:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9629,"nodeType":"ExpressionStatement","src":"32849:70:44"}]},"documentation":{"id":9609,"nodeType":"StructuredDocumentation","src":"32382:345:44","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":9631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:44","nodeType":"FunctionDefinition","parameters":{"id":9612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9611,"mutability":"mutable","name":"value","nameLocation":"32756:5:44","nodeType":"VariableDeclaration","scope":9631,"src":"32749:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9610,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:44"},"returnParameters":{"id":9615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9614,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:44","nodeType":"VariableDeclaration","scope":9631,"src":"32786:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9613,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:44","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:44"},"scope":9729,"src":"32732:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9653,"nodeType":"Block","src":"33354:122:44","statements":[{"expression":{"id":9644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"33364:10:44","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9634,"src":"33383:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9640,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:44","typeDescriptions":{}}},"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33377:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:44","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9645,"nodeType":"ExpressionStatement","src":"33364:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"33407:10:44","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9634,"src":"33421:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":9650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":9646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33399:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9652,"nodeType":"ExpressionStatement","src":"33399:70:44"}]},"documentation":{"id":9632,"nodeType":"StructuredDocumentation","src":"32932:345:44","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":9654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:44","nodeType":"FunctionDefinition","parameters":{"id":9635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9634,"mutability":"mutable","name":"value","nameLocation":"33306:5:44","nodeType":"VariableDeclaration","scope":9654,"src":"33299:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9633,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:44"},"returnParameters":{"id":9638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9637,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:44","nodeType":"VariableDeclaration","scope":9654,"src":"33336:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9636,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:44","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:44"},"scope":9729,"src":"33282:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9676,"nodeType":"Block","src":"33904:122:44","statements":[{"expression":{"id":9667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9660,"src":"33914:10:44","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9657,"src":"33933:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9663,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:44","typeDescriptions":{}}},"id":9666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33927:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:44","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9668,"nodeType":"ExpressionStatement","src":"33914:25:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9660,"src":"33957:10:44","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9657,"src":"33971:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":9673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":9669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33949:70:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9675,"nodeType":"ExpressionStatement","src":"33949:70:44"}]},"documentation":{"id":9655,"nodeType":"StructuredDocumentation","src":"33482:345:44","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":9677,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:44","nodeType":"FunctionDefinition","parameters":{"id":9658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9657,"mutability":"mutable","name":"value","nameLocation":"33856:5:44","nodeType":"VariableDeclaration","scope":9677,"src":"33849:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9656,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:44"},"returnParameters":{"id":9661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9660,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:44","nodeType":"VariableDeclaration","scope":9677,"src":"33886:16:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9659,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:44","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:44"},"scope":9729,"src":"33832:194:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9699,"nodeType":"Block","src":"34447:120:44","statements":[{"expression":{"id":9690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9683,"src":"34457:10:44","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"34475:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9686,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:44","typeDescriptions":{}}},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34470:11:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:44","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9691,"nodeType":"ExpressionStatement","src":"34457:24:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9693,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9683,"src":"34499:10:44","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"34513:5:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":9696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":9692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34491:69:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9698,"nodeType":"ExpressionStatement","src":"34491:69:44"}]},"documentation":{"id":9678,"nodeType":"StructuredDocumentation","src":"34032:340:44","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":9700,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:44","nodeType":"FunctionDefinition","parameters":{"id":9681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9680,"mutability":"mutable","name":"value","nameLocation":"34400:5:44","nodeType":"VariableDeclaration","scope":9700,"src":"34393:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9679,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:44"},"returnParameters":{"id":9684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9683,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:44","nodeType":"VariableDeclaration","scope":9700,"src":"34430:15:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9682,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:44","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:44"},"scope":9729,"src":"34377:190:44","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9727,"nodeType":"Block","src":"34845:233:44","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9703,"src":"34962:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9713,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:44","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:44","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34979:12:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34979:16:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9710,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:44","typeDescriptions":{}}},"id":9717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34971:25:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":9719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:44","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":9708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:44","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34954:87:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9721,"nodeType":"ExpressionStatement","src":"34954:87:44"},{"expression":{"arguments":[{"id":9724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9703,"src":"35065:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9722,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:44","typeDescriptions":{}}},"id":9725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35058:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9707,"id":9726,"nodeType":"Return","src":"35051:20:44"}]},"documentation":{"id":9701,"nodeType":"StructuredDocumentation","src":"34573:203:44","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":9728,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:44","nodeType":"FunctionDefinition","parameters":{"id":9704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9703,"mutability":"mutable","name":"value","nameLocation":"34807:5:44","nodeType":"VariableDeclaration","scope":9728,"src":"34799:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9702,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:44"},"returnParameters":{"id":9707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9728,"src":"34837:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9705,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:44","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:44"},"scope":9729,"src":"34781:297:44","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9730,"src":"927:34153:44","usedErrors":[]}],"src":"192:34889:44"},"id":44},"contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[9834]},"id":9835,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9731,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:45"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9732,"nodeType":"StructuredDocumentation","src":"134:80:45","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9834,"linearizedBaseContracts":[9834],"name":"SignedMath","nameLocation":"223:10:45","nodeType":"ContractDefinition","nodes":[{"body":{"id":9749,"nodeType":"Block","src":"375:37:45","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9735,"src":"392:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9737,"src":"396:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9746,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9737,"src":"404:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:45","trueExpression":{"id":9745,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9735,"src":"400:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9741,"id":9748,"nodeType":"Return","src":"385:20:45"}]},"documentation":{"id":9733,"nodeType":"StructuredDocumentation","src":"240:66:45","text":" @dev Returns the largest of two signed numbers."},"id":9750,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:45","nodeType":"FunctionDefinition","parameters":{"id":9738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9735,"mutability":"mutable","name":"a","nameLocation":"331:1:45","nodeType":"VariableDeclaration","scope":9750,"src":"324:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9734,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9737,"mutability":"mutable","name":"b","nameLocation":"341:1:45","nodeType":"VariableDeclaration","scope":9750,"src":"334:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9736,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:45"},"returnParameters":{"id":9741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9750,"src":"367:6:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9739,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:45"},"scope":9834,"src":"311:101:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9767,"nodeType":"Block","src":"554:37:45","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"571:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9755,"src":"575:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9764,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9755,"src":"583:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:45","trueExpression":{"id":9763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"579:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9759,"id":9766,"nodeType":"Return","src":"564:20:45"}]},"documentation":{"id":9751,"nodeType":"StructuredDocumentation","src":"418:67:45","text":" @dev Returns the smallest of two signed numbers."},"id":9768,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:45","nodeType":"FunctionDefinition","parameters":{"id":9756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9753,"mutability":"mutable","name":"a","nameLocation":"510:1:45","nodeType":"VariableDeclaration","scope":9768,"src":"503:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9752,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9755,"mutability":"mutable","name":"b","nameLocation":"520:1:45","nodeType":"VariableDeclaration","scope":9768,"src":"513:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9754,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:45"},"returnParameters":{"id":9759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9768,"src":"546:6:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9757,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:45"},"scope":9834,"src":"490:101:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9811,"nodeType":"Block","src":"796:162:45","statements":[{"assignments":[9779],"declarations":[{"constant":false,"id":9779,"mutability":"mutable","name":"x","nameLocation":"865:1:45","nodeType":"VariableDeclaration","scope":9811,"src":"858:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9778,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9792,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9771,"src":"870:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9773,"src":"874:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9771,"src":"881:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9785,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9773,"src":"885:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:45"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9793,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"910:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9798,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"930:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:45","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9796,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:45","typeDescriptions":{}}},"id":9799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:45","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:45","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9794,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:45","typeDescriptions":{}}},"id":9802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9803,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9771,"src":"944:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9804,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9773,"src":"948:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9777,"id":9810,"nodeType":"Return","src":"903:48:45"}]},"documentation":{"id":9769,"nodeType":"StructuredDocumentation","src":"597:126:45","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9812,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:45","nodeType":"FunctionDefinition","parameters":{"id":9774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9771,"mutability":"mutable","name":"a","nameLocation":"752:1:45","nodeType":"VariableDeclaration","scope":9812,"src":"745:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9770,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9773,"mutability":"mutable","name":"b","nameLocation":"762:1:45","nodeType":"VariableDeclaration","scope":9812,"src":"755:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9772,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:45"},"returnParameters":{"id":9777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9812,"src":"788:6:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9775,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:45"},"scope":9834,"src":"728:230:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9832,"nodeType":"Block","src":"1102:158:45","statements":[{"id":9831,"nodeType":"UncheckedBlock","src":"1112:142:45","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9822,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"1227:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":9823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:45","subExpression":{"id":9826,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"1241:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:45","trueExpression":{"id":9825,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"1236:1:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:45","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:45","typeDescriptions":{}}},"id":9829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9819,"id":9830,"nodeType":"Return","src":"1212:31:45"}]}]},"documentation":{"id":9813,"nodeType":"StructuredDocumentation","src":"964:78:45","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9833,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:45","nodeType":"FunctionDefinition","parameters":{"id":9816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9815,"mutability":"mutable","name":"n","nameLocation":"1067:1:45","nodeType":"VariableDeclaration","scope":9833,"src":"1060:8:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9814,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:45","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:45"},"returnParameters":{"id":9819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9833,"src":"1093:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:45"},"scope":9834,"src":"1047:213:45","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9835,"src":"215:1047:45","usedErrors":[]}],"src":"109:1154:45"},"id":45},"contracts/utils/structs/BitMaps.sol":{"ast":{"absolutePath":"contracts/utils/structs/BitMaps.sol","exportedSymbols":{"BitMaps":[9972]},"id":9973,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9836,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:46"},{"abstract":false,"baseContracts":[],"canonicalName":"BitMaps","contractDependencies":[],"contractKind":"library","documentation":{"id":9837,"nodeType":"StructuredDocumentation","src":"133:271:46","text":" @dev Library for managing uint256 to bool mapping in a compact and efficient way, providing the keys are sequential.\n Largely inspired by Uniswap's https://github.com/Uniswap/merkle-distributor/blob/master/contracts/MerkleDistributor.sol[merkle-distributor]."},"fullyImplemented":true,"id":9972,"linearizedBaseContracts":[9972],"name":"BitMaps","nameLocation":"413:7:46","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BitMaps.BitMap","id":9842,"members":[{"constant":false,"id":9841,"mutability":"mutable","name":"_data","nameLocation":"479:5:46","nodeType":"VariableDeclaration","scope":9842,"src":"451:33:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9840,"keyType":{"id":9838,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"451:27:46","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":9839,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"BitMap","nameLocation":"434:6:46","nodeType":"StructDefinition","scope":9972,"src":"427:64:46","visibility":"public"},{"body":{"id":9877,"nodeType":"Block","src":"648:137:46","statements":[{"assignments":[9854],"declarations":[{"constant":false,"id":9854,"mutability":"mutable","name":"bucket","nameLocation":"666:6:46","nodeType":"VariableDeclaration","scope":9877,"src":"658:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9853,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9858,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9855,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"675:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":9856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:1:46","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"675:10:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"658:27:46"},{"assignments":[9860],"declarations":[{"constant":false,"id":9860,"mutability":"mutable","name":"mask","nameLocation":"703:4:46","nodeType":"VariableDeclaration","scope":9877,"src":"695:12:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9859,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9867,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"710:1:46","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9862,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"716:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30786666","id":9863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"724:4:46","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"716:12:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"715:14:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"710:19:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:34:46"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":9868,"name":"bitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9846,"src":"746:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap storage pointer"}},"id":9869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":9841,"src":"746:12:46","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9871,"indexExpression":{"id":9870,"name":"bucket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"759:6:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"746:20:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9872,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"769:4:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:27:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:1:46","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"746:32:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9852,"id":9876,"nodeType":"Return","src":"739:39:46"}]},"documentation":{"id":9843,"nodeType":"StructuredDocumentation","src":"497:66:46","text":" @dev Returns whether the bit at `index` is set."},"id":9878,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"577:3:46","nodeType":"FunctionDefinition","parameters":{"id":9849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9846,"mutability":"mutable","name":"bitmap","nameLocation":"596:6:46","nodeType":"VariableDeclaration","scope":9878,"src":"581:21:46","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"},"typeName":{"id":9845,"nodeType":"UserDefinedTypeName","pathNode":{"id":9844,"name":"BitMap","nodeType":"IdentifierPath","referencedDeclaration":9842,"src":"581:6:46"},"referencedDeclaration":9842,"src":"581:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"}},"visibility":"internal"},{"constant":false,"id":9848,"mutability":"mutable","name":"index","nameLocation":"612:5:46","nodeType":"VariableDeclaration","scope":9878,"src":"604:13:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9847,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:38:46"},"returnParameters":{"id":9852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9878,"src":"642:4:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9850,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"641:6:46"},"scope":9972,"src":"568:217:46","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9903,"nodeType":"Block","src":"941:121:46","statements":[{"condition":{"id":9889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"955:5:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9901,"nodeType":"Block","src":"1011:45:46","statements":[{"expression":{"arguments":[{"id":9897,"name":"bitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"1031:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap storage pointer"}},{"id":9898,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"1039:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9896,"name":"unset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9971,"src":"1025:5:46","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_BitMap_$9842_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BitMaps.BitMap storage pointer,uint256)"}},"id":9899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1025:20:46","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9900,"nodeType":"ExpressionStatement","src":"1025:20:46"}]},"id":9902,"nodeType":"IfStatement","src":"951:105:46","trueBody":{"id":9895,"nodeType":"Block","src":"962:43:46","statements":[{"expression":{"arguments":[{"id":9891,"name":"bitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9882,"src":"980:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap storage pointer"}},{"id":9892,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"988:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9890,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9937,"src":"976:3:46","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_BitMap_$9842_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct BitMaps.BitMap storage pointer,uint256)"}},"id":9893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"976:18:46","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9894,"nodeType":"ExpressionStatement","src":"976:18:46"}]}}]},"documentation":{"id":9879,"nodeType":"StructuredDocumentation","src":"791:71:46","text":" @dev Sets the bit at `index` to the boolean `value`."},"id":9904,"implemented":true,"kind":"function","modifiers":[],"name":"setTo","nameLocation":"876:5:46","nodeType":"FunctionDefinition","parameters":{"id":9887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9882,"mutability":"mutable","name":"bitmap","nameLocation":"897:6:46","nodeType":"VariableDeclaration","scope":9904,"src":"882:21:46","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"},"typeName":{"id":9881,"nodeType":"UserDefinedTypeName","pathNode":{"id":9880,"name":"BitMap","nodeType":"IdentifierPath","referencedDeclaration":9842,"src":"882:6:46"},"referencedDeclaration":9842,"src":"882:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"}},"visibility":"internal"},{"constant":false,"id":9884,"mutability":"mutable","name":"index","nameLocation":"913:5:46","nodeType":"VariableDeclaration","scope":9904,"src":"905:13:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9886,"mutability":"mutable","name":"value","nameLocation":"925:5:46","nodeType":"VariableDeclaration","scope":9904,"src":"920:10:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9885,"name":"bool","nodeType":"ElementaryTypeName","src":"920:4:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"881:50:46"},"returnParameters":{"id":9888,"nodeType":"ParameterList","parameters":[],"src":"941:0:46"},"scope":9972,"src":"867:195:46","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9936,"nodeType":"Block","src":"1181:126:46","statements":[{"assignments":[9914],"declarations":[{"constant":false,"id":9914,"mutability":"mutable","name":"bucket","nameLocation":"1199:6:46","nodeType":"VariableDeclaration","scope":9936,"src":"1191:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9918,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9915,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"1208:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":9916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1217:1:46","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1208:10:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1191:27:46"},{"assignments":[9920],"declarations":[{"constant":false,"id":9920,"mutability":"mutable","name":"mask","nameLocation":"1236:4:46","nodeType":"VariableDeclaration","scope":9936,"src":"1228:12:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9927,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:46","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9922,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"1249:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30786666","id":9923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1257:4:46","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"1249:12:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1248:14:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1243:19:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1228:34:46"},{"expression":{"id":9934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9928,"name":"bitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9908,"src":"1272:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap storage pointer"}},"id":9931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":9841,"src":"1272:12:46","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9932,"indexExpression":{"id":9930,"name":"bucket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9914,"src":"1285:6:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1272:20:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":9933,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9920,"src":"1296:4:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1272:28:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9935,"nodeType":"ExpressionStatement","src":"1272:28:46"}]},"documentation":{"id":9905,"nodeType":"StructuredDocumentation","src":"1068:48:46","text":" @dev Sets the bit at `index`."},"id":9937,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"1130:3:46","nodeType":"FunctionDefinition","parameters":{"id":9911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9908,"mutability":"mutable","name":"bitmap","nameLocation":"1149:6:46","nodeType":"VariableDeclaration","scope":9937,"src":"1134:21:46","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"},"typeName":{"id":9907,"nodeType":"UserDefinedTypeName","pathNode":{"id":9906,"name":"BitMap","nodeType":"IdentifierPath","referencedDeclaration":9842,"src":"1134:6:46"},"referencedDeclaration":9842,"src":"1134:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"}},"visibility":"internal"},{"constant":false,"id":9910,"mutability":"mutable","name":"index","nameLocation":"1165:5:46","nodeType":"VariableDeclaration","scope":9937,"src":"1157:13:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:38:46"},"returnParameters":{"id":9912,"nodeType":"ParameterList","parameters":[],"src":"1181:0:46"},"scope":9972,"src":"1121:186:46","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9970,"nodeType":"Block","src":"1430:127:46","statements":[{"assignments":[9947],"declarations":[{"constant":false,"id":9947,"mutability":"mutable","name":"bucket","nameLocation":"1448:6:46","nodeType":"VariableDeclaration","scope":9970,"src":"1440:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1440:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9951,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9948,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9943,"src":"1457:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":9949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1466:1:46","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1457:10:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1440:27:46"},{"assignments":[9953],"declarations":[{"constant":false,"id":9953,"mutability":"mutable","name":"mask","nameLocation":"1485:4:46","nodeType":"VariableDeclaration","scope":9970,"src":"1477:12:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1477:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9960,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1492:1:46","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9955,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9943,"src":"1498:5:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30786666","id":9956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1506:4:46","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"1498:12:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1497:14:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1492:19:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1477:34:46"},{"expression":{"id":9968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":9961,"name":"bitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9941,"src":"1521:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap storage pointer"}},"id":9964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":9841,"src":"1521:12:46","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9965,"indexExpression":{"id":9963,"name":"bucket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"1534:6:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1521:20:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"id":9967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"1545:5:46","subExpression":{"id":9966,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9953,"src":"1546:4:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1521:29:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9969,"nodeType":"ExpressionStatement","src":"1521:29:46"}]},"documentation":{"id":9938,"nodeType":"StructuredDocumentation","src":"1313:50:46","text":" @dev Unsets the bit at `index`."},"id":9971,"implemented":true,"kind":"function","modifiers":[],"name":"unset","nameLocation":"1377:5:46","nodeType":"FunctionDefinition","parameters":{"id":9944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9941,"mutability":"mutable","name":"bitmap","nameLocation":"1398:6:46","nodeType":"VariableDeclaration","scope":9971,"src":"1383:21:46","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"},"typeName":{"id":9940,"nodeType":"UserDefinedTypeName","pathNode":{"id":9939,"name":"BitMap","nodeType":"IdentifierPath","referencedDeclaration":9842,"src":"1383:6:46"},"referencedDeclaration":9842,"src":"1383:6:46","typeDescriptions":{"typeIdentifier":"t_struct$_BitMap_$9842_storage_ptr","typeString":"struct BitMaps.BitMap"}},"visibility":"internal"},{"constant":false,"id":9943,"mutability":"mutable","name":"index","nameLocation":"1414:5:46","nodeType":"VariableDeclaration","scope":9971,"src":"1406:13:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1382:38:46"},"returnParameters":{"id":9945,"nodeType":"ParameterList","parameters":[],"src":"1430:0:46"},"scope":9972,"src":"1368:189:46","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":9973,"src":"405:1154:46","usedErrors":[]}],"src":"108:1452:46"},"id":46},"contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[10585]},"id":10586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9974,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:47"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":9975,"nodeType":"StructuredDocumentation","src":"230:1098:47","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":10585,"linearizedBaseContracts":[10585],"name":"EnumerableSet","nameLocation":"1337:13:47","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":9983,"members":[{"constant":false,"id":9978,"mutability":"mutable","name":"_values","nameLocation":"1861:7:47","nodeType":"VariableDeclaration","scope":9983,"src":"1851:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9977,"nodeType":"ArrayTypeName","src":"1851:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9982,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:47","nodeType":"VariableDeclaration","scope":9983,"src":"2001:36:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":9981,"keyType":{"id":9979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":9980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:47","nodeType":"StructDefinition","scope":10585,"src":"1797:247:47","visibility":"public"},{"body":{"id":10024,"nodeType":"Block","src":"2283:335:47","statements":[{"condition":{"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:47","subExpression":{"arguments":[{"id":9995,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9987,"src":"2308:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":9996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"2313:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9994,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10128,"src":"2298:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":9997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2298:21:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10022,"nodeType":"Block","src":"2575:37:47","statements":[{"expression":{"hexValue":"66616c7365","id":10020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9993,"id":10021,"nodeType":"Return","src":"2589:12:47"}]},"id":10023,"nodeType":"IfStatement","src":"2293:319:47","trueBody":{"id":10019,"nodeType":"Block","src":"2321:248:47","statements":[{"expression":{"arguments":[{"id":10004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"2352:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":9999,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9987,"src":"2335:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"2335:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2335:16:47","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":10005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10006,"nodeType":"ExpressionStatement","src":"2335:23:47"},{"expression":{"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":10007,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9987,"src":"2493:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9982,"src":"2493:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10011,"indexExpression":{"id":10009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"2506:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":10012,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9987,"src":"2515:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"2515:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2515:18:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10016,"nodeType":"ExpressionStatement","src":"2493:40:47"},{"expression":{"hexValue":"74727565","id":10017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9993,"id":10018,"nodeType":"Return","src":"2547:11:47"}]}}]},"documentation":{"id":9984,"nodeType":"StructuredDocumentation","src":"2050:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":10025,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:47","nodeType":"FunctionDefinition","parameters":{"id":9990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9987,"mutability":"mutable","name":"set","nameLocation":"2240:3:47","nodeType":"VariableDeclaration","scope":10025,"src":"2228:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":9986,"nodeType":"UserDefinedTypeName","pathNode":{"id":9985,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"2228:3:47"},"referencedDeclaration":9983,"src":"2228:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":9989,"mutability":"mutable","name":"value","nameLocation":"2253:5:47","nodeType":"VariableDeclaration","scope":10025,"src":"2245:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:47"},"returnParameters":{"id":9993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10025,"src":"2277:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9991,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:47"},"scope":10585,"src":"2214:404:47","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10108,"nodeType":"Block","src":"2858:1316:47","statements":[{"assignments":[10037],"declarations":[{"constant":false,"id":10037,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:47","nodeType":"VariableDeclaration","scope":10108,"src":"2968:18:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10042,"initialValue":{"baseExpression":{"expression":{"id":10038,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"2989:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9982,"src":"2989:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10041,"indexExpression":{"id":10040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"3002:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:47"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10043,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"3023:10:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:47","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10106,"nodeType":"Block","src":"4131:37:47","statements":[{"expression":{"hexValue":"66616c7365","id":10104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10035,"id":10105,"nodeType":"Return","src":"4145:12:47"}]},"id":10107,"nodeType":"IfStatement","src":"3019:1149:47","trueBody":{"id":10103,"nodeType":"Block","src":"3040:1085:47","statements":[{"assignments":[10047],"declarations":[{"constant":false,"id":10047,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:47","nodeType":"VariableDeclaration","scope":10103,"src":"3392:21:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10046,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10051,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10048,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"3416:10:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:47","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:47"},{"assignments":[10053],"declarations":[{"constant":false,"id":10053,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:47","nodeType":"VariableDeclaration","scope":10103,"src":"3444:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10059,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10054,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"3464:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"3464:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3464:18:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:47","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:47"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10060,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10053,"src":"3505:9:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10061,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"3518:13:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10087,"nodeType":"IfStatement","src":"3501:398:47","trueBody":{"id":10086,"nodeType":"Block","src":"3533:366:47","statements":[{"assignments":[10064],"declarations":[{"constant":false,"id":10064,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:47","nodeType":"VariableDeclaration","scope":10086,"src":"3551:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10069,"initialValue":{"baseExpression":{"expression":{"id":10065,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"3571:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"3571:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10068,"indexExpression":{"id":10067,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10053,"src":"3583:9:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:47"},{"expression":{"id":10076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":10070,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"3693:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"3693:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10074,"indexExpression":{"id":10072,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"3705:13:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10075,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10064,"src":"3722:9:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10077,"nodeType":"ExpressionStatement","src":"3693:38:47"},{"expression":{"id":10084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":10078,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"3805:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9982,"src":"3805:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10082,"indexExpression":{"id":10080,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10064,"src":"3818:9:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10083,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"3831:10:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10085,"nodeType":"ExpressionStatement","src":"3805:36:47"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":10088,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"3977:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"3977:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3977:15:47","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":10093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3977:17:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10094,"nodeType":"ExpressionStatement","src":"3977:17:47"},{"expression":{"id":10099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:47","subExpression":{"baseExpression":{"expression":{"id":10095,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"4069:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9982,"src":"4069:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10098,"indexExpression":{"id":10097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"4082:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10100,"nodeType":"ExpressionStatement","src":"4062:26:47"},{"expression":{"hexValue":"74727565","id":10101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10035,"id":10102,"nodeType":"Return","src":"4103:11:47"}]}}]},"documentation":{"id":10026,"nodeType":"StructuredDocumentation","src":"2624:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":10109,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:47","nodeType":"FunctionDefinition","parameters":{"id":10032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10029,"mutability":"mutable","name":"set","nameLocation":"2815:3:47","nodeType":"VariableDeclaration","scope":10109,"src":"2803:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10028,"nodeType":"UserDefinedTypeName","pathNode":{"id":10027,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"2803:3:47"},"referencedDeclaration":9983,"src":"2803:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":10031,"mutability":"mutable","name":"value","nameLocation":"2828:5:47","nodeType":"VariableDeclaration","scope":10109,"src":"2820:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:47"},"returnParameters":{"id":10035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10109,"src":"2852:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10033,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:47"},"scope":10585,"src":"2786:1388:47","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10127,"nodeType":"Block","src":"4334:48:47","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":10120,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"4351:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9982,"src":"4351:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":10123,"indexExpression":{"id":10122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10115,"src":"4364:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:47","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10119,"id":10126,"nodeType":"Return","src":"4344:31:47"}]},"documentation":{"id":10110,"nodeType":"StructuredDocumentation","src":"4180:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":10128,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:47","nodeType":"FunctionDefinition","parameters":{"id":10116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10113,"mutability":"mutable","name":"set","nameLocation":"4286:3:47","nodeType":"VariableDeclaration","scope":10128,"src":"4274:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10112,"nodeType":"UserDefinedTypeName","pathNode":{"id":10111,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"4274:3:47"},"referencedDeclaration":9983,"src":"4274:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":10115,"mutability":"mutable","name":"value","nameLocation":"4299:5:47","nodeType":"VariableDeclaration","scope":10128,"src":"4291:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:47"},"returnParameters":{"id":10119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10128,"src":"4328:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10117,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:47"},"scope":10585,"src":"4255:127:47","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10141,"nodeType":"Block","src":"4528:42:47","statements":[{"expression":{"expression":{"expression":{"id":10137,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10132,"src":"4545:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"4545:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4545:18:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10136,"id":10140,"nodeType":"Return","src":"4538:25:47"}]},"documentation":{"id":10129,"nodeType":"StructuredDocumentation","src":"4388:70:47","text":" @dev Returns the number of values on the set. O(1)."},"id":10142,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:47","nodeType":"FunctionDefinition","parameters":{"id":10133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10132,"mutability":"mutable","name":"set","nameLocation":"4492:3:47","nodeType":"VariableDeclaration","scope":10142,"src":"4480:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10131,"nodeType":"UserDefinedTypeName","pathNode":{"id":10130,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"4480:3:47"},"referencedDeclaration":9983,"src":"4480:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:47"},"returnParameters":{"id":10136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10142,"src":"4519:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:47"},"scope":10585,"src":"4463:107:47","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10158,"nodeType":"Block","src":"4988:42:47","statements":[{"expression":{"baseExpression":{"expression":{"id":10153,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"5005:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"5005:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":10156,"indexExpression":{"id":10155,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"5017:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10152,"id":10157,"nodeType":"Return","src":"4998:25:47"}]},"documentation":{"id":10143,"nodeType":"StructuredDocumentation","src":"4576:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":10159,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:47","nodeType":"FunctionDefinition","parameters":{"id":10149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10146,"mutability":"mutable","name":"set","nameLocation":"4937:3:47","nodeType":"VariableDeclaration","scope":10159,"src":"4925:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10145,"nodeType":"UserDefinedTypeName","pathNode":{"id":10144,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"4925:3:47"},"referencedDeclaration":9983,"src":"4925:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":10148,"mutability":"mutable","name":"index","nameLocation":"4950:5:47","nodeType":"VariableDeclaration","scope":10159,"src":"4942:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10147,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:47"},"returnParameters":{"id":10152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10159,"src":"4979:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:47"},"scope":10585,"src":"4912:118:47","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10172,"nodeType":"Block","src":"5644:35:47","statements":[{"expression":{"expression":{"id":10169,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"5661:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":10170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":9978,"src":"5661:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":10168,"id":10171,"nodeType":"Return","src":"5654:18:47"}]},"documentation":{"id":10160,"nodeType":"StructuredDocumentation","src":"5036:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10173,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:47","nodeType":"FunctionDefinition","parameters":{"id":10164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10163,"mutability":"mutable","name":"set","nameLocation":"5599:3:47","nodeType":"VariableDeclaration","scope":10173,"src":"5587:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10162,"nodeType":"UserDefinedTypeName","pathNode":{"id":10161,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"5587:3:47"},"referencedDeclaration":9983,"src":"5587:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:47"},"returnParameters":{"id":10168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10173,"src":"5626:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10166,"nodeType":"ArrayTypeName","src":"5626:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:47"},"scope":10585,"src":"5570:109:47","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":10177,"members":[{"constant":false,"id":10176,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:47","nodeType":"VariableDeclaration","scope":10177,"src":"5732:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10175,"nodeType":"UserDefinedTypeName","pathNode":{"id":10174,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"5732:3:47"},"referencedDeclaration":9983,"src":"5732:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:47","nodeType":"StructDefinition","scope":10585,"src":"5704:45:47","visibility":"public"},{"body":{"id":10194,"nodeType":"Block","src":"5995:47:47","statements":[{"expression":{"arguments":[{"expression":{"id":10189,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10181,"src":"6017:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10176,"src":"6017:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10183,"src":"6029:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10188,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"6012:4:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10187,"id":10193,"nodeType":"Return","src":"6005:30:47"}]},"documentation":{"id":10178,"nodeType":"StructuredDocumentation","src":"5755:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":10195,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:47","nodeType":"FunctionDefinition","parameters":{"id":10184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10181,"mutability":"mutable","name":"set","nameLocation":"5951:3:47","nodeType":"VariableDeclaration","scope":10195,"src":"5932:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10180,"nodeType":"UserDefinedTypeName","pathNode":{"id":10179,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":10177,"src":"5932:10:47"},"referencedDeclaration":10177,"src":"5932:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10183,"mutability":"mutable","name":"value","nameLocation":"5964:5:47","nodeType":"VariableDeclaration","scope":10195,"src":"5956:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:47"},"returnParameters":{"id":10187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10195,"src":"5989:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10185,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:47"},"scope":10585,"src":"5919:123:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10212,"nodeType":"Block","src":"6289:50:47","statements":[{"expression":{"arguments":[{"expression":{"id":10207,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"6314:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10176,"src":"6314:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10201,"src":"6326:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10206,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10109,"src":"6306:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6306:26:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10205,"id":10211,"nodeType":"Return","src":"6299:33:47"}]},"documentation":{"id":10196,"nodeType":"StructuredDocumentation","src":"6048:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":10213,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:47","nodeType":"FunctionDefinition","parameters":{"id":10202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10199,"mutability":"mutable","name":"set","nameLocation":"6245:3:47","nodeType":"VariableDeclaration","scope":10213,"src":"6226:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10198,"nodeType":"UserDefinedTypeName","pathNode":{"id":10197,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":10177,"src":"6226:10:47"},"referencedDeclaration":10177,"src":"6226:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10201,"mutability":"mutable","name":"value","nameLocation":"6258:5:47","nodeType":"VariableDeclaration","scope":10213,"src":"6250:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:47"},"returnParameters":{"id":10205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10213,"src":"6283:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10203,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:47"},"scope":10585,"src":"6210:129:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10230,"nodeType":"Block","src":"6506:52:47","statements":[{"expression":{"arguments":[{"expression":{"id":10225,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"6533:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10176,"src":"6533:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10219,"src":"6545:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10224,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10128,"src":"6523:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6523:28:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10223,"id":10229,"nodeType":"Return","src":"6516:35:47"}]},"documentation":{"id":10214,"nodeType":"StructuredDocumentation","src":"6345:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":10231,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:47","nodeType":"FunctionDefinition","parameters":{"id":10220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10217,"mutability":"mutable","name":"set","nameLocation":"6457:3:47","nodeType":"VariableDeclaration","scope":10231,"src":"6438:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10216,"nodeType":"UserDefinedTypeName","pathNode":{"id":10215,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":10177,"src":"6438:10:47"},"referencedDeclaration":10177,"src":"6438:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10219,"mutability":"mutable","name":"value","nameLocation":"6470:5:47","nodeType":"VariableDeclaration","scope":10231,"src":"6462:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:47"},"returnParameters":{"id":10223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10231,"src":"6500:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10221,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:47"},"scope":10585,"src":"6420:138:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10245,"nodeType":"Block","src":"6711:43:47","statements":[{"expression":{"arguments":[{"expression":{"id":10241,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10235,"src":"6736:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10176,"src":"6736:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10240,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"6728:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":10243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6728:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10239,"id":10244,"nodeType":"Return","src":"6721:26:47"}]},"documentation":{"id":10232,"nodeType":"StructuredDocumentation","src":"6564:70:47","text":" @dev Returns the number of values in the set. O(1)."},"id":10246,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:47","nodeType":"FunctionDefinition","parameters":{"id":10236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10235,"mutability":"mutable","name":"set","nameLocation":"6674:3:47","nodeType":"VariableDeclaration","scope":10246,"src":"6655:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10234,"nodeType":"UserDefinedTypeName","pathNode":{"id":10233,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":10177,"src":"6655:10:47"},"referencedDeclaration":10177,"src":"6655:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:47"},"returnParameters":{"id":10239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10246,"src":"6702:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:47"},"scope":10585,"src":"6639:115:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10263,"nodeType":"Block","src":"7179:46:47","statements":[{"expression":{"arguments":[{"expression":{"id":10258,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10250,"src":"7200:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10176,"src":"7200:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10260,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"7212:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10257,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"7196:3:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":10261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7196:22:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10256,"id":10262,"nodeType":"Return","src":"7189:29:47"}]},"documentation":{"id":10247,"nodeType":"StructuredDocumentation","src":"6760:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":10264,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:47","nodeType":"FunctionDefinition","parameters":{"id":10253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10250,"mutability":"mutable","name":"set","nameLocation":"7127:3:47","nodeType":"VariableDeclaration","scope":10264,"src":"7108:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10249,"nodeType":"UserDefinedTypeName","pathNode":{"id":10248,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":10177,"src":"7108:10:47"},"referencedDeclaration":10177,"src":"7108:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":10252,"mutability":"mutable","name":"index","nameLocation":"7140:5:47","nodeType":"VariableDeclaration","scope":10264,"src":"7132:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10251,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:47"},"returnParameters":{"id":10256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10264,"src":"7170:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:47"},"scope":10585,"src":"7096:129:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10293,"nodeType":"Block","src":"7846:219:47","statements":[{"assignments":[10278],"declarations":[{"constant":false,"id":10278,"mutability":"mutable","name":"store","nameLocation":"7873:5:47","nodeType":"VariableDeclaration","scope":10293,"src":"7856:22:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10277,"nodeType":"ArrayTypeName","src":"7856:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10283,"initialValue":{"arguments":[{"expression":{"id":10280,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10268,"src":"7889:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":10281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10176,"src":"7889:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10279,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"7881:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":10282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7881:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:47"},{"assignments":[10288],"declarations":[{"constant":false,"id":10288,"mutability":"mutable","name":"result","nameLocation":"7927:6:47","nodeType":"VariableDeclaration","scope":10293,"src":"7910:23:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10287,"nodeType":"ArrayTypeName","src":"7910:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10289,"nodeType":"VariableDeclarationStatement","src":"7910:23:47"},{"AST":{"nodeType":"YulBlock","src":"7996:39:47","statements":[{"nodeType":"YulAssignment","src":"8010:15:47","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:47"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:47"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":10288,"isOffset":false,"isSlot":false,"src":"8010:6:47","valueSize":1},{"declaration":10278,"isOffset":false,"isSlot":false,"src":"8020:5:47","valueSize":1}],"id":10290,"nodeType":"InlineAssembly","src":"7987:48:47"},{"expression":{"id":10291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10288,"src":"8052:6:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":10273,"id":10292,"nodeType":"Return","src":"8045:13:47"}]},"documentation":{"id":10265,"nodeType":"StructuredDocumentation","src":"7231:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10294,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:47","nodeType":"FunctionDefinition","parameters":{"id":10269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10268,"mutability":"mutable","name":"set","nameLocation":"7800:3:47","nodeType":"VariableDeclaration","scope":10294,"src":"7781:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":10267,"nodeType":"UserDefinedTypeName","pathNode":{"id":10266,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":10177,"src":"7781:10:47"},"referencedDeclaration":10177,"src":"7781:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$10177_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:47"},"returnParameters":{"id":10273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10294,"src":"7828:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10271,"nodeType":"ArrayTypeName","src":"7828:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:47"},"scope":10585,"src":"7765:300:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":10298,"members":[{"constant":false,"id":10297,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:47","nodeType":"VariableDeclaration","scope":10298,"src":"8118:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10296,"nodeType":"UserDefinedTypeName","pathNode":{"id":10295,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"8118:3:47"},"referencedDeclaration":9983,"src":"8118:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:47","nodeType":"StructDefinition","scope":10585,"src":"8090:45:47","visibility":"public"},{"body":{"id":10324,"nodeType":"Block","src":"8381:74:47","statements":[{"expression":{"arguments":[{"expression":{"id":10310,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"8403:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10297,"src":"8403:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":10318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10304,"src":"8439:5:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10316,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:47","typeDescriptions":{}}},"id":10319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8431:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10314,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:47","typeDescriptions":{}}},"id":10320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:47","typeDescriptions":{}}},"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10309,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"8398:4:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8398:50:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10308,"id":10323,"nodeType":"Return","src":"8391:57:47"}]},"documentation":{"id":10299,"nodeType":"StructuredDocumentation","src":"8141:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":10325,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:47","nodeType":"FunctionDefinition","parameters":{"id":10305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10302,"mutability":"mutable","name":"set","nameLocation":"8337:3:47","nodeType":"VariableDeclaration","scope":10325,"src":"8318:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10301,"nodeType":"UserDefinedTypeName","pathNode":{"id":10300,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"8318:10:47"},"referencedDeclaration":10298,"src":"8318:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10304,"mutability":"mutable","name":"value","nameLocation":"8350:5:47","nodeType":"VariableDeclaration","scope":10325,"src":"8342:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10303,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:47"},"returnParameters":{"id":10308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10325,"src":"8375:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10306,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:47"},"scope":10585,"src":"8305:150:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10351,"nodeType":"Block","src":"8702:77:47","statements":[{"expression":{"arguments":[{"expression":{"id":10337,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"8727:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10297,"src":"8727:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":10345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10331,"src":"8763:5:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10343,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:47","typeDescriptions":{}}},"id":10346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10341,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:47","typeDescriptions":{}}},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:47","typeDescriptions":{}}},"id":10348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10336,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10109,"src":"8719:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:53:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10335,"id":10350,"nodeType":"Return","src":"8712:60:47"}]},"documentation":{"id":10326,"nodeType":"StructuredDocumentation","src":"8461:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":10352,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:47","nodeType":"FunctionDefinition","parameters":{"id":10332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10329,"mutability":"mutable","name":"set","nameLocation":"8658:3:47","nodeType":"VariableDeclaration","scope":10352,"src":"8639:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10328,"nodeType":"UserDefinedTypeName","pathNode":{"id":10327,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"8639:10:47"},"referencedDeclaration":10298,"src":"8639:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10331,"mutability":"mutable","name":"value","nameLocation":"8671:5:47","nodeType":"VariableDeclaration","scope":10352,"src":"8663:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10330,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:47"},"returnParameters":{"id":10335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10352,"src":"8696:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10333,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:47"},"scope":10585,"src":"8623:156:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10378,"nodeType":"Block","src":"8946:79:47","statements":[{"expression":{"arguments":[{"expression":{"id":10364,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10356,"src":"8973:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10297,"src":"8973:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":10372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10358,"src":"9009:5:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10370,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:47","typeDescriptions":{}}},"id":10373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9001:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10368,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:47","typeDescriptions":{}}},"id":10374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:47","typeDescriptions":{}}},"id":10375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10363,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10128,"src":"8963:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":10376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8963:55:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10362,"id":10377,"nodeType":"Return","src":"8956:62:47"}]},"documentation":{"id":10353,"nodeType":"StructuredDocumentation","src":"8785:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":10379,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:47","nodeType":"FunctionDefinition","parameters":{"id":10359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10356,"mutability":"mutable","name":"set","nameLocation":"8897:3:47","nodeType":"VariableDeclaration","scope":10379,"src":"8878:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10355,"nodeType":"UserDefinedTypeName","pathNode":{"id":10354,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"8878:10:47"},"referencedDeclaration":10298,"src":"8878:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10358,"mutability":"mutable","name":"value","nameLocation":"8910:5:47","nodeType":"VariableDeclaration","scope":10379,"src":"8902:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10357,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:47"},"returnParameters":{"id":10362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10379,"src":"8940:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10360,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:47"},"scope":10585,"src":"8860:165:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10393,"nodeType":"Block","src":"9178:43:47","statements":[{"expression":{"arguments":[{"expression":{"id":10389,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10383,"src":"9203:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10297,"src":"9203:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10388,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"9195:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":10391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9195:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10387,"id":10392,"nodeType":"Return","src":"9188:26:47"}]},"documentation":{"id":10380,"nodeType":"StructuredDocumentation","src":"9031:70:47","text":" @dev Returns the number of values in the set. O(1)."},"id":10394,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:47","nodeType":"FunctionDefinition","parameters":{"id":10384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10383,"mutability":"mutable","name":"set","nameLocation":"9141:3:47","nodeType":"VariableDeclaration","scope":10394,"src":"9122:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10382,"nodeType":"UserDefinedTypeName","pathNode":{"id":10381,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"9122:10:47"},"referencedDeclaration":10298,"src":"9122:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:47"},"returnParameters":{"id":10387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10394,"src":"9169:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10385,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:47"},"scope":10585,"src":"9106:115:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10420,"nodeType":"Block","src":"9646:73:47","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10412,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10398,"src":"9691:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10297,"src":"9691:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10414,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10400,"src":"9703:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10411,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"9687:3:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":10415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9687:22:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10409,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:47","typeDescriptions":{}}},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:31:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10407,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:47","typeDescriptions":{}}},"id":10417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:40:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10405,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:47","typeDescriptions":{}}},"id":10418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:49:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10404,"id":10419,"nodeType":"Return","src":"9656:56:47"}]},"documentation":{"id":10395,"nodeType":"StructuredDocumentation","src":"9227:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":10421,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:47","nodeType":"FunctionDefinition","parameters":{"id":10401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10398,"mutability":"mutable","name":"set","nameLocation":"9594:3:47","nodeType":"VariableDeclaration","scope":10421,"src":"9575:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10397,"nodeType":"UserDefinedTypeName","pathNode":{"id":10396,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"9575:10:47"},"referencedDeclaration":10298,"src":"9575:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":10400,"mutability":"mutable","name":"index","nameLocation":"9607:5:47","nodeType":"VariableDeclaration","scope":10421,"src":"9599:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10399,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:47"},"returnParameters":{"id":10404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10421,"src":"9637:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10402,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:47"},"scope":10585,"src":"9563:156:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10450,"nodeType":"Block","src":"10340:219:47","statements":[{"assignments":[10435],"declarations":[{"constant":false,"id":10435,"mutability":"mutable","name":"store","nameLocation":"10367:5:47","nodeType":"VariableDeclaration","scope":10450,"src":"10350:22:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10434,"nodeType":"ArrayTypeName","src":"10350:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10440,"initialValue":{"arguments":[{"expression":{"id":10437,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10425,"src":"10383:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":10438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10297,"src":"10383:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10436,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"10375:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":10439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10375:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:47"},{"assignments":[10445],"declarations":[{"constant":false,"id":10445,"mutability":"mutable","name":"result","nameLocation":"10421:6:47","nodeType":"VariableDeclaration","scope":10450,"src":"10404:23:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10443,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10444,"nodeType":"ArrayTypeName","src":"10404:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":10446,"nodeType":"VariableDeclarationStatement","src":"10404:23:47"},{"AST":{"nodeType":"YulBlock","src":"10490:39:47","statements":[{"nodeType":"YulAssignment","src":"10504:15:47","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:47"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:47"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":10445,"isOffset":false,"isSlot":false,"src":"10504:6:47","valueSize":1},{"declaration":10435,"isOffset":false,"isSlot":false,"src":"10514:5:47","valueSize":1}],"id":10447,"nodeType":"InlineAssembly","src":"10481:48:47"},{"expression":{"id":10448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10445,"src":"10546:6:47","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":10430,"id":10449,"nodeType":"Return","src":"10539:13:47"}]},"documentation":{"id":10422,"nodeType":"StructuredDocumentation","src":"9725:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10451,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:47","nodeType":"FunctionDefinition","parameters":{"id":10426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10425,"mutability":"mutable","name":"set","nameLocation":"10294:3:47","nodeType":"VariableDeclaration","scope":10451,"src":"10275:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":10424,"nodeType":"UserDefinedTypeName","pathNode":{"id":10423,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":10298,"src":"10275:10:47"},"referencedDeclaration":10298,"src":"10275:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$10298_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:47"},"returnParameters":{"id":10430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10451,"src":"10322:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10427,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10428,"nodeType":"ArrayTypeName","src":"10322:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:47"},"scope":10585,"src":"10259:300:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":10455,"members":[{"constant":false,"id":10454,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:47","nodeType":"VariableDeclaration","scope":10455,"src":"10606:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":10453,"nodeType":"UserDefinedTypeName","pathNode":{"id":10452,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":9983,"src":"10606:3:47"},"referencedDeclaration":9983,"src":"10606:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:47","nodeType":"StructDefinition","scope":10585,"src":"10581:42:47","visibility":"public"},{"body":{"id":10475,"nodeType":"Block","src":"10866:56:47","statements":[{"expression":{"arguments":[{"expression":{"id":10467,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10459,"src":"10888:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10454,"src":"10888:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":10471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10461,"src":"10908:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:47","typeDescriptions":{}}},"id":10472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10900:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10466,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"10883:4:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10883:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10465,"id":10474,"nodeType":"Return","src":"10876:39:47"}]},"documentation":{"id":10456,"nodeType":"StructuredDocumentation","src":"10629:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":10476,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:47","nodeType":"FunctionDefinition","parameters":{"id":10462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10459,"mutability":"mutable","name":"set","nameLocation":"10822:3:47","nodeType":"VariableDeclaration","scope":10476,"src":"10806:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10458,"nodeType":"UserDefinedTypeName","pathNode":{"id":10457,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":10455,"src":"10806:7:47"},"referencedDeclaration":10455,"src":"10806:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10461,"mutability":"mutable","name":"value","nameLocation":"10835:5:47","nodeType":"VariableDeclaration","scope":10476,"src":"10827:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10460,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:47"},"returnParameters":{"id":10465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10476,"src":"10860:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10463,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:47"},"scope":10585,"src":"10793:129:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10496,"nodeType":"Block","src":"11166:59:47","statements":[{"expression":{"arguments":[{"expression":{"id":10488,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10480,"src":"11191:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10454,"src":"11191:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":10492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10482,"src":"11211:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:47","typeDescriptions":{}}},"id":10493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11203:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10487,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10109,"src":"11183:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":10494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11183:35:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10486,"id":10495,"nodeType":"Return","src":"11176:42:47"}]},"documentation":{"id":10477,"nodeType":"StructuredDocumentation","src":"10928:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":10497,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:47","nodeType":"FunctionDefinition","parameters":{"id":10483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10480,"mutability":"mutable","name":"set","nameLocation":"11122:3:47","nodeType":"VariableDeclaration","scope":10497,"src":"11106:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10479,"nodeType":"UserDefinedTypeName","pathNode":{"id":10478,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":10455,"src":"11106:7:47"},"referencedDeclaration":10455,"src":"11106:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10482,"mutability":"mutable","name":"value","nameLocation":"11135:5:47","nodeType":"VariableDeclaration","scope":10497,"src":"11127:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:47"},"returnParameters":{"id":10486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10497,"src":"11160:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10484,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:47"},"scope":10585,"src":"11090:135:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10517,"nodeType":"Block","src":"11389:61:47","statements":[{"expression":{"arguments":[{"expression":{"id":10509,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10501,"src":"11416:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10454,"src":"11416:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":10513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10503,"src":"11436:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":10511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:47","typeDescriptions":{}}},"id":10514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11428:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10508,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10128,"src":"11406:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":10515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11406:37:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10507,"id":10516,"nodeType":"Return","src":"11399:44:47"}]},"documentation":{"id":10498,"nodeType":"StructuredDocumentation","src":"11231:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":10518,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:47","nodeType":"FunctionDefinition","parameters":{"id":10504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10501,"mutability":"mutable","name":"set","nameLocation":"11340:3:47","nodeType":"VariableDeclaration","scope":10518,"src":"11324:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10500,"nodeType":"UserDefinedTypeName","pathNode":{"id":10499,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":10455,"src":"11324:7:47"},"referencedDeclaration":10455,"src":"11324:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10503,"mutability":"mutable","name":"value","nameLocation":"11353:5:47","nodeType":"VariableDeclaration","scope":10518,"src":"11345:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10502,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:47"},"returnParameters":{"id":10507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10518,"src":"11383:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10505,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:47"},"scope":10585,"src":"11306:144:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10532,"nodeType":"Block","src":"11600:43:47","statements":[{"expression":{"arguments":[{"expression":{"id":10528,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"11625:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10454,"src":"11625:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10527,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"11617:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":10530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11617:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10526,"id":10531,"nodeType":"Return","src":"11610:26:47"}]},"documentation":{"id":10519,"nodeType":"StructuredDocumentation","src":"11456:70:47","text":" @dev Returns the number of values in the set. O(1)."},"id":10533,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:47","nodeType":"FunctionDefinition","parameters":{"id":10523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10522,"mutability":"mutable","name":"set","nameLocation":"11563:3:47","nodeType":"VariableDeclaration","scope":10533,"src":"11547:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10521,"nodeType":"UserDefinedTypeName","pathNode":{"id":10520,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":10455,"src":"11547:7:47"},"referencedDeclaration":10455,"src":"11547:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:47"},"returnParameters":{"id":10526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10533,"src":"11591:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10524,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:47"},"scope":10585,"src":"11531:112:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10553,"nodeType":"Block","src":"12065:55:47","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":10547,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10537,"src":"12094:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10454,"src":"12094:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":10549,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10539,"src":"12106:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10546,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"12090:3:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":10550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12090:22:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10544,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:47","typeDescriptions":{}}},"id":10551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:31:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10543,"id":10552,"nodeType":"Return","src":"12075:38:47"}]},"documentation":{"id":10534,"nodeType":"StructuredDocumentation","src":"11649:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":10554,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:47","nodeType":"FunctionDefinition","parameters":{"id":10540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10537,"mutability":"mutable","name":"set","nameLocation":"12013:3:47","nodeType":"VariableDeclaration","scope":10554,"src":"11997:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10536,"nodeType":"UserDefinedTypeName","pathNode":{"id":10535,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":10455,"src":"11997:7:47"},"referencedDeclaration":10455,"src":"11997:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":10539,"mutability":"mutable","name":"index","nameLocation":"12026:5:47","nodeType":"VariableDeclaration","scope":10554,"src":"12018:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10538,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:47"},"returnParameters":{"id":10543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10554,"src":"12056:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10541,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:47"},"scope":10585,"src":"11985:135:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10583,"nodeType":"Block","src":"12738:219:47","statements":[{"assignments":[10568],"declarations":[{"constant":false,"id":10568,"mutability":"mutable","name":"store","nameLocation":"12765:5:47","nodeType":"VariableDeclaration","scope":10583,"src":"12748:22:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10567,"nodeType":"ArrayTypeName","src":"12748:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":10573,"initialValue":{"arguments":[{"expression":{"id":10570,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10558,"src":"12781:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":10571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":10454,"src":"12781:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$9983_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":10569,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"12773:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$9983_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":10572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12773:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:47"},{"assignments":[10578],"declarations":[{"constant":false,"id":10578,"mutability":"mutable","name":"result","nameLocation":"12819:6:47","nodeType":"VariableDeclaration","scope":10583,"src":"12802:23:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10576,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10577,"nodeType":"ArrayTypeName","src":"12802:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":10579,"nodeType":"VariableDeclarationStatement","src":"12802:23:47"},{"AST":{"nodeType":"YulBlock","src":"12888:39:47","statements":[{"nodeType":"YulAssignment","src":"12902:15:47","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:47"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:47"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":10578,"isOffset":false,"isSlot":false,"src":"12902:6:47","valueSize":1},{"declaration":10568,"isOffset":false,"isSlot":false,"src":"12912:5:47","valueSize":1}],"id":10580,"nodeType":"InlineAssembly","src":"12879:48:47"},{"expression":{"id":10581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10578,"src":"12944:6:47","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":10563,"id":10582,"nodeType":"Return","src":"12937:13:47"}]},"documentation":{"id":10555,"nodeType":"StructuredDocumentation","src":"12126:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":10584,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:47","nodeType":"FunctionDefinition","parameters":{"id":10559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10558,"mutability":"mutable","name":"set","nameLocation":"12692:3:47","nodeType":"VariableDeclaration","scope":10584,"src":"12676:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":10557,"nodeType":"UserDefinedTypeName","pathNode":{"id":10556,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":10455,"src":"12676:7:47"},"referencedDeclaration":10455,"src":"12676:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$10455_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:47"},"returnParameters":{"id":10563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10584,"src":"12720:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10560,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10561,"nodeType":"ArrayTypeName","src":"12720:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:47"},"scope":10585,"src":"12660:297:47","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":10586,"src":"1329:11630:47","usedErrors":[]}],"src":"205:12755:47"},"id":47}},"contracts":{"contracts/Tokenite.sol":{"Tokenite":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"mintTokenite","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1550":{"entryPoint":null,"id":1550,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":288,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:396:48","statements":[{"nodeType":"YulBlock","src":"6:3:48","statements":[]},{"body":{"nodeType":"YulBlock","src":"69:325:48","statements":[{"nodeType":"YulAssignment","src":"79:22:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"93:1:48","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"96:4:48"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"89:3:48"},"nodeType":"YulFunctionCall","src":"89:12:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"79:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"110:38:48","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"140:4:48"},{"kind":"number","nodeType":"YulLiteral","src":"146:1:48","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"136:3:48"},"nodeType":"YulFunctionCall","src":"136:12:48"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"114:18:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"187:31:48","statements":[{"nodeType":"YulAssignment","src":"189:27:48","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"203:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"211:4:48","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"199:3:48"},"nodeType":"YulFunctionCall","src":"199:17:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"189:6:48"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"167:18:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"160:6:48"},"nodeType":"YulFunctionCall","src":"160:26:48"},"nodeType":"YulIf","src":"157:61:48"},{"body":{"nodeType":"YulBlock","src":"277:111:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:48","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"305:3:48","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"310:10:48","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"301:3:48"},"nodeType":"YulFunctionCall","src":"301:20:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"291:6:48"},"nodeType":"YulFunctionCall","src":"291:31:48"},"nodeType":"YulExpressionStatement","src":"291:31:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"342:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"345:4:48","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"335:6:48"},"nodeType":"YulFunctionCall","src":"335:15:48"},"nodeType":"YulExpressionStatement","src":"335:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"370:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"373:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"363:6:48"},"nodeType":"YulFunctionCall","src":"363:15:48"},"nodeType":"YulExpressionStatement","src":"363:15:48"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"233:18:48"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"256:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"264:2:48","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"253:2:48"},"nodeType":"YulFunctionCall","src":"253:14:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"230:2:48"},"nodeType":"YulFunctionCall","src":"230:38:48"},"nodeType":"YulIf","src":"227:161:48"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"49:4:48","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"58:6:48","type":""}],"src":"14:380:48"}]},"contents":"{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":48,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040805180820182526008815267546f6b656e69746560c01b6020808301918252835180850190945260018452601560fa1b9084015281519192916200005b916000916200007a565b508051620000719060019060208401906200007a565b5050506200015d565b828054620000889062000120565b90600052602060002090601f016020900481019282620000ac5760008555620000f7565b82601f10620000c757805160ff1916838001178555620000f7565b82800160010185558215620000f7579182015b82811115620000f7578251825591602001919060010190620000da565b506200010592915062000109565b5090565b5b808211156200010557600081556001016200010a565b600181811c908216806200013557607f821691505b602082108114156200015757634e487b7160e01b600052602260045260246000fd5b50919050565b6114b7806200016d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021b57600080fd5b806370a08231146101a557806371ac0e50146101c657806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046110e1565b610257565b60405190151581526020015b60405180910390f35b61011f610282565b60405161010e919061114b565b61013f61013a36600461115e565b610314565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611193565b61033b565b005b61016a61017a3660046111bd565b610472565b61016a61018d3660046111bd565b6104e9565b61013f6101a036600461115e565b610504565b6101b86101b33660046111f9565b610569565b60405190815260200161010e565b6101b86101d43660046112a0565b610603565b61011f61063b565b61016a6101ef366004611302565b61064a565b61016a61020236600461133e565b610659565b61011f61021536600461115e565b50606090565b6101026102293660046113ba565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216632483248360e11b148061027c575061027c826106d7565b92915050565b606060008054610291906113ed565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906113ed565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b600061031f826106fc565b506000908152600460205260409020546001600160a01b031690565b600061034682610504565b9050806001600160a01b0316836001600160a01b031614156103d55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806103f157506103f18133610229565b6104635760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103cc565b61046d8383610763565b505050565b61047c33826107de565b6104de5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016103cc565b61046d83838361085d565b61046d83838360405180602001604052806000815250610659565b6000818152600260205260408120546001600160a01b03168061027c5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103cc565b60006001600160a01b0382166105e75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016103cc565b506001600160a01b031660009081526003602052604090205490565b6000610613600780546001019055565b600061061e60075490565b905061062a8482610a63565b6106348184610bfb565b9392505050565b606060018054610291906113ed565b610655338383610cdc565b5050565b61066333836107de565b6106c55760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016103cc565b6106d184848484610dab565b50505050565b60006001600160e01b03198216632483248360e11b148061027c575061027c82610e34565b6000818152600260205260409020546001600160a01b03166107605760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103cc565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906107a582610504565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806107ea83610504565b9050806001600160a01b0316846001600160a01b0316148061083157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108555750836001600160a01b031661084a84610314565b6001600160a01b0316145b949350505050565b826001600160a01b031661087082610504565b6001600160a01b0316146108d45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103cc565b6001600160a01b03821661094f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103cc565b826001600160a01b031661096282610504565b6001600160a01b0316146109c65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103cc565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610ab95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103cc565b6000818152600260205260409020546001600160a01b031615610b1e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103cc565b6000818152600260205260409020546001600160a01b031615610b835760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103cc565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610c855760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016103cc565b60008281526006602090815260409091208251610ca492840190611032565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b816001600160a01b0316836001600160a01b03161415610d3e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103cc565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610db684848461085d565b610dc284848484610ecf565b6106d15760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103cc565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480610e9757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061027c57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461027c565b60006001600160a01b0384163b1561102757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f13903390899088908890600401611428565b602060405180830381600087803b158015610f2d57600080fd5b505af1925050508015610f5d575060408051601f3d908101601f19168201909252610f5a91810190611464565b60015b61100d573d808015610f8b576040519150601f19603f3d011682016040523d82523d6000602084013e610f90565b606091505b5080516110055760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103cc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610855565b506001949350505050565b82805461103e906113ed565b90600052602060002090601f01602090048101928261106057600085556110a6565b82601f1061107957805160ff19168380011785556110a6565b828001600101855582156110a6579182015b828111156110a657825182559160200191906001019061108b565b506110b29291506110b6565b5090565b5b808211156110b257600081556001016110b7565b6001600160e01b03198116811461076057600080fd5b6000602082840312156110f357600080fd5b8135610634816110cb565b6000815180845260005b8181101561112457602081850181015186830182015201611108565b81811115611136576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061063460208301846110fe565b60006020828403121561117057600080fd5b5035919050565b80356001600160a01b038116811461118e57600080fd5b919050565b600080604083850312156111a657600080fd5b6111af83611177565b946020939093013593505050565b6000806000606084860312156111d257600080fd5b6111db84611177565b92506111e960208501611177565b9150604084013590509250925092565b60006020828403121561120b57600080fd5b61063482611177565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561124557611245611214565b604051601f8501601f19908116603f0116810190828211818310171561126d5761126d611214565b8160405280935085815286868601111561128657600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156112b357600080fd5b6112bc83611177565b9150602083013567ffffffffffffffff8111156112d857600080fd5b8301601f810185136112e957600080fd5b6112f88582356020840161122a565b9150509250929050565b6000806040838503121561131557600080fd5b61131e83611177565b91506020830135801515811461133357600080fd5b809150509250929050565b6000806000806080858703121561135457600080fd5b61135d85611177565b935061136b60208601611177565b925060408501359150606085013567ffffffffffffffff81111561138e57600080fd5b8501601f8101871361139f57600080fd5b6113ae8782356020840161122a565b91505092959194509250565b600080604083850312156113cd57600080fd5b6113d683611177565b91506113e460208401611177565b90509250929050565b600181811c9082168061140157607f821691505b6020821081141561142257634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261145a60808301846110fe565b9695505050505050565b60006020828403121561147657600080fd5b8151610634816110cb56fea26469706673582212204c8acbf8a676ffc2784cba3c96921a488dfeafe30e6ec75e5fd79913ea6d81db64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x546F6B656E697465 PUSH1 0xC0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x15 PUSH1 0xFA SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x5B SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x7A JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x71 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x7A JUMP JUMPDEST POP POP POP PUSH3 0x15D JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x88 SWAP1 PUSH3 0x120 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xAC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xDA JUMP JUMPDEST POP PUSH3 0x105 SWAP3 SWAP2 POP PUSH3 0x109 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x105 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x10A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x135 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x157 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B7 DUP1 PUSH3 0x16D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x71AC0E50 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x63B JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x16A PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST POP PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x27C JUMPI POP PUSH2 0x27C DUP3 PUSH2 0x6D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x13ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0x13ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F DUP3 PUSH2 0x6FC JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 DUP3 PUSH2 0x504 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3F1 JUMPI POP PUSH2 0x3F1 DUP2 CALLER PUSH2 0x229 JUMP JUMPDEST PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x46D DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x47C CALLER DUP3 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x46D DUP4 DUP4 DUP4 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x46D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x659 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x613 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x62A DUP5 DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x634 DUP2 DUP5 PUSH2 0xBFB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x655 CALLER DUP4 DUP4 PUSH2 0xCDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x663 CALLER DUP4 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x6D1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x27C JUMPI POP PUSH2 0x27C DUP3 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x7A5 DUP3 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7EA DUP4 PUSH2 0x504 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x831 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x855 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84A DUP5 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x870 DUP3 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x962 DUP3 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xCA4 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1032 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP5 DUP5 DUP5 PUSH2 0x85D JUMP JUMPDEST PUSH2 0xDC2 DUP5 DUP5 DUP5 DUP5 PUSH2 0xECF JUMP JUMPDEST PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0xE97 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x27C JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x27C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF13 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF5A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x103E SWAP1 PUSH2 0x13ED JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1060 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10A6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1079 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x10A6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10A6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10A6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x108B JUMP JUMPDEST POP PUSH2 0x10B2 SWAP3 SWAP2 POP PUSH2 0x10B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x634 DUP2 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1108 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x634 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x118E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11AF DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11DB DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP3 POP PUSH2 0x11E9 PUSH1 0x20 DUP6 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x634 DUP3 PUSH2 0x1177 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1245 JUMPI PUSH2 0x1245 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x126D JUMPI PUSH2 0x126D PUSH2 0x1214 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12BC DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x12E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F8 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x122A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131E DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135D DUP6 PUSH2 0x1177 JUMP JUMPDEST SWAP4 POP PUSH2 0x136B PUSH1 0x20 DUP7 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AE DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x122A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D6 DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E4 PUSH1 0x20 DUP5 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1401 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1422 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x145A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x634 DUP2 PUSH2 0x10CB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DUP11 0xCB 0xF8 0xA6 PUSH23 0xFFC2784CBA3C96921A488DFEAFE30E6EC75E5FD79913EA PUSH14 0x81DB64736F6C6343000809003300 ","sourceMap":"191:915:0:-:0;;;325:45;;;;;;;;;-1:-1:-1;1390:113:16;;;;;;;;;;;-1:-1:-1;;;1390:113:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:16;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:16;:::i;:::-;-1:-1:-1;1479:17:16;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;191:915:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;191:915:0;;;-1:-1:-1;191:915:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:48;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;191:915:0;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2398":{"entryPoint":null,"id":2398,"parameterSlots":4,"returnSlots":0},"@_approve_2264":{"entryPoint":1891,"id":2264,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_2385":{"entryPoint":null,"id":2385,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2372":{"entryPoint":3791,"id":2372,"parameterSlots":4,"returnSlots":1},"@_exists_1933":{"entryPoint":null,"id":1933,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1967":{"entryPoint":2014,"id":1967,"parameterSlots":2,"returnSlots":1},"@_mint_2088":{"entryPoint":2659,"id":2088,"parameterSlots":2,"returnSlots":0},"@_msgSender_6077":{"entryPoint":null,"id":6077,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1915":{"entryPoint":null,"id":1915,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2310":{"entryPoint":1788,"id":2310,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1902":{"entryPoint":3499,"id":1902,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2296":{"entryPoint":3292,"id":2296,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_3443":{"entryPoint":3067,"id":3443,"parameterSlots":2,"returnSlots":0},"@_transfer_2240":{"entryPoint":2141,"id":2240,"parameterSlots":3,"returnSlots":0},"@approve_1744":{"entryPoint":827,"id":1744,"parameterSlots":2,"returnSlots":0},"@balanceOf_1605":{"entryPoint":1385,"id":1605,"parameterSlots":1,"returnSlots":1},"@current_6105":{"entryPoint":null,"id":6105,"parameterSlots":1,"returnSlots":1},"@getApproved_1762":{"entryPoint":788,"id":1762,"parameterSlots":1,"returnSlots":1},"@increment_6119":{"entryPoint":null,"id":6119,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_1797":{"entryPoint":null,"id":1797,"parameterSlots":2,"returnSlots":1},"@isContract_4212":{"entryPoint":null,"id":4212,"parameterSlots":1,"returnSlots":1},"@mintTokenite_56":{"entryPoint":1539,"id":56,"parameterSlots":2,"returnSlots":1},"@name_1643":{"entryPoint":642,"id":1643,"parameterSlots":0,"returnSlots":1},"@ownerOf_1633":{"entryPoint":1284,"id":1633,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1843":{"entryPoint":1257,"id":1843,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1873":{"entryPoint":1625,"id":1873,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1779":{"entryPoint":1610,"id":1779,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1581":{"entryPoint":3636,"id":1581,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3358":{"entryPoint":1751,"id":3358,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7309":{"entryPoint":null,"id":7309,"parameterSlots":1,"returnSlots":1},"@supportsInterface_79":{"entryPoint":599,"id":79,"parameterSlots":1,"returnSlots":1},"@symbol_1653":{"entryPoint":1595,"id":1653,"parameterSlots":0,"returnSlots":1},"@tokenURI_99":{"entryPoint":null,"id":99,"parameterSlots":1,"returnSlots":1},"@transferFrom_1824":{"entryPoint":1138,"id":1824,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":4650,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4601,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5050,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4541,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4926,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4866,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":4768,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4499,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":5220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5160,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5101,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":4628,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4299,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11503:48","statements":[{"nodeType":"YulBlock","src":"6:3:48","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:133:48","statements":[{"body":{"nodeType":"YulBlock","src":"169:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:48"},"nodeType":"YulFunctionCall","src":"171:12:48"},"nodeType":"YulExpressionStatement","src":"171:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:48"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"99:66:48","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:48"},"nodeType":"YulFunctionCall","src":"88:78:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:48"},"nodeType":"YulFunctionCall","src":"78:89:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:48"},"nodeType":"YulFunctionCall","src":"71:97:48"},"nodeType":"YulIf","src":"68:117:48"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:48","type":""}],"src":"14:177:48"},{"body":{"nodeType":"YulBlock","src":"265:176:48","statements":[{"body":{"nodeType":"YulBlock","src":"311:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"320:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"323:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"313:6:48"},"nodeType":"YulFunctionCall","src":"313:12:48"},"nodeType":"YulExpressionStatement","src":"313:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"286:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"295:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"282:3:48"},"nodeType":"YulFunctionCall","src":"282:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"307:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"278:3:48"},"nodeType":"YulFunctionCall","src":"278:32:48"},"nodeType":"YulIf","src":"275:52:48"},{"nodeType":"YulVariableDeclaration","src":"336:36:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"349:12:48"},"nodeType":"YulFunctionCall","src":"349:23:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"340:5:48","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"405:5:48"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"381:23:48"},"nodeType":"YulFunctionCall","src":"381:30:48"},"nodeType":"YulExpressionStatement","src":"381:30:48"},{"nodeType":"YulAssignment","src":"420:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"430:5:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"420:6:48"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"231:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"242:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"254:6:48","type":""}],"src":"196:245:48"},{"body":{"nodeType":"YulBlock","src":"541:92:48","statements":[{"nodeType":"YulAssignment","src":"551:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"574:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"559:3:48"},"nodeType":"YulFunctionCall","src":"559:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"551:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:48"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"618:6:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"611:6:48"},"nodeType":"YulFunctionCall","src":"611:14:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"604:6:48"},"nodeType":"YulFunctionCall","src":"604:22:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"586:6:48"},"nodeType":"YulFunctionCall","src":"586:41:48"},"nodeType":"YulExpressionStatement","src":"586:41:48"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"510:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"521:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"532:4:48","type":""}],"src":"446:187:48"},{"body":{"nodeType":"YulBlock","src":"688:422:48","statements":[{"nodeType":"YulVariableDeclaration","src":"698:26:48","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"718:5:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"712:5:48"},"nodeType":"YulFunctionCall","src":"712:12:48"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"702:6:48","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"740:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"745:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"733:6:48"},"nodeType":"YulFunctionCall","src":"733:19:48"},"nodeType":"YulExpressionStatement","src":"733:19:48"},{"nodeType":"YulVariableDeclaration","src":"761:10:48","value":{"kind":"number","nodeType":"YulLiteral","src":"770:1:48","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"765:1:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"832:110:48","statements":[{"nodeType":"YulVariableDeclaration","src":"846:14:48","value":{"kind":"number","nodeType":"YulLiteral","src":"856:4:48","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"850:2:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"888:3:48"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"884:3:48"},"nodeType":"YulFunctionCall","src":"884:11:48"},{"name":"_1","nodeType":"YulIdentifier","src":"897:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"880:3:48"},"nodeType":"YulFunctionCall","src":"880:20:48"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"916:5:48"},{"name":"i","nodeType":"YulIdentifier","src":"923:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"912:3:48"},"nodeType":"YulFunctionCall","src":"912:13:48"},{"name":"_1","nodeType":"YulIdentifier","src":"927:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"908:3:48"},"nodeType":"YulFunctionCall","src":"908:22:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"902:5:48"},"nodeType":"YulFunctionCall","src":"902:29:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"873:6:48"},"nodeType":"YulFunctionCall","src":"873:59:48"},"nodeType":"YulExpressionStatement","src":"873:59:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"791:1:48"},{"name":"length","nodeType":"YulIdentifier","src":"794:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"788:2:48"},"nodeType":"YulFunctionCall","src":"788:13:48"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"802:21:48","statements":[{"nodeType":"YulAssignment","src":"804:17:48","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"813:1:48"},{"kind":"number","nodeType":"YulLiteral","src":"816:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:48"},"nodeType":"YulFunctionCall","src":"809:12:48"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"804:1:48"}]}]},"pre":{"nodeType":"YulBlock","src":"784:3:48","statements":[]},"src":"780:162:48"},{"body":{"nodeType":"YulBlock","src":"976:62:48","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1005:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"1010:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1001:3:48"},"nodeType":"YulFunctionCall","src":"1001:16:48"},{"kind":"number","nodeType":"YulLiteral","src":"1019:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:48"},"nodeType":"YulFunctionCall","src":"997:27:48"},{"kind":"number","nodeType":"YulLiteral","src":"1026:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"990:6:48"},"nodeType":"YulFunctionCall","src":"990:38:48"},"nodeType":"YulExpressionStatement","src":"990:38:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"957:1:48"},{"name":"length","nodeType":"YulIdentifier","src":"960:6:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"954:2:48"},"nodeType":"YulFunctionCall","src":"954:13:48"},"nodeType":"YulIf","src":"951:87:48"},{"nodeType":"YulAssignment","src":"1047:57:48","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1062:3:48"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1075:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1083:2:48","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1071:3:48"},"nodeType":"YulFunctionCall","src":"1071:15:48"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1092:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1088:3:48"},"nodeType":"YulFunctionCall","src":"1088:7:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1067:3:48"},"nodeType":"YulFunctionCall","src":"1067:29:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1058:3:48"},"nodeType":"YulFunctionCall","src":"1058:39:48"},{"kind":"number","nodeType":"YulLiteral","src":"1099:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1054:3:48"},"nodeType":"YulFunctionCall","src":"1054:50:48"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1047:3:48"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"665:5:48","type":""},{"name":"pos","nodeType":"YulTypedName","src":"672:3:48","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"680:3:48","type":""}],"src":"638:472:48"},{"body":{"nodeType":"YulBlock","src":"1236:99:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1264:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1246:6:48"},"nodeType":"YulFunctionCall","src":"1246:21:48"},"nodeType":"YulExpressionStatement","src":"1246:21:48"},{"nodeType":"YulAssignment","src":"1276:53:48","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1302:6:48"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1314:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1325:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1310:3:48"},"nodeType":"YulFunctionCall","src":"1310:18:48"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1284:17:48"},"nodeType":"YulFunctionCall","src":"1284:45:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1276:4:48"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1205:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1216:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1227:4:48","type":""}],"src":"1115:220:48"},{"body":{"nodeType":"YulBlock","src":"1410:110:48","statements":[{"body":{"nodeType":"YulBlock","src":"1456:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1465:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1468:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1458:6:48"},"nodeType":"YulFunctionCall","src":"1458:12:48"},"nodeType":"YulExpressionStatement","src":"1458:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1431:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1427:3:48"},"nodeType":"YulFunctionCall","src":"1427:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"1452:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1423:3:48"},"nodeType":"YulFunctionCall","src":"1423:32:48"},"nodeType":"YulIf","src":"1420:52:48"},{"nodeType":"YulAssignment","src":"1481:33:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1504:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1491:12:48"},"nodeType":"YulFunctionCall","src":"1491:23:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1481:6:48"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1376:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1387:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1399:6:48","type":""}],"src":"1340:180:48"},{"body":{"nodeType":"YulBlock","src":"1626:125:48","statements":[{"nodeType":"YulAssignment","src":"1636:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1648:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1659:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1644:3:48"},"nodeType":"YulFunctionCall","src":"1644:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1636:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1678:9:48"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1693:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1701:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1689:3:48"},"nodeType":"YulFunctionCall","src":"1689:55:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1671:6:48"},"nodeType":"YulFunctionCall","src":"1671:74:48"},"nodeType":"YulExpressionStatement","src":"1671:74:48"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1595:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1606:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1617:4:48","type":""}],"src":"1525:226:48"},{"body":{"nodeType":"YulBlock","src":"1805:147:48","statements":[{"nodeType":"YulAssignment","src":"1815:29:48","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1837:6:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1824:12:48"},"nodeType":"YulFunctionCall","src":"1824:20:48"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1815:5:48"}]},{"body":{"nodeType":"YulBlock","src":"1930:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1939:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1942:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1932:6:48"},"nodeType":"YulFunctionCall","src":"1932:12:48"},"nodeType":"YulExpressionStatement","src":"1932:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:48"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1877:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"1884:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1873:3:48"},"nodeType":"YulFunctionCall","src":"1873:54:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1863:2:48"},"nodeType":"YulFunctionCall","src":"1863:65:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1856:6:48"},"nodeType":"YulFunctionCall","src":"1856:73:48"},"nodeType":"YulIf","src":"1853:93:48"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1784:6:48","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1795:5:48","type":""}],"src":"1756:196:48"},{"body":{"nodeType":"YulBlock","src":"2044:167:48","statements":[{"body":{"nodeType":"YulBlock","src":"2090:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2099:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2102:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2092:6:48"},"nodeType":"YulFunctionCall","src":"2092:12:48"},"nodeType":"YulExpressionStatement","src":"2092:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2065:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2074:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2061:3:48"},"nodeType":"YulFunctionCall","src":"2061:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2086:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2057:3:48"},"nodeType":"YulFunctionCall","src":"2057:32:48"},"nodeType":"YulIf","src":"2054:52:48"},{"nodeType":"YulAssignment","src":"2115:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2144:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2125:18:48"},"nodeType":"YulFunctionCall","src":"2125:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2115:6:48"}]},{"nodeType":"YulAssignment","src":"2163:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2190:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2201:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2186:3:48"},"nodeType":"YulFunctionCall","src":"2186:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2173:12:48"},"nodeType":"YulFunctionCall","src":"2173:32:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2163:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2002:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2013:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2025:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2033:6:48","type":""}],"src":"1957:254:48"},{"body":{"nodeType":"YulBlock","src":"2320:224:48","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:48"},"nodeType":"YulFunctionCall","src":"2368:12:48"},"nodeType":"YulExpressionStatement","src":"2368:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2341:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2350:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2337:3:48"},"nodeType":"YulFunctionCall","src":"2337:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2362:2:48","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2333:3:48"},"nodeType":"YulFunctionCall","src":"2333:32:48"},"nodeType":"YulIf","src":"2330:52:48"},{"nodeType":"YulAssignment","src":"2391:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2420:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2401:18:48"},"nodeType":"YulFunctionCall","src":"2401:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2391:6:48"}]},{"nodeType":"YulAssignment","src":"2439:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2472:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2483:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2468:3:48"},"nodeType":"YulFunctionCall","src":"2468:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2449:18:48"},"nodeType":"YulFunctionCall","src":"2449:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2439:6:48"}]},{"nodeType":"YulAssignment","src":"2496:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2523:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2534:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2519:3:48"},"nodeType":"YulFunctionCall","src":"2519:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2506:12:48"},"nodeType":"YulFunctionCall","src":"2506:32:48"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2496:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2270:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2281:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2293:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2301:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2309:6:48","type":""}],"src":"2216:328:48"},{"body":{"nodeType":"YulBlock","src":"2619:116:48","statements":[{"body":{"nodeType":"YulBlock","src":"2665:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2677:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2667:6:48"},"nodeType":"YulFunctionCall","src":"2667:12:48"},"nodeType":"YulExpressionStatement","src":"2667:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2640:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2649:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2636:3:48"},"nodeType":"YulFunctionCall","src":"2636:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2661:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2632:3:48"},"nodeType":"YulFunctionCall","src":"2632:32:48"},"nodeType":"YulIf","src":"2629:52:48"},{"nodeType":"YulAssignment","src":"2690:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2719:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2700:18:48"},"nodeType":"YulFunctionCall","src":"2700:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2690:6:48"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2585:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2596:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2608:6:48","type":""}],"src":"2549:186:48"},{"body":{"nodeType":"YulBlock","src":"2841:76:48","statements":[{"nodeType":"YulAssignment","src":"2851:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2863:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2874:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2859:3:48"},"nodeType":"YulFunctionCall","src":"2859:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2851:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2893:9:48"},{"name":"value0","nodeType":"YulIdentifier","src":"2904:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2886:6:48"},"nodeType":"YulFunctionCall","src":"2886:25:48"},"nodeType":"YulExpressionStatement","src":"2886:25:48"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2810:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2821:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2832:4:48","type":""}],"src":"2740:177:48"},{"body":{"nodeType":"YulBlock","src":"2954:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2971:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2974:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2964:6:48"},"nodeType":"YulFunctionCall","src":"2964:88:48"},"nodeType":"YulExpressionStatement","src":"2964:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3068:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3071:4:48","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3061:6:48"},"nodeType":"YulFunctionCall","src":"3061:15:48"},"nodeType":"YulExpressionStatement","src":"3061:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3092:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3095:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3085:6:48"},"nodeType":"YulFunctionCall","src":"3085:15:48"},"nodeType":"YulExpressionStatement","src":"3085:15:48"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2922:184:48"},{"body":{"nodeType":"YulBlock","src":"3186:557:48","statements":[{"nodeType":"YulVariableDeclaration","src":"3196:28:48","value":{"kind":"number","nodeType":"YulLiteral","src":"3206:18:48","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3200:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"3251:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3253:16:48"},"nodeType":"YulFunctionCall","src":"3253:18:48"},"nodeType":"YulExpressionStatement","src":"3253:18:48"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3239:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"3247:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3236:2:48"},"nodeType":"YulFunctionCall","src":"3236:14:48"},"nodeType":"YulIf","src":"3233:40:48"},{"nodeType":"YulVariableDeclaration","src":"3282:17:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3296:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3292:3:48"},"nodeType":"YulFunctionCall","src":"3292:7:48"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3286:2:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3308:23:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3328:2:48","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3322:5:48"},"nodeType":"YulFunctionCall","src":"3322:9:48"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3312:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3340:73:48","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3362:6:48"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3386:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"3394:2:48","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3382:3:48"},"nodeType":"YulFunctionCall","src":"3382:15:48"},{"name":"_2","nodeType":"YulIdentifier","src":"3399:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3378:3:48"},"nodeType":"YulFunctionCall","src":"3378:24:48"},{"kind":"number","nodeType":"YulLiteral","src":"3404:2:48","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3374:3:48"},"nodeType":"YulFunctionCall","src":"3374:33:48"},{"name":"_2","nodeType":"YulIdentifier","src":"3409:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3370:3:48"},"nodeType":"YulFunctionCall","src":"3370:42:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3358:3:48"},"nodeType":"YulFunctionCall","src":"3358:55:48"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3344:10:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"3472:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3474:16:48"},"nodeType":"YulFunctionCall","src":"3474:18:48"},"nodeType":"YulExpressionStatement","src":"3474:18:48"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3431:10:48"},{"name":"_1","nodeType":"YulIdentifier","src":"3443:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3428:2:48"},"nodeType":"YulFunctionCall","src":"3428:18:48"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3451:10:48"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3463:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3448:2:48"},"nodeType":"YulFunctionCall","src":"3448:22:48"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3425:2:48"},"nodeType":"YulFunctionCall","src":"3425:46:48"},"nodeType":"YulIf","src":"3422:72:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3510:2:48","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3514:10:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3503:6:48"},"nodeType":"YulFunctionCall","src":"3503:22:48"},"nodeType":"YulExpressionStatement","src":"3503:22:48"},{"nodeType":"YulAssignment","src":"3534:15:48","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3543:6:48"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3534:5:48"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3565:6:48"},{"name":"length","nodeType":"YulIdentifier","src":"3573:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:48"},"nodeType":"YulFunctionCall","src":"3558:22:48"},"nodeType":"YulExpressionStatement","src":"3558:22:48"},{"body":{"nodeType":"YulBlock","src":"3618:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3627:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3630:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3620:6:48"},"nodeType":"YulFunctionCall","src":"3620:12:48"},"nodeType":"YulExpressionStatement","src":"3620:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3599:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"3604:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:48"},"nodeType":"YulFunctionCall","src":"3595:16:48"},{"name":"end","nodeType":"YulIdentifier","src":"3613:3:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3592:2:48"},"nodeType":"YulFunctionCall","src":"3592:25:48"},"nodeType":"YulIf","src":"3589:45:48"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3660:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"3668:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3656:3:48"},"nodeType":"YulFunctionCall","src":"3656:17:48"},{"name":"src","nodeType":"YulIdentifier","src":"3675:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"3680:6:48"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3643:12:48"},"nodeType":"YulFunctionCall","src":"3643:44:48"},"nodeType":"YulExpressionStatement","src":"3643:44:48"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3711:6:48"},{"name":"length","nodeType":"YulIdentifier","src":"3719:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3707:3:48"},"nodeType":"YulFunctionCall","src":"3707:19:48"},{"kind":"number","nodeType":"YulLiteral","src":"3728:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3703:3:48"},"nodeType":"YulFunctionCall","src":"3703:30:48"},{"kind":"number","nodeType":"YulLiteral","src":"3735:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3696:6:48"},"nodeType":"YulFunctionCall","src":"3696:41:48"},"nodeType":"YulExpressionStatement","src":"3696:41:48"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3155:3:48","type":""},{"name":"length","nodeType":"YulTypedName","src":"3160:6:48","type":""},{"name":"end","nodeType":"YulTypedName","src":"3168:3:48","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3176:5:48","type":""}],"src":"3111:632:48"},{"body":{"nodeType":"YulBlock","src":"3845:428:48","statements":[{"body":{"nodeType":"YulBlock","src":"3891:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3900:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3903:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3893:6:48"},"nodeType":"YulFunctionCall","src":"3893:12:48"},"nodeType":"YulExpressionStatement","src":"3893:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3866:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3862:3:48"},"nodeType":"YulFunctionCall","src":"3862:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"3887:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3858:3:48"},"nodeType":"YulFunctionCall","src":"3858:32:48"},"nodeType":"YulIf","src":"3855:52:48"},{"nodeType":"YulAssignment","src":"3916:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3945:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3926:18:48"},"nodeType":"YulFunctionCall","src":"3926:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3916:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"3964:46:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3995:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4006:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:48"},"nodeType":"YulFunctionCall","src":"3991:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3978:12:48"},"nodeType":"YulFunctionCall","src":"3978:32:48"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3968:6:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4053:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4062:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4065:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4055:6:48"},"nodeType":"YulFunctionCall","src":"4055:12:48"},"nodeType":"YulExpressionStatement","src":"4055:12:48"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4025:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"4033:18:48","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4022:2:48"},"nodeType":"YulFunctionCall","src":"4022:30:48"},"nodeType":"YulIf","src":"4019:50:48"},{"nodeType":"YulVariableDeclaration","src":"4078:32:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4092:9:48"},{"name":"offset","nodeType":"YulIdentifier","src":"4103:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4088:3:48"},"nodeType":"YulFunctionCall","src":"4088:22:48"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4082:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4158:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4167:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4170:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4160:6:48"},"nodeType":"YulFunctionCall","src":"4160:12:48"},"nodeType":"YulExpressionStatement","src":"4160:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4137:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"4141:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:48"},"nodeType":"YulFunctionCall","src":"4133:13:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4148:7:48"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4129:3:48"},"nodeType":"YulFunctionCall","src":"4129:27:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4122:6:48"},"nodeType":"YulFunctionCall","src":"4122:35:48"},"nodeType":"YulIf","src":"4119:55:48"},{"nodeType":"YulAssignment","src":"4183:84:48","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4232:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"4236:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4228:3:48"},"nodeType":"YulFunctionCall","src":"4228:11:48"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4254:2:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4241:12:48"},"nodeType":"YulFunctionCall","src":"4241:16:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4259:7:48"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"4193:34:48"},"nodeType":"YulFunctionCall","src":"4193:74:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4183:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3803:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3814:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3826:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3834:6:48","type":""}],"src":"3748:525:48"},{"body":{"nodeType":"YulBlock","src":"4362:263:48","statements":[{"body":{"nodeType":"YulBlock","src":"4408:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4420:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4410:6:48"},"nodeType":"YulFunctionCall","src":"4410:12:48"},"nodeType":"YulExpressionStatement","src":"4410:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4383:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"4392:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4379:3:48"},"nodeType":"YulFunctionCall","src":"4379:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"4404:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4375:3:48"},"nodeType":"YulFunctionCall","src":"4375:32:48"},"nodeType":"YulIf","src":"4372:52:48"},{"nodeType":"YulAssignment","src":"4433:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4462:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4443:18:48"},"nodeType":"YulFunctionCall","src":"4443:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4433:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"4481:45:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4511:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4522:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4507:3:48"},"nodeType":"YulFunctionCall","src":"4507:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4494:12:48"},"nodeType":"YulFunctionCall","src":"4494:32:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4485:5:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4579:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4588:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4591:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4581:6:48"},"nodeType":"YulFunctionCall","src":"4581:12:48"},"nodeType":"YulExpressionStatement","src":"4581:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4548:5:48"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4569:5:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4562:6:48"},"nodeType":"YulFunctionCall","src":"4562:13:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4555:6:48"},"nodeType":"YulFunctionCall","src":"4555:21:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4545:2:48"},"nodeType":"YulFunctionCall","src":"4545:32:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4538:6:48"},"nodeType":"YulFunctionCall","src":"4538:40:48"},"nodeType":"YulIf","src":"4535:60:48"},{"nodeType":"YulAssignment","src":"4604:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"4614:5:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4604:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4320:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4331:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4343:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4351:6:48","type":""}],"src":"4278:347:48"},{"body":{"nodeType":"YulBlock","src":"4760:537:48","statements":[{"body":{"nodeType":"YulBlock","src":"4807:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4816:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4819:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4809:6:48"},"nodeType":"YulFunctionCall","src":"4809:12:48"},"nodeType":"YulExpressionStatement","src":"4809:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4781:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"4790:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4777:3:48"},"nodeType":"YulFunctionCall","src":"4777:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"4802:3:48","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4773:3:48"},"nodeType":"YulFunctionCall","src":"4773:33:48"},"nodeType":"YulIf","src":"4770:53:48"},{"nodeType":"YulAssignment","src":"4832:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4861:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4842:18:48"},"nodeType":"YulFunctionCall","src":"4842:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4832:6:48"}]},{"nodeType":"YulAssignment","src":"4880:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4913:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4924:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4909:3:48"},"nodeType":"YulFunctionCall","src":"4909:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4890:18:48"},"nodeType":"YulFunctionCall","src":"4890:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4880:6:48"}]},{"nodeType":"YulAssignment","src":"4937:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4964:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4975:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4960:3:48"},"nodeType":"YulFunctionCall","src":"4960:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4947:12:48"},"nodeType":"YulFunctionCall","src":"4947:32:48"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4937:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"4988:46:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5019:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5030:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5015:3:48"},"nodeType":"YulFunctionCall","src":"5015:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5002:12:48"},"nodeType":"YulFunctionCall","src":"5002:32:48"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4992:6:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"5077:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5086:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5089:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5079:6:48"},"nodeType":"YulFunctionCall","src":"5079:12:48"},"nodeType":"YulExpressionStatement","src":"5079:12:48"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5049:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"5057:18:48","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5046:2:48"},"nodeType":"YulFunctionCall","src":"5046:30:48"},"nodeType":"YulIf","src":"5043:50:48"},{"nodeType":"YulVariableDeclaration","src":"5102:32:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5116:9:48"},{"name":"offset","nodeType":"YulIdentifier","src":"5127:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5112:3:48"},"nodeType":"YulFunctionCall","src":"5112:22:48"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5106:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"5182:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5191:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5194:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5184:6:48"},"nodeType":"YulFunctionCall","src":"5184:12:48"},"nodeType":"YulExpressionStatement","src":"5184:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5161:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"5165:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:48"},"nodeType":"YulFunctionCall","src":"5157:13:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5172:7:48"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5153:3:48"},"nodeType":"YulFunctionCall","src":"5153:27:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5146:6:48"},"nodeType":"YulFunctionCall","src":"5146:35:48"},"nodeType":"YulIf","src":"5143:55:48"},{"nodeType":"YulAssignment","src":"5207:84:48","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5256:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"5260:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:48"},"nodeType":"YulFunctionCall","src":"5252:11:48"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5278:2:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5265:12:48"},"nodeType":"YulFunctionCall","src":"5265:16:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5283:7:48"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"5217:34:48"},"nodeType":"YulFunctionCall","src":"5217:74:48"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5207:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4702:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4713:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4725:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4733:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4741:6:48","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4749:6:48","type":""}],"src":"4630:667:48"},{"body":{"nodeType":"YulBlock","src":"5389:173:48","statements":[{"body":{"nodeType":"YulBlock","src":"5435:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5444:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5447:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5437:6:48"},"nodeType":"YulFunctionCall","src":"5437:12:48"},"nodeType":"YulExpressionStatement","src":"5437:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5410:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"5419:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5406:3:48"},"nodeType":"YulFunctionCall","src":"5406:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"5431:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5402:3:48"},"nodeType":"YulFunctionCall","src":"5402:32:48"},"nodeType":"YulIf","src":"5399:52:48"},{"nodeType":"YulAssignment","src":"5460:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5470:18:48"},"nodeType":"YulFunctionCall","src":"5470:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5460:6:48"}]},{"nodeType":"YulAssignment","src":"5508:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5537:3:48"},"nodeType":"YulFunctionCall","src":"5537:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5518:18:48"},"nodeType":"YulFunctionCall","src":"5518:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5508:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5347:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5358:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5370:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5378:6:48","type":""}],"src":"5302:260:48"},{"body":{"nodeType":"YulBlock","src":"5622:382:48","statements":[{"nodeType":"YulAssignment","src":"5632:22:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5646:1:48","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5649:4:48"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5642:3:48"},"nodeType":"YulFunctionCall","src":"5642:12:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5632:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"5663:38:48","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5693:4:48"},{"kind":"number","nodeType":"YulLiteral","src":"5699:1:48","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5689:3:48"},"nodeType":"YulFunctionCall","src":"5689:12:48"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5667:18:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"5740:31:48","statements":[{"nodeType":"YulAssignment","src":"5742:27:48","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5756:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"5764:4:48","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5752:3:48"},"nodeType":"YulFunctionCall","src":"5752:17:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5742:6:48"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5720:18:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5713:6:48"},"nodeType":"YulFunctionCall","src":"5713:26:48"},"nodeType":"YulIf","src":"5710:61:48"},{"body":{"nodeType":"YulBlock","src":"5830:168:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5851:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5854:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5844:6:48"},"nodeType":"YulFunctionCall","src":"5844:88:48"},"nodeType":"YulExpressionStatement","src":"5844:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5952:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5955:4:48","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5945:6:48"},"nodeType":"YulFunctionCall","src":"5945:15:48"},"nodeType":"YulExpressionStatement","src":"5945:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5980:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5983:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5973:6:48"},"nodeType":"YulFunctionCall","src":"5973:15:48"},"nodeType":"YulExpressionStatement","src":"5973:15:48"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5786:18:48"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5809:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"5817:2:48","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5806:2:48"},"nodeType":"YulFunctionCall","src":"5806:14:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5783:2:48"},"nodeType":"YulFunctionCall","src":"5783:38:48"},"nodeType":"YulIf","src":"5780:218:48"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5602:4:48","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5611:6:48","type":""}],"src":"5567:437:48"},{"body":{"nodeType":"YulBlock","src":"6183:223:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6200:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6211:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6193:6:48"},"nodeType":"YulFunctionCall","src":"6193:21:48"},"nodeType":"YulExpressionStatement","src":"6193:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6234:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6245:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6230:3:48"},"nodeType":"YulFunctionCall","src":"6230:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"6250:2:48","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6223:6:48"},"nodeType":"YulFunctionCall","src":"6223:30:48"},"nodeType":"YulExpressionStatement","src":"6223:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6273:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6284:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:48"},"nodeType":"YulFunctionCall","src":"6269:18:48"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"6289:34:48","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6262:6:48"},"nodeType":"YulFunctionCall","src":"6262:62:48"},"nodeType":"YulExpressionStatement","src":"6262:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6344:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6355:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6340:3:48"},"nodeType":"YulFunctionCall","src":"6340:18:48"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"6360:3:48","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6333:6:48"},"nodeType":"YulFunctionCall","src":"6333:31:48"},"nodeType":"YulExpressionStatement","src":"6333:31:48"},{"nodeType":"YulAssignment","src":"6373:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6385:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6396:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6381:3:48"},"nodeType":"YulFunctionCall","src":"6381:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6373:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6160:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6174:4:48","type":""}],"src":"6009:397:48"},{"body":{"nodeType":"YulBlock","src":"6585:251:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6602:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6613:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6595:6:48"},"nodeType":"YulFunctionCall","src":"6595:21:48"},"nodeType":"YulExpressionStatement","src":"6595:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6636:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6647:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6632:3:48"},"nodeType":"YulFunctionCall","src":"6632:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"6652:2:48","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6625:6:48"},"nodeType":"YulFunctionCall","src":"6625:30:48"},"nodeType":"YulExpressionStatement","src":"6625:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6675:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6686:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6671:3:48"},"nodeType":"YulFunctionCall","src":"6671:18:48"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"6691:34:48","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6664:6:48"},"nodeType":"YulFunctionCall","src":"6664:62:48"},"nodeType":"YulExpressionStatement","src":"6664:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6746:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6757:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:48"},"nodeType":"YulFunctionCall","src":"6742:18:48"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"6762:31:48","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6735:6:48"},"nodeType":"YulFunctionCall","src":"6735:59:48"},"nodeType":"YulExpressionStatement","src":"6735:59:48"},{"nodeType":"YulAssignment","src":"6803:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6815:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6826:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6811:3:48"},"nodeType":"YulFunctionCall","src":"6811:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6803:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6562:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6576:4:48","type":""}],"src":"6411:425:48"},{"body":{"nodeType":"YulBlock","src":"7015:235:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7032:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7043:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7025:6:48"},"nodeType":"YulFunctionCall","src":"7025:21:48"},"nodeType":"YulExpressionStatement","src":"7025:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7066:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7077:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7062:3:48"},"nodeType":"YulFunctionCall","src":"7062:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"7082:2:48","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7055:6:48"},"nodeType":"YulFunctionCall","src":"7055:30:48"},"nodeType":"YulExpressionStatement","src":"7055:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7105:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7116:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7101:3:48"},"nodeType":"YulFunctionCall","src":"7101:18:48"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"7121:34:48","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7094:6:48"},"nodeType":"YulFunctionCall","src":"7094:62:48"},"nodeType":"YulExpressionStatement","src":"7094:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7176:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7187:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7172:3:48"},"nodeType":"YulFunctionCall","src":"7172:18:48"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"7192:15:48","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7165:6:48"},"nodeType":"YulFunctionCall","src":"7165:43:48"},"nodeType":"YulExpressionStatement","src":"7165:43:48"},{"nodeType":"YulAssignment","src":"7217:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7229:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7240:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7225:3:48"},"nodeType":"YulFunctionCall","src":"7225:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7217:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6992:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7006:4:48","type":""}],"src":"6841:409:48"},{"body":{"nodeType":"YulBlock","src":"7429:174:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7446:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7457:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7439:6:48"},"nodeType":"YulFunctionCall","src":"7439:21:48"},"nodeType":"YulExpressionStatement","src":"7439:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7480:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7491:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7476:3:48"},"nodeType":"YulFunctionCall","src":"7476:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"7496:2:48","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7469:6:48"},"nodeType":"YulFunctionCall","src":"7469:30:48"},"nodeType":"YulExpressionStatement","src":"7469:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7519:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7530:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7515:3:48"},"nodeType":"YulFunctionCall","src":"7515:18:48"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"7535:26:48","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7508:6:48"},"nodeType":"YulFunctionCall","src":"7508:54:48"},"nodeType":"YulExpressionStatement","src":"7508:54:48"},{"nodeType":"YulAssignment","src":"7571:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7583:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7594:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7579:3:48"},"nodeType":"YulFunctionCall","src":"7579:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7571:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7406:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7420:4:48","type":""}],"src":"7255:348:48"},{"body":{"nodeType":"YulBlock","src":"7782:231:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7799:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7810:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7792:6:48"},"nodeType":"YulFunctionCall","src":"7792:21:48"},"nodeType":"YulExpressionStatement","src":"7792:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7833:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7844:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7829:3:48"},"nodeType":"YulFunctionCall","src":"7829:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"7849:2:48","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7822:6:48"},"nodeType":"YulFunctionCall","src":"7822:30:48"},"nodeType":"YulExpressionStatement","src":"7822:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7872:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7883:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7868:3:48"},"nodeType":"YulFunctionCall","src":"7868:18:48"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"7888:34:48","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7861:6:48"},"nodeType":"YulFunctionCall","src":"7861:62:48"},"nodeType":"YulExpressionStatement","src":"7861:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7943:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7954:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7939:3:48"},"nodeType":"YulFunctionCall","src":"7939:18:48"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7959:11:48","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7932:6:48"},"nodeType":"YulFunctionCall","src":"7932:39:48"},"nodeType":"YulExpressionStatement","src":"7932:39:48"},{"nodeType":"YulAssignment","src":"7980:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7992:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8003:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7988:3:48"},"nodeType":"YulFunctionCall","src":"7988:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7980:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7759:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7773:4:48","type":""}],"src":"7608:405:48"},{"body":{"nodeType":"YulBlock","src":"8192:227:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8209:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8220:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8202:6:48"},"nodeType":"YulFunctionCall","src":"8202:21:48"},"nodeType":"YulExpressionStatement","src":"8202:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8243:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8254:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8239:3:48"},"nodeType":"YulFunctionCall","src":"8239:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8259:2:48","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8232:6:48"},"nodeType":"YulFunctionCall","src":"8232:30:48"},"nodeType":"YulExpressionStatement","src":"8232:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8282:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8293:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8278:3:48"},"nodeType":"YulFunctionCall","src":"8278:18:48"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"8298:34:48","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8271:6:48"},"nodeType":"YulFunctionCall","src":"8271:62:48"},"nodeType":"YulExpressionStatement","src":"8271:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8353:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8364:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8349:3:48"},"nodeType":"YulFunctionCall","src":"8349:18:48"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"8369:7:48","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8342:6:48"},"nodeType":"YulFunctionCall","src":"8342:35:48"},"nodeType":"YulExpressionStatement","src":"8342:35:48"},{"nodeType":"YulAssignment","src":"8386:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8398:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8409:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8394:3:48"},"nodeType":"YulFunctionCall","src":"8394:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8386:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8169:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8183:4:48","type":""}],"src":"8018:401:48"},{"body":{"nodeType":"YulBlock","src":"8598:226:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8615:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8626:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8608:6:48"},"nodeType":"YulFunctionCall","src":"8608:21:48"},"nodeType":"YulExpressionStatement","src":"8608:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8649:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8660:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8645:3:48"},"nodeType":"YulFunctionCall","src":"8645:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8665:2:48","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8638:6:48"},"nodeType":"YulFunctionCall","src":"8638:30:48"},"nodeType":"YulExpressionStatement","src":"8638:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8688:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8699:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8684:3:48"},"nodeType":"YulFunctionCall","src":"8684:18:48"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8704:34:48","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8677:6:48"},"nodeType":"YulFunctionCall","src":"8677:62:48"},"nodeType":"YulExpressionStatement","src":"8677:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8759:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8770:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8755:3:48"},"nodeType":"YulFunctionCall","src":"8755:18:48"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8775:6:48","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8748:6:48"},"nodeType":"YulFunctionCall","src":"8748:34:48"},"nodeType":"YulExpressionStatement","src":"8748:34:48"},{"nodeType":"YulAssignment","src":"8791:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8803:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8814:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8799:3:48"},"nodeType":"YulFunctionCall","src":"8799:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8791:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8575:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8589:4:48","type":""}],"src":"8424:400:48"},{"body":{"nodeType":"YulBlock","src":"9003:182:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9020:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9031:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9013:6:48"},"nodeType":"YulFunctionCall","src":"9013:21:48"},"nodeType":"YulExpressionStatement","src":"9013:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9054:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9065:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9050:3:48"},"nodeType":"YulFunctionCall","src":"9050:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9043:6:48"},"nodeType":"YulFunctionCall","src":"9043:30:48"},"nodeType":"YulExpressionStatement","src":"9043:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9093:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9104:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9089:3:48"},"nodeType":"YulFunctionCall","src":"9089:18:48"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9109:34:48","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9082:6:48"},"nodeType":"YulFunctionCall","src":"9082:62:48"},"nodeType":"YulExpressionStatement","src":"9082:62:48"},{"nodeType":"YulAssignment","src":"9153:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9165:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9176:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9161:3:48"},"nodeType":"YulFunctionCall","src":"9161:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9153:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8980:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8994:4:48","type":""}],"src":"8829:356:48"},{"body":{"nodeType":"YulBlock","src":"9364:178:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9381:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9392:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9374:6:48"},"nodeType":"YulFunctionCall","src":"9374:21:48"},"nodeType":"YulExpressionStatement","src":"9374:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9415:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9426:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9411:3:48"},"nodeType":"YulFunctionCall","src":"9411:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"9431:2:48","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9404:6:48"},"nodeType":"YulFunctionCall","src":"9404:30:48"},"nodeType":"YulExpressionStatement","src":"9404:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9454:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9465:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9450:3:48"},"nodeType":"YulFunctionCall","src":"9450:18:48"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"9470:30:48","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9443:6:48"},"nodeType":"YulFunctionCall","src":"9443:58:48"},"nodeType":"YulExpressionStatement","src":"9443:58:48"},{"nodeType":"YulAssignment","src":"9510:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9522:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9533:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9518:3:48"},"nodeType":"YulFunctionCall","src":"9518:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9510:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9341:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9355:4:48","type":""}],"src":"9190:352:48"},{"body":{"nodeType":"YulBlock","src":"9721:236:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9738:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9749:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9731:6:48"},"nodeType":"YulFunctionCall","src":"9731:21:48"},"nodeType":"YulExpressionStatement","src":"9731:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9772:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9783:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9768:3:48"},"nodeType":"YulFunctionCall","src":"9768:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"9788:2:48","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9761:6:48"},"nodeType":"YulFunctionCall","src":"9761:30:48"},"nodeType":"YulExpressionStatement","src":"9761:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9811:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9822:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9807:3:48"},"nodeType":"YulFunctionCall","src":"9807:18:48"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"9827:34:48","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9800:6:48"},"nodeType":"YulFunctionCall","src":"9800:62:48"},"nodeType":"YulExpressionStatement","src":"9800:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9882:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9893:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9878:3:48"},"nodeType":"YulFunctionCall","src":"9878:18:48"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"9898:16:48","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9871:6:48"},"nodeType":"YulFunctionCall","src":"9871:44:48"},"nodeType":"YulExpressionStatement","src":"9871:44:48"},{"nodeType":"YulAssignment","src":"9924:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9936:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9947:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9932:3:48"},"nodeType":"YulFunctionCall","src":"9932:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9924:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9698:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9712:4:48","type":""}],"src":"9547:410:48"},{"body":{"nodeType":"YulBlock","src":"10136:175:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10153:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10164:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10146:6:48"},"nodeType":"YulFunctionCall","src":"10146:21:48"},"nodeType":"YulExpressionStatement","src":"10146:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10187:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10198:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10183:3:48"},"nodeType":"YulFunctionCall","src":"10183:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"10203:2:48","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10176:6:48"},"nodeType":"YulFunctionCall","src":"10176:30:48"},"nodeType":"YulExpressionStatement","src":"10176:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10226:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10237:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10222:3:48"},"nodeType":"YulFunctionCall","src":"10222:18:48"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"10242:27:48","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10215:6:48"},"nodeType":"YulFunctionCall","src":"10215:55:48"},"nodeType":"YulExpressionStatement","src":"10215:55:48"},{"nodeType":"YulAssignment","src":"10279:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10291:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10302:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10287:3:48"},"nodeType":"YulFunctionCall","src":"10287:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10279:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10113:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10127:4:48","type":""}],"src":"9962:349:48"},{"body":{"nodeType":"YulBlock","src":"10490:240:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10507:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10518:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10500:6:48"},"nodeType":"YulFunctionCall","src":"10500:21:48"},"nodeType":"YulExpressionStatement","src":"10500:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10541:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10552:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10537:3:48"},"nodeType":"YulFunctionCall","src":"10537:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"10557:2:48","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10530:6:48"},"nodeType":"YulFunctionCall","src":"10530:30:48"},"nodeType":"YulExpressionStatement","src":"10530:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10580:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10591:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10576:3:48"},"nodeType":"YulFunctionCall","src":"10576:18:48"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"10596:34:48","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10569:6:48"},"nodeType":"YulFunctionCall","src":"10569:62:48"},"nodeType":"YulExpressionStatement","src":"10569:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10651:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10662:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10647:3:48"},"nodeType":"YulFunctionCall","src":"10647:18:48"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"10667:20:48","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10640:6:48"},"nodeType":"YulFunctionCall","src":"10640:48:48"},"nodeType":"YulExpressionStatement","src":"10640:48:48"},{"nodeType":"YulAssignment","src":"10697:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10709:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10720:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10705:3:48"},"nodeType":"YulFunctionCall","src":"10705:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10697:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10467:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10481:4:48","type":""}],"src":"10316:414:48"},{"body":{"nodeType":"YulBlock","src":"10938:309:48","statements":[{"nodeType":"YulVariableDeclaration","src":"10948:52:48","value":{"kind":"number","nodeType":"YulLiteral","src":"10958:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10952:2:48","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11016:9:48"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11031:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"11039:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11027:3:48"},"nodeType":"YulFunctionCall","src":"11027:15:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11009:6:48"},"nodeType":"YulFunctionCall","src":"11009:34:48"},"nodeType":"YulExpressionStatement","src":"11009:34:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11063:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11074:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11059:3:48"},"nodeType":"YulFunctionCall","src":"11059:18:48"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11083:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"11091:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11079:3:48"},"nodeType":"YulFunctionCall","src":"11079:15:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11052:6:48"},"nodeType":"YulFunctionCall","src":"11052:43:48"},"nodeType":"YulExpressionStatement","src":"11052:43:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11115:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11126:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11111:3:48"},"nodeType":"YulFunctionCall","src":"11111:18:48"},{"name":"value2","nodeType":"YulIdentifier","src":"11131:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11104:6:48"},"nodeType":"YulFunctionCall","src":"11104:34:48"},"nodeType":"YulExpressionStatement","src":"11104:34:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11158:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11169:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11154:3:48"},"nodeType":"YulFunctionCall","src":"11154:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"11174:3:48","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11147:6:48"},"nodeType":"YulFunctionCall","src":"11147:31:48"},"nodeType":"YulExpressionStatement","src":"11147:31:48"},{"nodeType":"YulAssignment","src":"11187:54:48","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11213:6:48"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11225:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11236:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11221:3:48"},"nodeType":"YulFunctionCall","src":"11221:19:48"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11195:17:48"},"nodeType":"YulFunctionCall","src":"11195:46:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11187:4:48"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10883:9:48","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10894:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10902:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10910:6:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10918:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10929:4:48","type":""}],"src":"10735:512:48"},{"body":{"nodeType":"YulBlock","src":"11332:169:48","statements":[{"body":{"nodeType":"YulBlock","src":"11378:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11387:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11390:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11380:6:48"},"nodeType":"YulFunctionCall","src":"11380:12:48"},"nodeType":"YulExpressionStatement","src":"11380:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11353:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"11362:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11349:3:48"},"nodeType":"YulFunctionCall","src":"11349:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"11374:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11345:3:48"},"nodeType":"YulFunctionCall","src":"11345:32:48"},"nodeType":"YulIf","src":"11342:52:48"},{"nodeType":"YulVariableDeclaration","src":"11403:29:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11422:9:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11416:5:48"},"nodeType":"YulFunctionCall","src":"11416:16:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11407:5:48","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11465:5:48"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"11441:23:48"},"nodeType":"YulFunctionCall","src":"11441:30:48"},"nodeType":"YulExpressionStatement","src":"11441:30:48"},{"nodeType":"YulAssignment","src":"11480:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"11490:5:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11480:6:48"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11298:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11309:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11321:6:48","type":""}],"src":"11252:249:48"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":48,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021b57600080fd5b806370a08231146101a557806371ac0e50146101c657806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046110e1565b610257565b60405190151581526020015b60405180910390f35b61011f610282565b60405161010e919061114b565b61013f61013a36600461115e565b610314565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611193565b61033b565b005b61016a61017a3660046111bd565b610472565b61016a61018d3660046111bd565b6104e9565b61013f6101a036600461115e565b610504565b6101b86101b33660046111f9565b610569565b60405190815260200161010e565b6101b86101d43660046112a0565b610603565b61011f61063b565b61016a6101ef366004611302565b61064a565b61016a61020236600461133e565b610659565b61011f61021536600461115e565b50606090565b6101026102293660046113ba565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216632483248360e11b148061027c575061027c826106d7565b92915050565b606060008054610291906113ed565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906113ed565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b600061031f826106fc565b506000908152600460205260409020546001600160a01b031690565b600061034682610504565b9050806001600160a01b0316836001600160a01b031614156103d55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806103f157506103f18133610229565b6104635760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103cc565b61046d8383610763565b505050565b61047c33826107de565b6104de5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016103cc565b61046d83838361085d565b61046d83838360405180602001604052806000815250610659565b6000818152600260205260408120546001600160a01b03168061027c5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103cc565b60006001600160a01b0382166105e75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016103cc565b506001600160a01b031660009081526003602052604090205490565b6000610613600780546001019055565b600061061e60075490565b905061062a8482610a63565b6106348184610bfb565b9392505050565b606060018054610291906113ed565b610655338383610cdc565b5050565b61066333836107de565b6106c55760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016103cc565b6106d184848484610dab565b50505050565b60006001600160e01b03198216632483248360e11b148061027c575061027c82610e34565b6000818152600260205260409020546001600160a01b03166107605760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103cc565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906107a582610504565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806107ea83610504565b9050806001600160a01b0316846001600160a01b0316148061083157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108555750836001600160a01b031661084a84610314565b6001600160a01b0316145b949350505050565b826001600160a01b031661087082610504565b6001600160a01b0316146108d45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103cc565b6001600160a01b03821661094f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103cc565b826001600160a01b031661096282610504565b6001600160a01b0316146109c65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103cc565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610ab95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103cc565b6000818152600260205260409020546001600160a01b031615610b1e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103cc565b6000818152600260205260409020546001600160a01b031615610b835760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103cc565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610c855760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016103cc565b60008281526006602090815260409091208251610ca492840190611032565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b816001600160a01b0316836001600160a01b03161415610d3e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103cc565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610db684848461085d565b610dc284848484610ecf565b6106d15760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103cc565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480610e9757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061027c57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461027c565b60006001600160a01b0384163b1561102757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f13903390899088908890600401611428565b602060405180830381600087803b158015610f2d57600080fd5b505af1925050508015610f5d575060408051601f3d908101601f19168201909252610f5a91810190611464565b60015b61100d573d808015610f8b576040519150601f19603f3d011682016040523d82523d6000602084013e610f90565b606091505b5080516110055760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103cc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610855565b506001949350505050565b82805461103e906113ed565b90600052602060002090601f01602090048101928261106057600085556110a6565b82601f1061107957805160ff19168380011785556110a6565b828001600101855582156110a6579182015b828111156110a657825182559160200191906001019061108b565b506110b29291506110b6565b5090565b5b808211156110b257600081556001016110b7565b6001600160e01b03198116811461076057600080fd5b6000602082840312156110f357600080fd5b8135610634816110cb565b6000815180845260005b8181101561112457602081850181015186830182015201611108565b81811115611136576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061063460208301846110fe565b60006020828403121561117057600080fd5b5035919050565b80356001600160a01b038116811461118e57600080fd5b919050565b600080604083850312156111a657600080fd5b6111af83611177565b946020939093013593505050565b6000806000606084860312156111d257600080fd5b6111db84611177565b92506111e960208501611177565b9150604084013590509250925092565b60006020828403121561120b57600080fd5b61063482611177565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561124557611245611214565b604051601f8501601f19908116603f0116810190828211818310171561126d5761126d611214565b8160405280935085815286868601111561128657600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156112b357600080fd5b6112bc83611177565b9150602083013567ffffffffffffffff8111156112d857600080fd5b8301601f810185136112e957600080fd5b6112f88582356020840161122a565b9150509250929050565b6000806040838503121561131557600080fd5b61131e83611177565b91506020830135801515811461133357600080fd5b809150509250929050565b6000806000806080858703121561135457600080fd5b61135d85611177565b935061136b60208601611177565b925060408501359150606085013567ffffffffffffffff81111561138e57600080fd5b8501601f8101871361139f57600080fd5b6113ae8782356020840161122a565b91505092959194509250565b600080604083850312156113cd57600080fd5b6113d683611177565b91506113e460208401611177565b90509250929050565b600181811c9082168061140157607f821691505b6020821081141561142257634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261145a60808301846110fe565b9695505050505050565b60006020828403121561147657600080fd5b8151610634816110cb56fea26469706673582212204c8acbf8a676ffc2784cba3c96921a488dfeafe30e6ec75e5fd79913ea6d81db64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x71AC0E50 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x63B JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x16A PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST POP PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x27C JUMPI POP PUSH2 0x27C DUP3 PUSH2 0x6D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x13ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD SWAP1 PUSH2 0x13ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F DUP3 PUSH2 0x6FC JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 DUP3 PUSH2 0x504 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3F1 JUMPI POP PUSH2 0x3F1 DUP2 CALLER PUSH2 0x229 JUMP JUMPDEST PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x46D DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x47C CALLER DUP3 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x46D DUP4 DUP4 DUP4 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x46D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x659 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x613 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x62A DUP5 DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x634 DUP2 DUP5 PUSH2 0xBFB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x655 CALLER DUP4 DUP4 PUSH2 0xCDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x663 CALLER DUP4 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x6D1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x27C JUMPI POP PUSH2 0x27C DUP3 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x7A5 DUP3 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7EA DUP4 PUSH2 0x504 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x831 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x855 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84A DUP5 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x870 DUP3 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x962 DUP3 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xCA4 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1032 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP5 DUP5 DUP5 PUSH2 0x85D JUMP JUMPDEST PUSH2 0xDC2 DUP5 DUP5 DUP5 DUP5 PUSH2 0xECF JUMP JUMPDEST PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0xE97 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x27C JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x27C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF13 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF5A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x103E SWAP1 PUSH2 0x13ED JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1060 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10A6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1079 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x10A6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10A6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10A6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x108B JUMP JUMPDEST POP PUSH2 0x10B2 SWAP3 SWAP2 POP PUSH2 0x10B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x634 DUP2 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1108 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x634 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x118E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11AF DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11DB DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP3 POP PUSH2 0x11E9 PUSH1 0x20 DUP6 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x634 DUP3 PUSH2 0x1177 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1245 JUMPI PUSH2 0x1245 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x126D JUMPI PUSH2 0x126D PUSH2 0x1214 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12BC DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x12E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F8 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x122A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131E DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135D DUP6 PUSH2 0x1177 JUMP JUMPDEST SWAP4 POP PUSH2 0x136B PUSH1 0x20 DUP7 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x139F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AE DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x122A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D6 DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E4 PUSH1 0x20 DUP5 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1401 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1422 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x145A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x634 DUP2 PUSH2 0x10CB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DUP11 0xCB 0xF8 0xA6 PUSH23 0xFFC2784CBA3C96921A488DFEAFE30E6EC75E5FD79913EA PUSH14 0x81DB64736F6C6343000809003300 ","sourceMap":"191:915:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:214;;;;;;:::i;:::-;;:::i;:::-;;;611:14:48;;604:22;586:41;;574:2;559:18;672:214:0;;;;;;;;2471:98:16;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1689:55:48;;;1671:74;;1659:2;1644:18;3935:167:16;1525:226:48;3468:406:16;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2886:25:48;;;2874:2;2859:18;1929:204:16;2740:177:48;376:290:0;;;;;;:::i;:::-;;:::i;2633:102:16:-;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;988:116:0:-;;;;;;:::i;:::-;-1:-1:-1;1087:13:0;;988:116;4388:162:16;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;672:214:0;783:4;-1:-1:-1;;;;;;806:33:0;;-1:-1:-1;;;806:33:0;;:73;;;843:36;867:11;843:23;:36::i;:::-;799:80;672:214;-1:-1:-1;;672:214:0:o;2471:98:16:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:16;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:16;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:16;:2;-1:-1:-1;;;;;3605:11:16;;;3597:57;;;;-1:-1:-1;;;3597:57:16;;6211:2:48;3597:57:16;;;6193:21:48;6250:2;6230:18;;;6223:30;6289:34;6269:18;;;6262:62;6360:3;6340:18;;;6333:31;6381:19;;3597:57:16;;;;;;;;;719:10:34;-1:-1:-1;;;;;3686:21:16;;;;:62;;-1:-1:-1;3711:37:16;3728:5;719:10:34;4388:162:16;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:16;;6613:2:48;3665:170:16;;;6595:21:48;6652:2;6632:18;;;6625:30;6691:34;6671:18;;;6664:62;6762:31;6742:18;;;6735:59;6811:19;;3665:170:16;6411:425:48;3665:170:16;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:34;4804:7:16;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:16;;7043:2:48;4763:99:16;;;7025:21:48;7082:2;7062:18;;;7055:30;7121:34;7101:18;;;7094:62;-1:-1:-1;;;7172:18:48;;;7165:43;7225:19;;4763:99:16;6841:409:48;4763:99:16;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;;2324:56;;;;-1:-1:-1;;;2324:56:16;;7457:2:48;2324:56:16;;;7439:21:48;7496:2;7476:18;;;7469:30;7535:26;7515:18;;;7508:54;7579:18;;2324:56:16;7255:348:48;1929:204:16;2001:7;-1:-1:-1;;;;;2028:19:16;;2020:73;;;;-1:-1:-1;;;2020:73:16;;7810:2:48;2020:73:16;;;7792:21:48;7849:2;7829:18;;;7822:30;7888:34;7868:18;;;7861:62;7959:11;7939:18;;;7932:39;7988:19;;2020:73:16;7608:405:48;2020:73:16;-1:-1:-1;;;;;;2110:16:16;;;;;:9;:16;;;;;;;1929:204::o;376:290:0:-;458:7;477:21;:9;1032:19:35;;1050:1;1032:19;;;945:123;477:21:0;508:18;529:19;:9;918:14:35;;827:112;529:19:0;508:40;;558:28;564:9;575:10;558:5;:28::i;:::-;596:35;609:10;621:9;596:12;:35::i;:::-;649:10;376:290;-1:-1:-1;;;376:290:0:o;2633:102:16:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:34;4296:8:16;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:34;5352:7:16;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:16;;7043:2:48;5311:99:16;;;7025:21:48;7082:2;7062:18;;;7055:30;7121:34;7101:18;;;7094:62;-1:-1:-1;;;7172:18:48;;;7165:43;7225:19;;5311:99:16;6841:409:48;5311:99:16;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;535:205:24:-;637:4;-1:-1:-1;;;;;;660:33:24;;-1:-1:-1;;;660:33:24;;:73;;;697:36;721:11;697:23;:36::i;13240:133:16:-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;13313:53;;;;-1:-1:-1;;;13313:53:16;;7457:2:48;13313:53:16;;;7439:21:48;7496:2;7476:18;;;7469:30;7535:26;7515:18;;;7508:54;7579:18;;13313:53:16;7255:348:48;13313:53:16;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;12646:29:16;-1:-1:-1;;;;;12646:29:16;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:16;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:16;:7;-1:-1:-1;;;;;7570:16:16;;:52;;;-1:-1:-1;;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:16;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:16;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:16:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:16;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:16;;11346:81;;;;-1:-1:-1;;;11346:81:16;;8220:2:48;11346:81:16;;;8202:21:48;8259:2;8239:18;;;8232:30;8298:34;8278:18;;;8271:62;-1:-1:-1;;;8349:18:48;;;8342:35;8394:19;;11346:81:16;8018:401:48;11346:81:16;-1:-1:-1;;;;;11445:16:16;;11437:65;;;;-1:-1:-1;;;11437:65:16;;8626:2:48;11437:65:16;;;8608:21:48;8665:2;8645:18;;;8638:30;8704:34;8684:18;;;8677:62;8775:6;8755:18;;;8748:34;8799:19;;11437:65:16;8424:400:48;11437:65:16;11682:4;-1:-1:-1;;;;;11655:31:16;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:16;;11647:81;;;;-1:-1:-1;;;11647:81:16;;8220:2:48;11647:81:16;;;8202:21:48;8259:2;8239:18;;;8232:30;8298:34;8278:18;;;8271:62;-1:-1:-1;;;8349:18:48;;;8342:35;8394:19;;11647:81:16;8018:401:48;11647:81:16;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;11790:31:16;;;;;;-1:-1:-1;;;;;12265:15:16;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:16;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;8925:920::-;-1:-1:-1;;;;;9004:16:16;;8996:61;;;;-1:-1:-1;;;8996:61:16;;9031:2:48;8996:61:16;;;9013:21:48;;;9050:18;;;9043:30;9109:34;9089:18;;;9082:62;9161:18;;8996:61:16;8829:356:48;8996:61:16;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:16;;9392:2:48;9067:58:16;;;9374:21:48;9431:2;9411:18;;;9404:30;9470;9450:18;;;9443:58;9518:18;;9067:58:16;9190:352:48;9067:58:16;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:16;;9392:2:48;9271:58:16;;;9374:21:48;9431:2;9411:18;;;9404:30;9470;9450:18;;;9443:58;9518:18;;9271:58:16;9190:352:48;9271:58:16;-1:-1:-1;;;;;9671:13:16;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;9710:21:16;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;1599:253:24:-;7185:4:16;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;1690:75:24;;;;-1:-1:-1;;;1690:75:24;;9749:2:48;1690:75:24;;;9731:21:48;9788:2;9768:18;;;9761:30;9827:34;9807:18;;;9800:62;9898:16;9878:18;;;9871:44;9932:19;;1690:75:24;9547:410:48;1690:75:24;1775:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;:::-;-1:-1:-1;1822:23:24;;2886:25:48;;;1822:23:24;;2874:2:48;2859:18;1822:23:24;;;;;;;1599:253;;:::o;12879:277:16:-;12999:8;-1:-1:-1;;;;;12990:17:16;:5;-1:-1:-1;;;;;12990:17:16;;;12982:55;;;;-1:-1:-1;;;12982:55:16;;10164:2:48;12982:55:16;;;10146:21:48;10203:2;10183:18;;;10176:30;10242:27;10222:18;;;10215:55;10287:18;;12982:55:16;9962:349:48;12982:55:16;-1:-1:-1;;;;;13047:25:16;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:16;;;;;;;;;;13108:41;;586::48;;;13108::16;;559:18:48;13108:41:16;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:16;;10518:2:48;6476:110:16;;;10500:21:48;10557:2;10537:18;;;10530:30;10596:34;10576:18;;;10569:62;10667:20;10647:18;;;10640:48;10705:19;;6476:110:16;10316:414:48;1570:300:16;1672:4;-1:-1:-1;;;;;;1707:40:16;;1722:25;1707:40;;:104;;-1:-1:-1;;;;;;;1763:48:16;;1778:33;1763:48;1707:104;:156;;;-1:-1:-1;952:25:41;-1:-1:-1;;;;;;937:40:41;;;1827:36:16;829:155:41;13925:831:16;14074:4;-1:-1:-1;;;;;14094:13:16;;1702:19:32;:23;14090:660:16;;14129:71;;-1:-1:-1;;;14129:71:16;;-1:-1:-1;;;;;14129:36:16;;;;;:71;;719:10:34;;14180:4:16;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:16;;;;;;;;-1:-1:-1;;14129:71:16;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14367:13:16;;14363:321;;14409:60;;-1:-1:-1;;;14409:60:16;;10518:2:48;14409:60:16;;;10500:21:48;10557:2;10537:18;;;10530:30;10596:34;10576:18;;;10569:62;10667:20;10647:18;;;10640:48;10705:19;;14409:60:16;10316:414:48;14363:321:16;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:16;-1:-1:-1;;;14250:51:16;;-1:-1:-1;14243:58:16;;14090:660;-1:-1:-1;14735:4:16;13925:831;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:48;-1:-1:-1;;;;;;92:5:48;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:472::-;680:3;718:5;712:12;745:6;740:3;733:19;770:1;780:162;794:6;791:1;788:13;780:162;;;856:4;912:13;;;908:22;;902:29;884:11;;;880:20;;873:59;809:12;780:162;;;960:6;957:1;954:13;951:87;;;1026:1;1019:4;1010:6;1005:3;1001:16;997:27;990:38;951:87;-1:-1:-1;1092:2:48;1071:15;-1:-1:-1;;1067:29:48;1058:39;;;;1099:4;1054:50;;638:472;-1:-1:-1;;638:472:48:o;1115:220::-;1264:2;1253:9;1246:21;1227:4;1284:45;1325:2;1314:9;1310:18;1302:6;1284:45;:::i;1340:180::-;1399:6;1452:2;1440:9;1431:7;1427:23;1423:32;1420:52;;;1468:1;1465;1458:12;1420:52;-1:-1:-1;1491:23:48;;1340:180;-1:-1:-1;1340:180:48:o;1756:196::-;1824:20;;-1:-1:-1;;;;;1873:54:48;;1863:65;;1853:93;;1942:1;1939;1932:12;1853:93;1756:196;;;:::o;1957:254::-;2025:6;2033;2086:2;2074:9;2065:7;2061:23;2057:32;2054:52;;;2102:1;2099;2092:12;2054:52;2125:29;2144:9;2125:29;:::i;:::-;2115:39;2201:2;2186:18;;;;2173:32;;-1:-1:-1;;;1957:254:48:o;2216:328::-;2293:6;2301;2309;2362:2;2350:9;2341:7;2337:23;2333:32;2330:52;;;2378:1;2375;2368:12;2330:52;2401:29;2420:9;2401:29;:::i;:::-;2391:39;;2449:38;2483:2;2472:9;2468:18;2449:38;:::i;:::-;2439:48;;2534:2;2523:9;2519:18;2506:32;2496:42;;2216:328;;;;;:::o;2549:186::-;2608:6;2661:2;2649:9;2640:7;2636:23;2632:32;2629:52;;;2677:1;2674;2667:12;2629:52;2700:29;2719:9;2700:29;:::i;2922:184::-;-1:-1:-1;;;2971:1:48;2964:88;3071:4;3068:1;3061:15;3095:4;3092:1;3085:15;3111:632;3176:5;3206:18;3247:2;3239:6;3236:14;3233:40;;;3253:18;;:::i;:::-;3328:2;3322:9;3296:2;3382:15;;-1:-1:-1;;3378:24:48;;;3404:2;3374:33;3370:42;3358:55;;;3428:18;;;3448:22;;;3425:46;3422:72;;;3474:18;;:::i;:::-;3514:10;3510:2;3503:22;3543:6;3534:15;;3573:6;3565;3558:22;3613:3;3604:6;3599:3;3595:16;3592:25;3589:45;;;3630:1;3627;3620:12;3589:45;3680:6;3675:3;3668:4;3660:6;3656:17;3643:44;3735:1;3728:4;3719:6;3711;3707:19;3703:30;3696:41;;;;3111:632;;;;;:::o;3748:525::-;3826:6;3834;3887:2;3875:9;3866:7;3862:23;3858:32;3855:52;;;3903:1;3900;3893:12;3855:52;3926:29;3945:9;3926:29;:::i;:::-;3916:39;;4006:2;3995:9;3991:18;3978:32;4033:18;4025:6;4022:30;4019:50;;;4065:1;4062;4055:12;4019:50;4088:22;;4141:4;4133:13;;4129:27;-1:-1:-1;4119:55:48;;4170:1;4167;4160:12;4119:55;4193:74;4259:7;4254:2;4241:16;4236:2;4232;4228:11;4193:74;:::i;:::-;4183:84;;;3748:525;;;;;:::o;4278:347::-;4343:6;4351;4404:2;4392:9;4383:7;4379:23;4375:32;4372:52;;;4420:1;4417;4410:12;4372:52;4443:29;4462:9;4443:29;:::i;:::-;4433:39;;4522:2;4511:9;4507:18;4494:32;4569:5;4562:13;4555:21;4548:5;4545:32;4535:60;;4591:1;4588;4581:12;4535:60;4614:5;4604:15;;;4278:347;;;;;:::o;4630:667::-;4725:6;4733;4741;4749;4802:3;4790:9;4781:7;4777:23;4773:33;4770:53;;;4819:1;4816;4809:12;4770:53;4842:29;4861:9;4842:29;:::i;:::-;4832:39;;4890:38;4924:2;4913:9;4909:18;4890:38;:::i;:::-;4880:48;;4975:2;4964:9;4960:18;4947:32;4937:42;;5030:2;5019:9;5015:18;5002:32;5057:18;5049:6;5046:30;5043:50;;;5089:1;5086;5079:12;5043:50;5112:22;;5165:4;5157:13;;5153:27;-1:-1:-1;5143:55:48;;5194:1;5191;5184:12;5143:55;5217:74;5283:7;5278:2;5265:16;5260:2;5256;5252:11;5217:74;:::i;:::-;5207:84;;;4630:667;;;;;;;:::o;5302:260::-;5370:6;5378;5431:2;5419:9;5410:7;5406:23;5402:32;5399:52;;;5447:1;5444;5437:12;5399:52;5470:29;5489:9;5470:29;:::i;:::-;5460:39;;5518:38;5552:2;5541:9;5537:18;5518:38;:::i;:::-;5508:48;;5302:260;;;;;:::o;5567:437::-;5646:1;5642:12;;;;5689;;;5710:61;;5764:4;5756:6;5752:17;5742:27;;5710:61;5817:2;5809:6;5806:14;5786:18;5783:38;5780:218;;;-1:-1:-1;;;5851:1:48;5844:88;5955:4;5952:1;5945:15;5983:4;5980:1;5973:15;5780:218;;5567:437;;;:::o;10735:512::-;10929:4;-1:-1:-1;;;;;11039:2:48;11031:6;11027:15;11016:9;11009:34;11091:2;11083:6;11079:15;11074:2;11063:9;11059:18;11052:43;;11131:6;11126:2;11115:9;11111:18;11104:34;11174:3;11169:2;11158:9;11154:18;11147:31;11195:46;11236:3;11225:9;11221:19;11213:6;11195:46;:::i;:::-;11187:54;10735:512;-1:-1:-1;;;;;;10735:512:48:o;11252:249::-;11321:6;11374:2;11362:9;11353:7;11349:23;11345:32;11342:52;;;11390:1;11387;11380:12;11342:52;11422:9;11416:16;11441:30;11465:5;11441:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintTokenite(address,string)":"71ac0e50","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintTokenite\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tokenite.sol\":\"Tokenite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Tokenite.sol\":{\"keccak256\":\"0x7a41a003d45299a19f7fe36becd1661a4db057d63925136eba0969f9cdf36548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32b61836ef0c53eec2b68b078f4ae6ab448736fcd59aba672c74450a003e9184\",\"dweb:/ipfs/QmdgAsBFJJAqDiBMzDxVJqcFqbHsnekv9FS4G52F1HxyWe\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}"}},"contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_beforeTokenTransfer}). _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the contract's {EIP712} domain separator.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns an address nonce.\"}},\"stateVariables\":{\"_delegateCheckpoints\":{\"custom:oz-retyped-from\":\"mapping(address => Checkpoints.History)\"},\"_totalCheckpoints\":{\"custom:oz-retyped-from\":\"Checkpoints.History\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x215ab7b366363cdaa7e60b21cea73ded788f21b870dfe52b58a00047158f7fa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d55979017ebe0d987578f73b989582a7482baba1d091f55cefb793b7cacaec\",\"dweb:/ipfs/QmYqGx2nyygkrGn1WQALa6cFjKEAMFyeqGpYYcPnzrfdmB\"]},\"contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/interfaces/IERC2309.sol":{"IERC2309":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"fromAddress","type":"address"},{"indexed":true,"internalType":"address","name":"toAddress","type":"address"}],"name":"ConsecutiveTransfer","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-2309: ERC-721 Consecutive Transfer Extension. _Available since v4.8._\",\"events\":{\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when the tokens from `fromTokenId` to `toTokenId` are transferred from `fromAddress` to `toAddress`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC2309.sol\":\"IERC2309\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC2309.sol\":{\"keccak256\":\"0x769b8c97e7ceca35514f85dcf77ea7e9da1c9a3b3b9c119dda811cd8394aa601\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://113df79cc1cae24c055be91b41febfa2dbb28089c969547f7ca3ca5d23d308f6\",\"dweb:/ipfs/QmTwrtF69W9G3t9VbUjF6P1m6jNW4dh6y3kE5vQqUdsSnr\"]}},\"version\":1}"}},"contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1550":{"entryPoint":null,"id":1550,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":270,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:48","statements":[{"nodeType":"YulBlock","src":"6:3:48","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:48","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:48","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:48","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:48"},"nodeType":"YulFunctionCall","src":"66:20:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:48"},"nodeType":"YulFunctionCall","src":"56:31:48"},"nodeType":"YulExpressionStatement","src":"56:31:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:48","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:48"},"nodeType":"YulFunctionCall","src":"96:15:48"},"nodeType":"YulExpressionStatement","src":"96:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:48"},"nodeType":"YulFunctionCall","src":"120:15:48"},"nodeType":"YulExpressionStatement","src":"120:15:48"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:48"},{"body":{"nodeType":"YulBlock","src":"210:821:48","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:48"},"nodeType":"YulFunctionCall","src":"261:12:48"},"nodeType":"YulExpressionStatement","src":"261:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:48"},"nodeType":"YulFunctionCall","src":"234:17:48"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:48"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:48"},"nodeType":"YulFunctionCall","src":"230:27:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:48"},"nodeType":"YulFunctionCall","src":"223:35:48"},"nodeType":"YulIf","src":"220:55:48"},{"nodeType":"YulVariableDeclaration","src":"284:23:48","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:48"},"nodeType":"YulFunctionCall","src":"294:13:48"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:48","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:48","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:48","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:48"},"nodeType":"YulFunctionCall","src":"330:10:48"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:48","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:48"},"nodeType":"YulFunctionCall","src":"326:18:48"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:48"},"nodeType":"YulFunctionCall","src":"369:18:48"},"nodeType":"YulExpressionStatement","src":"369:18:48"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:48"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:48"},"nodeType":"YulFunctionCall","src":"356:10:48"},"nodeType":"YulIf","src":"353:36:48"},{"nodeType":"YulVariableDeclaration","src":"398:17:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:48"},"nodeType":"YulFunctionCall","src":"408:7:48"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:48","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:48"},"nodeType":"YulFunctionCall","src":"438:9:48"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:48","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:48"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:48"},"nodeType":"YulFunctionCall","src":"498:13:48"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:48"},"nodeType":"YulFunctionCall","src":"494:22:48"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:48","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:48"},"nodeType":"YulFunctionCall","src":"490:31:48"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:48"},"nodeType":"YulFunctionCall","src":"486:40:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:48"},"nodeType":"YulFunctionCall","src":"474:53:48"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:48"},"nodeType":"YulFunctionCall","src":"588:18:48"},"nodeType":"YulExpressionStatement","src":"588:18:48"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:48"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:48"},"nodeType":"YulFunctionCall","src":"542:18:48"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:48"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:48"},"nodeType":"YulFunctionCall","src":"562:22:48"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:48"},"nodeType":"YulFunctionCall","src":"539:46:48"},"nodeType":"YulIf","src":"536:72:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:48","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:48"},"nodeType":"YulFunctionCall","src":"617:22:48"},"nodeType":"YulExpressionStatement","src":"617:22:48"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:48"},"nodeType":"YulFunctionCall","src":"648:18:48"},"nodeType":"YulExpressionStatement","src":"648:18:48"},{"nodeType":"YulVariableDeclaration","src":"675:14:48","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:48","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:48"},"nodeType":"YulFunctionCall","src":"737:12:48"},"nodeType":"YulExpressionStatement","src":"737:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:48"},"nodeType":"YulFunctionCall","src":"708:15:48"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:48"},"nodeType":"YulFunctionCall","src":"704:24:48"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:48"},"nodeType":"YulFunctionCall","src":"701:33:48"},"nodeType":"YulIf","src":"698:53:48"},{"nodeType":"YulVariableDeclaration","src":"760:10:48","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:48","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:48","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:48"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:48"},"nodeType":"YulFunctionCall","src":"850:14:48"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:48"},"nodeType":"YulFunctionCall","src":"846:23:48"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:48"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:48"},"nodeType":"YulFunctionCall","src":"881:14:48"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:48"},"nodeType":"YulFunctionCall","src":"877:23:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:48"},"nodeType":"YulFunctionCall","src":"871:30:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:48"},"nodeType":"YulFunctionCall","src":"839:63:48"},"nodeType":"YulExpressionStatement","src":"839:63:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:48"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:48"},"nodeType":"YulFunctionCall","src":"787:9:48"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:48","statements":[{"nodeType":"YulAssignment","src":"799:15:48","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:48"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:48"},"nodeType":"YulFunctionCall","src":"804:10:48"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:48"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:48","statements":[]},"src":"779:133:48"},{"body":{"nodeType":"YulBlock","src":"942:59:48","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:48"},"nodeType":"YulFunctionCall","src":"967:15:48"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:48"},"nodeType":"YulFunctionCall","src":"963:24:48"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:48"},"nodeType":"YulFunctionCall","src":"956:35:48"},"nodeType":"YulExpressionStatement","src":"956:35:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:48"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:48"},"nodeType":"YulFunctionCall","src":"924:9:48"},"nodeType":"YulIf","src":"921:80:48"},{"nodeType":"YulAssignment","src":"1010:15:48","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:48"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:48"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:48","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:48","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:48","type":""}],"src":"146:885:48"},{"body":{"nodeType":"YulBlock","src":"1154:444:48","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:48"},"nodeType":"YulFunctionCall","src":"1202:12:48"},"nodeType":"YulExpressionStatement","src":"1202:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:48"},"nodeType":"YulFunctionCall","src":"1171:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:48"},"nodeType":"YulFunctionCall","src":"1167:32:48"},"nodeType":"YulIf","src":"1164:52:48"},{"nodeType":"YulVariableDeclaration","src":"1225:30:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:48"},"nodeType":"YulFunctionCall","src":"1239:16:48"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:48","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:48","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:48","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:48"},"nodeType":"YulFunctionCall","src":"1278:10:48"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:48","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:48"},"nodeType":"YulFunctionCall","src":"1274:18:48"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:48"},"nodeType":"YulFunctionCall","src":"1321:12:48"},"nodeType":"YulExpressionStatement","src":"1321:12:48"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:48"},"nodeType":"YulFunctionCall","src":"1304:14:48"},"nodeType":"YulIf","src":"1301:34:48"},{"nodeType":"YulAssignment","src":"1344:71:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:48"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:48"},"nodeType":"YulFunctionCall","src":"1383:22:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:48"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:48"},"nodeType":"YulFunctionCall","src":"1354:61:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:48"},"nodeType":"YulFunctionCall","src":"1446:18:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:48"},"nodeType":"YulFunctionCall","src":"1440:25:48"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:48"},"nodeType":"YulFunctionCall","src":"1496:12:48"},"nodeType":"YulExpressionStatement","src":"1496:12:48"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:48"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:48"},"nodeType":"YulFunctionCall","src":"1477:16:48"},"nodeType":"YulIf","src":"1474:36:48"},{"nodeType":"YulAssignment","src":"1519:73:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:48"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:48"},"nodeType":"YulFunctionCall","src":"1558:24:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:48"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:48"},"nodeType":"YulFunctionCall","src":"1529:63:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:48"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:48","type":""}],"src":"1036:562:48"},{"body":{"nodeType":"YulBlock","src":"1658:325:48","statements":[{"nodeType":"YulAssignment","src":"1668:22:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:48","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:48"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:48"},"nodeType":"YulFunctionCall","src":"1678:12:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:48","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:48"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:48","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:48"},"nodeType":"YulFunctionCall","src":"1725:12:48"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:48","statements":[{"nodeType":"YulAssignment","src":"1778:27:48","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:48","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:48"},"nodeType":"YulFunctionCall","src":"1788:17:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:48"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:48"},"nodeType":"YulFunctionCall","src":"1749:26:48"},"nodeType":"YulIf","src":"1746:61:48"},{"body":{"nodeType":"YulBlock","src":"1866:111:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:48","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:48","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:48","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:48"},"nodeType":"YulFunctionCall","src":"1890:20:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:48"},"nodeType":"YulFunctionCall","src":"1880:31:48"},"nodeType":"YulExpressionStatement","src":"1880:31:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:48","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:48"},"nodeType":"YulFunctionCall","src":"1924:15:48"},"nodeType":"YulExpressionStatement","src":"1924:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:48"},"nodeType":"YulFunctionCall","src":"1952:15:48"},"nodeType":"YulExpressionStatement","src":"1952:15:48"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:48"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:48","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:48"},"nodeType":"YulFunctionCall","src":"1842:14:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:48"},"nodeType":"YulFunctionCall","src":"1819:38:48"},"nodeType":"YulIf","src":"1816:161:48"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:48","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:48","type":""}],"src":"1603:380:48"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":48,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001554380380620015548339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6112c280620002926000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101c3578063b88d4fde146101d6578063c87b56dd146101e9578063e985e9c5146101fc57600080fd5b80636352211e1461018757806370a082311461019a57806395d89b41146101bb57600080fd5b8063095ea7b3116100bd578063095ea7b31461014c57806323b872dd1461016157806342842e0e1461017457600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f2366004610f2a565b610238565b60405190151581526020015b60405180910390f35b6101146102d5565b6040516101039190610f9f565b61013461012f366004610fb2565b610367565b6040516001600160a01b039091168152602001610103565b61015f61015a366004610fe7565b61038e565b005b61015f61016f366004611011565b6104c5565b61015f610182366004611011565b61053c565b610134610195366004610fb2565b610557565b6101ad6101a836600461104d565b6105bc565b604051908152602001610103565b610114610656565b61015f6101d1366004611068565b610665565b61015f6101e43660046110ba565b610674565b6101146101f7366004610fb2565b6106f2565b6100f761020a366004611196565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061029b57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102cf57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546102e4906111c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610310906111c9565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050905090565b600061037282610766565b506000908152600460205260409020546001600160a01b031690565b600061039982610557565b9050806001600160a01b0316836001600160a01b031614156104285760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806104445750610444813361020a565b6104b65760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161041f565b6104c083836107cd565b505050565b6104cf3382610848565b6105315760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161041f565b6104c08383836108c7565b6104c083838360405180602001604052806000815250610674565b6000818152600260205260408120546001600160a01b0316806102cf5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161041f565b60006001600160a01b03821661063a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161041f565b506001600160a01b031660009081526003602052604090205490565b6060600180546102e4906111c9565b610670338383610acd565b5050565b61067e3383610848565b6106e05760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161041f565b6106ec84848484610b9c565b50505050565b60606106fd82610766565b600061071460408051602081019091526000815290565b90506000815111610734576040518060200160405280600081525061075f565b8061073e84610c25565b60405160200161074f929190611204565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166107ca5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161041f565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061080f82610557565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061085483610557565b9050806001600160a01b0316846001600160a01b0316148061089b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108bf5750836001600160a01b03166108b484610367565b6001600160a01b0316145b949350505050565b826001600160a01b03166108da82610557565b6001600160a01b03161461093e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161041f565b6001600160a01b0382166109b95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161041f565b826001600160a01b03166109cc82610557565b6001600160a01b031614610a305760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161041f565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610b2f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161041f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ba78484846108c7565b610bb384848484610ccf565b6106ec5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161041f565b60606000610c3283610e32565b600101905060008167ffffffffffffffff811115610c5257610c526110a4565b6040519080825280601f01601f191660200182016040528015610c7c576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610cc257610cc7565b610c86565b509392505050565b60006001600160a01b0384163b15610e2757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d13903390899088908890600401611233565b602060405180830381600087803b158015610d2d57600080fd5b505af1925050508015610d5d575060408051601f3d908101601f19168201909252610d5a9181019061126f565b60015b610e0d573d808015610d8b576040519150601f19603f3d011682016040523d82523d6000602084013e610d90565b606091505b508051610e055760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161041f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108bf565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610e7b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610ea7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610ec557662386f26fc10000830492506010015b6305f5e1008310610edd576305f5e100830492506008015b6127108310610ef157612710830492506004015b60648310610f03576064830492506002015b600a83106102cf5760010192915050565b6001600160e01b0319811681146107ca57600080fd5b600060208284031215610f3c57600080fd5b813561075f81610f14565b60005b83811015610f62578181015183820152602001610f4a565b838111156106ec5750506000910152565b60008151808452610f8b816020860160208601610f47565b601f01601f19169290920160200192915050565b60208152600061075f6020830184610f73565b600060208284031215610fc457600080fd5b5035919050565b80356001600160a01b0381168114610fe257600080fd5b919050565b60008060408385031215610ffa57600080fd5b61100383610fcb565b946020939093013593505050565b60008060006060848603121561102657600080fd5b61102f84610fcb565b925061103d60208501610fcb565b9150604084013590509250925092565b60006020828403121561105f57600080fd5b61075f82610fcb565b6000806040838503121561107b57600080fd5b61108483610fcb565b91506020830135801515811461109957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156110d057600080fd5b6110d985610fcb565b93506110e760208601610fcb565b925060408501359150606085013567ffffffffffffffff8082111561110b57600080fd5b818701915087601f83011261111f57600080fd5b813581811115611131576111316110a4565b604051601f8201601f19908116603f01168101908382118183101715611159576111596110a4565b816040528281528a602084870101111561117257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156111a957600080fd5b6111b283610fcb565b91506111c060208401610fcb565b90509250929050565b600181811c908216806111dd57607f821691505b602082108114156111fe57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611216818460208801610f47565b83519083019061122a818360208801610f47565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526112656080830184610f73565b9695505050505050565b60006020828403121561128157600080fd5b815161075f81610f1456fea2646970667358221220e32126bc4b5190e7341385d7e258eb02a26cc4a91de0bc3fd84b220d3c86173464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1554 CODESIZE SUB DUP1 PUSH3 0x1554 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C2 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x134 PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x656 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x29B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x2CF JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2E4 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x310 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x332 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x340 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 DUP3 PUSH2 0x766 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x444 DUP2 CALLER PUSH2 0x20A JUMP JUMPDEST PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0x4C0 DUP4 DUP4 PUSH2 0x7CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4CF CALLER DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0x4C0 DUP4 DUP4 DUP4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x4C0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x674 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2E4 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x670 CALLER DUP4 DUP4 PUSH2 0xACD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x67E CALLER DUP4 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0x6EC DUP5 DUP5 DUP5 DUP5 PUSH2 0xB9C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FD DUP3 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x75F JUMP JUMPDEST DUP1 PUSH2 0x73E DUP5 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x74F SWAP3 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x41F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x80F DUP3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x854 DUP4 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x89B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8BF JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8B4 DUP5 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DA DUP3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CC DUP3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xBA7 DUP5 DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0xBB3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC32 DUP4 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC52 JUMPI PUSH2 0xC52 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC7C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCC2 JUMPI PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD13 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1233 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD5D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD5A SWAP2 DUP2 ADD SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE0D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8BF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xE7B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xEA7 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xEC5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xEDD JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xEF1 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xF03 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2CF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x75F DUP2 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF62 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF4A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6EC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF8B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x75F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1003 DUP4 PUSH2 0xFCB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102F DUP5 PUSH2 0xFCB JUMP JUMPDEST SWAP3 POP PUSH2 0x103D PUSH1 0x20 DUP6 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75F DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1084 DUP4 PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D9 DUP6 PUSH2 0xFCB JUMP JUMPDEST SWAP4 POP PUSH2 0x10E7 PUSH1 0x20 DUP7 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1131 JUMPI PUSH2 0x1131 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1159 JUMPI PUSH2 0x1159 PUSH2 0x10A4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B2 DUP4 PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP PUSH2 0x11C0 PUSH1 0x20 DUP5 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1216 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF47 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x122A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF47 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1265 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF73 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x75F DUP2 PUSH2 0xF14 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x21 0x26 0xBC 0x4B MLOAD SWAP1 0xE7 CALLVALUE SGT DUP6 0xD7 0xE2 PC 0xEB MUL LOG2 PUSH13 0xC4A91DE0BC3FD84B220D3C8617 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"628:16377:16:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:16;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:16377;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:16377:16;;;-1:-1:-1;628:16377:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:48;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:48;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:48;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:48:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:48;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:16377:16;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2398":{"entryPoint":null,"id":2398,"parameterSlots":4,"returnSlots":0},"@_approve_2264":{"entryPoint":1997,"id":2264,"parameterSlots":2,"returnSlots":0},"@_baseURI_1701":{"entryPoint":null,"id":1701,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2385":{"entryPoint":null,"id":2385,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2372":{"entryPoint":3279,"id":2372,"parameterSlots":4,"returnSlots":1},"@_exists_1933":{"entryPoint":null,"id":1933,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1967":{"entryPoint":2120,"id":1967,"parameterSlots":2,"returnSlots":1},"@_msgSender_6077":{"entryPoint":null,"id":6077,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1915":{"entryPoint":null,"id":1915,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2310":{"entryPoint":1894,"id":2310,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1902":{"entryPoint":2972,"id":1902,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2296":{"entryPoint":2765,"id":2296,"parameterSlots":3,"returnSlots":0},"@_transfer_2240":{"entryPoint":2247,"id":2240,"parameterSlots":3,"returnSlots":0},"@approve_1744":{"entryPoint":910,"id":1744,"parameterSlots":2,"returnSlots":0},"@balanceOf_1605":{"entryPoint":1468,"id":1605,"parameterSlots":1,"returnSlots":1},"@getApproved_1762":{"entryPoint":871,"id":1762,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1797":{"entryPoint":null,"id":1797,"parameterSlots":2,"returnSlots":1},"@isContract_4212":{"entryPoint":null,"id":4212,"parameterSlots":1,"returnSlots":1},"@log10_8025":{"entryPoint":3634,"id":8025,"parameterSlots":1,"returnSlots":1},"@name_1643":{"entryPoint":725,"id":1643,"parameterSlots":0,"returnSlots":1},"@ownerOf_1633":{"entryPoint":1367,"id":1633,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1843":{"entryPoint":1340,"id":1843,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1873":{"entryPoint":1652,"id":1873,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1779":{"entryPoint":1637,"id":1779,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1581":{"entryPoint":568,"id":1581,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7309":{"entryPoint":null,"id":7309,"parameterSlots":1,"returnSlots":1},"@symbol_1653":{"entryPoint":1622,"id":1653,"parameterSlots":0,"returnSlots":1},"@toString_6546":{"entryPoint":3109,"id":6546,"parameterSlots":1,"returnSlots":1},"@tokenURI_1692":{"entryPoint":1778,"id":1692,"parameterSlots":1,"returnSlots":1},"@transferFrom_1824":{"entryPoint":1221,"id":1824,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":4043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4502,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4113,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4282,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4200,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4071,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4612,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4659,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3911,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4553,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4260,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3860,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10387:48","statements":[{"nodeType":"YulBlock","src":"6:3:48","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:133:48","statements":[{"body":{"nodeType":"YulBlock","src":"169:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:48"},"nodeType":"YulFunctionCall","src":"171:12:48"},"nodeType":"YulExpressionStatement","src":"171:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:48"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"99:66:48","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:48"},"nodeType":"YulFunctionCall","src":"88:78:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:48"},"nodeType":"YulFunctionCall","src":"78:89:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:48"},"nodeType":"YulFunctionCall","src":"71:97:48"},"nodeType":"YulIf","src":"68:117:48"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:48","type":""}],"src":"14:177:48"},{"body":{"nodeType":"YulBlock","src":"265:176:48","statements":[{"body":{"nodeType":"YulBlock","src":"311:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"320:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"323:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"313:6:48"},"nodeType":"YulFunctionCall","src":"313:12:48"},"nodeType":"YulExpressionStatement","src":"313:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"286:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"295:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"282:3:48"},"nodeType":"YulFunctionCall","src":"282:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"307:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"278:3:48"},"nodeType":"YulFunctionCall","src":"278:32:48"},"nodeType":"YulIf","src":"275:52:48"},{"nodeType":"YulVariableDeclaration","src":"336:36:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"349:12:48"},"nodeType":"YulFunctionCall","src":"349:23:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"340:5:48","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"405:5:48"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"381:23:48"},"nodeType":"YulFunctionCall","src":"381:30:48"},"nodeType":"YulExpressionStatement","src":"381:30:48"},{"nodeType":"YulAssignment","src":"420:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"430:5:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"420:6:48"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"231:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"242:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"254:6:48","type":""}],"src":"196:245:48"},{"body":{"nodeType":"YulBlock","src":"541:92:48","statements":[{"nodeType":"YulAssignment","src":"551:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"574:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"559:3:48"},"nodeType":"YulFunctionCall","src":"559:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"551:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:48"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"618:6:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"611:6:48"},"nodeType":"YulFunctionCall","src":"611:14:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"604:6:48"},"nodeType":"YulFunctionCall","src":"604:22:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"586:6:48"},"nodeType":"YulFunctionCall","src":"586:41:48"},"nodeType":"YulExpressionStatement","src":"586:41:48"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"510:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"521:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"532:4:48","type":""}],"src":"446:187:48"},{"body":{"nodeType":"YulBlock","src":"691:205:48","statements":[{"nodeType":"YulVariableDeclaration","src":"701:10:48","value":{"kind":"number","nodeType":"YulLiteral","src":"710:1:48","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"705:1:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"770:63:48","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"795:3:48"},{"name":"i","nodeType":"YulIdentifier","src":"800:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"791:3:48"},"nodeType":"YulFunctionCall","src":"791:11:48"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"814:3:48"},{"name":"i","nodeType":"YulIdentifier","src":"819:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"810:3:48"},"nodeType":"YulFunctionCall","src":"810:11:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"804:5:48"},"nodeType":"YulFunctionCall","src":"804:18:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"784:6:48"},"nodeType":"YulFunctionCall","src":"784:39:48"},"nodeType":"YulExpressionStatement","src":"784:39:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"731:1:48"},{"name":"length","nodeType":"YulIdentifier","src":"734:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"728:2:48"},"nodeType":"YulFunctionCall","src":"728:13:48"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"742:19:48","statements":[{"nodeType":"YulAssignment","src":"744:15:48","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"753:1:48"},{"kind":"number","nodeType":"YulLiteral","src":"756:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"749:3:48"},"nodeType":"YulFunctionCall","src":"749:10:48"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"744:1:48"}]}]},"pre":{"nodeType":"YulBlock","src":"724:3:48","statements":[]},"src":"720:113:48"},{"body":{"nodeType":"YulBlock","src":"859:31:48","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"872:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"877:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"868:3:48"},"nodeType":"YulFunctionCall","src":"868:16:48"},{"kind":"number","nodeType":"YulLiteral","src":"886:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"861:6:48"},"nodeType":"YulFunctionCall","src":"861:27:48"},"nodeType":"YulExpressionStatement","src":"861:27:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"848:1:48"},{"name":"length","nodeType":"YulIdentifier","src":"851:6:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"845:2:48"},"nodeType":"YulFunctionCall","src":"845:13:48"},"nodeType":"YulIf","src":"842:48:48"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"669:3:48","type":""},{"name":"dst","nodeType":"YulTypedName","src":"674:3:48","type":""},{"name":"length","nodeType":"YulTypedName","src":"679:6:48","type":""}],"src":"638:258:48"},{"body":{"nodeType":"YulBlock","src":"951:208:48","statements":[{"nodeType":"YulVariableDeclaration","src":"961:26:48","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"981:5:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"975:5:48"},"nodeType":"YulFunctionCall","src":"975:12:48"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"965:6:48","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1003:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"1008:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"996:6:48"},"nodeType":"YulFunctionCall","src":"996:19:48"},"nodeType":"YulExpressionStatement","src":"996:19:48"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1050:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"1057:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:48"},"nodeType":"YulFunctionCall","src":"1046:16:48"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1068:3:48"},{"kind":"number","nodeType":"YulLiteral","src":"1073:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1064:3:48"},"nodeType":"YulFunctionCall","src":"1064:14:48"},{"name":"length","nodeType":"YulIdentifier","src":"1080:6:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1024:21:48"},"nodeType":"YulFunctionCall","src":"1024:63:48"},"nodeType":"YulExpressionStatement","src":"1024:63:48"},{"nodeType":"YulAssignment","src":"1096:57:48","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1111:3:48"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1124:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:48","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1120:3:48"},"nodeType":"YulFunctionCall","src":"1120:15:48"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1141:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1137:3:48"},"nodeType":"YulFunctionCall","src":"1137:7:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1116:3:48"},"nodeType":"YulFunctionCall","src":"1116:29:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1107:3:48"},"nodeType":"YulFunctionCall","src":"1107:39:48"},{"kind":"number","nodeType":"YulLiteral","src":"1148:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1103:3:48"},"nodeType":"YulFunctionCall","src":"1103:50:48"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1096:3:48"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"928:5:48","type":""},{"name":"pos","nodeType":"YulTypedName","src":"935:3:48","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"943:3:48","type":""}],"src":"901:258:48"},{"body":{"nodeType":"YulBlock","src":"1285:99:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1302:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1313:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1295:6:48"},"nodeType":"YulFunctionCall","src":"1295:21:48"},"nodeType":"YulExpressionStatement","src":"1295:21:48"},{"nodeType":"YulAssignment","src":"1325:53:48","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1351:6:48"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1363:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1374:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1359:3:48"},"nodeType":"YulFunctionCall","src":"1359:18:48"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1333:17:48"},"nodeType":"YulFunctionCall","src":"1333:45:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1325:4:48"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1254:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1265:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1276:4:48","type":""}],"src":"1164:220:48"},{"body":{"nodeType":"YulBlock","src":"1459:110:48","statements":[{"body":{"nodeType":"YulBlock","src":"1505:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1514:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1517:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1507:6:48"},"nodeType":"YulFunctionCall","src":"1507:12:48"},"nodeType":"YulExpressionStatement","src":"1507:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1480:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"1489:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1476:3:48"},"nodeType":"YulFunctionCall","src":"1476:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"1501:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1472:3:48"},"nodeType":"YulFunctionCall","src":"1472:32:48"},"nodeType":"YulIf","src":"1469:52:48"},{"nodeType":"YulAssignment","src":"1530:33:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1553:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1540:12:48"},"nodeType":"YulFunctionCall","src":"1540:23:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1530:6:48"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1425:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1436:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1448:6:48","type":""}],"src":"1389:180:48"},{"body":{"nodeType":"YulBlock","src":"1675:125:48","statements":[{"nodeType":"YulAssignment","src":"1685:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1697:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1708:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:48"},"nodeType":"YulFunctionCall","src":"1693:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1685:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:48"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1742:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1750:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1738:3:48"},"nodeType":"YulFunctionCall","src":"1738:55:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1720:6:48"},"nodeType":"YulFunctionCall","src":"1720:74:48"},"nodeType":"YulExpressionStatement","src":"1720:74:48"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1644:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1655:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1666:4:48","type":""}],"src":"1574:226:48"},{"body":{"nodeType":"YulBlock","src":"1854:147:48","statements":[{"nodeType":"YulAssignment","src":"1864:29:48","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1886:6:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1873:12:48"},"nodeType":"YulFunctionCall","src":"1873:20:48"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1864:5:48"}]},{"body":{"nodeType":"YulBlock","src":"1979:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1988:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1991:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1981:6:48"},"nodeType":"YulFunctionCall","src":"1981:12:48"},"nodeType":"YulExpressionStatement","src":"1981:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1915:5:48"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1926:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"1933:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1922:3:48"},"nodeType":"YulFunctionCall","src":"1922:54:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:48"},"nodeType":"YulFunctionCall","src":"1912:65:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1905:6:48"},"nodeType":"YulFunctionCall","src":"1905:73:48"},"nodeType":"YulIf","src":"1902:93:48"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1833:6:48","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1844:5:48","type":""}],"src":"1805:196:48"},{"body":{"nodeType":"YulBlock","src":"2093:167:48","statements":[{"body":{"nodeType":"YulBlock","src":"2139:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2148:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2151:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2141:6:48"},"nodeType":"YulFunctionCall","src":"2141:12:48"},"nodeType":"YulExpressionStatement","src":"2141:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2114:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2110:3:48"},"nodeType":"YulFunctionCall","src":"2110:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2135:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2106:3:48"},"nodeType":"YulFunctionCall","src":"2106:32:48"},"nodeType":"YulIf","src":"2103:52:48"},{"nodeType":"YulAssignment","src":"2164:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2193:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2174:18:48"},"nodeType":"YulFunctionCall","src":"2174:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2164:6:48"}]},{"nodeType":"YulAssignment","src":"2212:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2239:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2250:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:48"},"nodeType":"YulFunctionCall","src":"2235:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2222:12:48"},"nodeType":"YulFunctionCall","src":"2222:32:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2212:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2051:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2062:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2074:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2082:6:48","type":""}],"src":"2006:254:48"},{"body":{"nodeType":"YulBlock","src":"2369:224:48","statements":[{"body":{"nodeType":"YulBlock","src":"2415:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2424:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2427:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2417:6:48"},"nodeType":"YulFunctionCall","src":"2417:12:48"},"nodeType":"YulExpressionStatement","src":"2417:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2390:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2386:3:48"},"nodeType":"YulFunctionCall","src":"2386:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2411:2:48","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2382:3:48"},"nodeType":"YulFunctionCall","src":"2382:32:48"},"nodeType":"YulIf","src":"2379:52:48"},{"nodeType":"YulAssignment","src":"2440:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2469:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2450:18:48"},"nodeType":"YulFunctionCall","src":"2450:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2440:6:48"}]},{"nodeType":"YulAssignment","src":"2488:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2521:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2532:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:48"},"nodeType":"YulFunctionCall","src":"2517:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2498:18:48"},"nodeType":"YulFunctionCall","src":"2498:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2488:6:48"}]},{"nodeType":"YulAssignment","src":"2545:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2572:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2583:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2568:3:48"},"nodeType":"YulFunctionCall","src":"2568:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2555:12:48"},"nodeType":"YulFunctionCall","src":"2555:32:48"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2545:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2319:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2330:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2342:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2350:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2358:6:48","type":""}],"src":"2265:328:48"},{"body":{"nodeType":"YulBlock","src":"2668:116:48","statements":[{"body":{"nodeType":"YulBlock","src":"2714:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2723:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2726:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2716:6:48"},"nodeType":"YulFunctionCall","src":"2716:12:48"},"nodeType":"YulExpressionStatement","src":"2716:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2689:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2698:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2685:3:48"},"nodeType":"YulFunctionCall","src":"2685:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2710:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2681:3:48"},"nodeType":"YulFunctionCall","src":"2681:32:48"},"nodeType":"YulIf","src":"2678:52:48"},{"nodeType":"YulAssignment","src":"2739:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2768:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2749:18:48"},"nodeType":"YulFunctionCall","src":"2749:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2739:6:48"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2634:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2645:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2657:6:48","type":""}],"src":"2598:186:48"},{"body":{"nodeType":"YulBlock","src":"2890:76:48","statements":[{"nodeType":"YulAssignment","src":"2900:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2912:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2923:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:48"},"nodeType":"YulFunctionCall","src":"2908:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2900:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:48"},{"name":"value0","nodeType":"YulIdentifier","src":"2953:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2935:6:48"},"nodeType":"YulFunctionCall","src":"2935:25:48"},"nodeType":"YulExpressionStatement","src":"2935:25:48"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2859:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2870:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2881:4:48","type":""}],"src":"2789:177:48"},{"body":{"nodeType":"YulBlock","src":"3055:263:48","statements":[{"body":{"nodeType":"YulBlock","src":"3101:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3110:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3113:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3103:6:48"},"nodeType":"YulFunctionCall","src":"3103:12:48"},"nodeType":"YulExpressionStatement","src":"3103:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3076:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"3085:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3072:3:48"},"nodeType":"YulFunctionCall","src":"3072:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"3097:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3068:3:48"},"nodeType":"YulFunctionCall","src":"3068:32:48"},"nodeType":"YulIf","src":"3065:52:48"},{"nodeType":"YulAssignment","src":"3126:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3155:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3136:18:48"},"nodeType":"YulFunctionCall","src":"3136:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3126:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"3174:45:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3204:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"3215:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3200:3:48"},"nodeType":"YulFunctionCall","src":"3200:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3187:12:48"},"nodeType":"YulFunctionCall","src":"3187:32:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3178:5:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"3272:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3281:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3284:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3274:6:48"},"nodeType":"YulFunctionCall","src":"3274:12:48"},"nodeType":"YulExpressionStatement","src":"3274:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3241:5:48"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3262:5:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3255:6:48"},"nodeType":"YulFunctionCall","src":"3255:13:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3248:6:48"},"nodeType":"YulFunctionCall","src":"3248:21:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3238:2:48"},"nodeType":"YulFunctionCall","src":"3238:32:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3231:6:48"},"nodeType":"YulFunctionCall","src":"3231:40:48"},"nodeType":"YulIf","src":"3228:60:48"},{"nodeType":"YulAssignment","src":"3297:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"3307:5:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3297:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3013:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3024:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3036:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3044:6:48","type":""}],"src":"2971:347:48"},{"body":{"nodeType":"YulBlock","src":"3355:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3372:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3375:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3365:6:48"},"nodeType":"YulFunctionCall","src":"3365:88:48"},"nodeType":"YulExpressionStatement","src":"3365:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3472:4:48","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3462:6:48"},"nodeType":"YulFunctionCall","src":"3462:15:48"},"nodeType":"YulExpressionStatement","src":"3462:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3493:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3496:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3486:6:48"},"nodeType":"YulFunctionCall","src":"3486:15:48"},"nodeType":"YulExpressionStatement","src":"3486:15:48"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3323:184:48"},{"body":{"nodeType":"YulBlock","src":"3642:1008:48","statements":[{"body":{"nodeType":"YulBlock","src":"3689:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3698:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3701:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3691:6:48"},"nodeType":"YulFunctionCall","src":"3691:12:48"},"nodeType":"YulExpressionStatement","src":"3691:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3663:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"3672:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3659:3:48"},"nodeType":"YulFunctionCall","src":"3659:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"3684:3:48","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3655:3:48"},"nodeType":"YulFunctionCall","src":"3655:33:48"},"nodeType":"YulIf","src":"3652:53:48"},{"nodeType":"YulAssignment","src":"3714:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3743:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3724:18:48"},"nodeType":"YulFunctionCall","src":"3724:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3714:6:48"}]},{"nodeType":"YulAssignment","src":"3762:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3795:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"3806:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3791:3:48"},"nodeType":"YulFunctionCall","src":"3791:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3772:18:48"},"nodeType":"YulFunctionCall","src":"3772:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3762:6:48"}]},{"nodeType":"YulAssignment","src":"3819:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"3857:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3842:3:48"},"nodeType":"YulFunctionCall","src":"3842:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3829:12:48"},"nodeType":"YulFunctionCall","src":"3829:32:48"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3819:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"3870:46:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3901:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"3912:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3897:3:48"},"nodeType":"YulFunctionCall","src":"3897:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3884:12:48"},"nodeType":"YulFunctionCall","src":"3884:32:48"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3874:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3925:28:48","value":{"kind":"number","nodeType":"YulLiteral","src":"3935:18:48","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3929:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"3980:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3989:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3992:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3982:6:48"},"nodeType":"YulFunctionCall","src":"3982:12:48"},"nodeType":"YulExpressionStatement","src":"3982:12:48"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3968:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"3976:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3965:2:48"},"nodeType":"YulFunctionCall","src":"3965:14:48"},"nodeType":"YulIf","src":"3962:34:48"},{"nodeType":"YulVariableDeclaration","src":"4005:32:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4019:9:48"},{"name":"offset","nodeType":"YulIdentifier","src":"4030:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4015:3:48"},"nodeType":"YulFunctionCall","src":"4015:22:48"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4009:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4085:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4094:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4097:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4087:6:48"},"nodeType":"YulFunctionCall","src":"4087:12:48"},"nodeType":"YulExpressionStatement","src":"4087:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4064:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"4068:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:48"},"nodeType":"YulFunctionCall","src":"4060:13:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4075:7:48"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4056:3:48"},"nodeType":"YulFunctionCall","src":"4056:27:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4049:6:48"},"nodeType":"YulFunctionCall","src":"4049:35:48"},"nodeType":"YulIf","src":"4046:55:48"},{"nodeType":"YulVariableDeclaration","src":"4110:26:48","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4133:2:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4120:12:48"},"nodeType":"YulFunctionCall","src":"4120:16:48"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4114:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4159:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4161:16:48"},"nodeType":"YulFunctionCall","src":"4161:18:48"},"nodeType":"YulExpressionStatement","src":"4161:18:48"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4151:2:48"},{"name":"_1","nodeType":"YulIdentifier","src":"4155:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4148:2:48"},"nodeType":"YulFunctionCall","src":"4148:10:48"},"nodeType":"YulIf","src":"4145:36:48"},{"nodeType":"YulVariableDeclaration","src":"4190:17:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4204:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4200:3:48"},"nodeType":"YulFunctionCall","src":"4200:7:48"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4194:2:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4216:23:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4236:2:48","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4230:5:48"},"nodeType":"YulFunctionCall","src":"4230:9:48"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4220:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4248:71:48","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4270:6:48"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4294:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"4298:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4290:3:48"},"nodeType":"YulFunctionCall","src":"4290:13:48"},{"name":"_4","nodeType":"YulIdentifier","src":"4305:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4286:3:48"},"nodeType":"YulFunctionCall","src":"4286:22:48"},{"kind":"number","nodeType":"YulLiteral","src":"4310:2:48","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4282:3:48"},"nodeType":"YulFunctionCall","src":"4282:31:48"},{"name":"_4","nodeType":"YulIdentifier","src":"4315:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4278:3:48"},"nodeType":"YulFunctionCall","src":"4278:40:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4266:3:48"},"nodeType":"YulFunctionCall","src":"4266:53:48"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4252:10:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4378:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4380:16:48"},"nodeType":"YulFunctionCall","src":"4380:18:48"},"nodeType":"YulExpressionStatement","src":"4380:18:48"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4337:10:48"},{"name":"_1","nodeType":"YulIdentifier","src":"4349:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4334:2:48"},"nodeType":"YulFunctionCall","src":"4334:18:48"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4357:10:48"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4369:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4354:2:48"},"nodeType":"YulFunctionCall","src":"4354:22:48"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4331:2:48"},"nodeType":"YulFunctionCall","src":"4331:46:48"},"nodeType":"YulIf","src":"4328:72:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4416:2:48","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4420:10:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4409:6:48"},"nodeType":"YulFunctionCall","src":"4409:22:48"},"nodeType":"YulExpressionStatement","src":"4409:22:48"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4447:6:48"},{"name":"_3","nodeType":"YulIdentifier","src":"4455:2:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:48"},"nodeType":"YulFunctionCall","src":"4440:18:48"},"nodeType":"YulExpressionStatement","src":"4440:18:48"},{"body":{"nodeType":"YulBlock","src":"4504:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4513:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4516:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4506:6:48"},"nodeType":"YulFunctionCall","src":"4506:12:48"},"nodeType":"YulExpressionStatement","src":"4506:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4481:2:48"},{"name":"_3","nodeType":"YulIdentifier","src":"4485:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4477:3:48"},"nodeType":"YulFunctionCall","src":"4477:11:48"},{"kind":"number","nodeType":"YulLiteral","src":"4490:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4473:3:48"},"nodeType":"YulFunctionCall","src":"4473:20:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4495:7:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4470:2:48"},"nodeType":"YulFunctionCall","src":"4470:33:48"},"nodeType":"YulIf","src":"4467:53:48"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4546:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"4554:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4542:3:48"},"nodeType":"YulFunctionCall","src":"4542:15:48"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4563:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"4567:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4559:3:48"},"nodeType":"YulFunctionCall","src":"4559:11:48"},{"name":"_3","nodeType":"YulIdentifier","src":"4572:2:48"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4529:12:48"},"nodeType":"YulFunctionCall","src":"4529:46:48"},"nodeType":"YulExpressionStatement","src":"4529:46:48"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4599:6:48"},{"name":"_3","nodeType":"YulIdentifier","src":"4607:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4595:3:48"},"nodeType":"YulFunctionCall","src":"4595:15:48"},{"kind":"number","nodeType":"YulLiteral","src":"4612:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4591:3:48"},"nodeType":"YulFunctionCall","src":"4591:24:48"},{"kind":"number","nodeType":"YulLiteral","src":"4617:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4584:6:48"},"nodeType":"YulFunctionCall","src":"4584:35:48"},"nodeType":"YulExpressionStatement","src":"4584:35:48"},{"nodeType":"YulAssignment","src":"4628:16:48","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4638:6:48"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4628:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3584:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3595:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3607:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3615:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3623:6:48","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3631:6:48","type":""}],"src":"3512:1138:48"},{"body":{"nodeType":"YulBlock","src":"4742:173:48","statements":[{"body":{"nodeType":"YulBlock","src":"4788:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4797:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4800:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4790:6:48"},"nodeType":"YulFunctionCall","src":"4790:12:48"},"nodeType":"YulExpressionStatement","src":"4790:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4763:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"4772:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4759:3:48"},"nodeType":"YulFunctionCall","src":"4759:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"4784:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4755:3:48"},"nodeType":"YulFunctionCall","src":"4755:32:48"},"nodeType":"YulIf","src":"4752:52:48"},{"nodeType":"YulAssignment","src":"4813:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4842:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4823:18:48"},"nodeType":"YulFunctionCall","src":"4823:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:48"}]},{"nodeType":"YulAssignment","src":"4861:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4894:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4905:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4890:3:48"},"nodeType":"YulFunctionCall","src":"4890:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4871:18:48"},"nodeType":"YulFunctionCall","src":"4871:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4861:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4700:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4711:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4723:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4731:6:48","type":""}],"src":"4655:260:48"},{"body":{"nodeType":"YulBlock","src":"4975:382:48","statements":[{"nodeType":"YulAssignment","src":"4985:22:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4999:1:48","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5002:4:48"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4995:3:48"},"nodeType":"YulFunctionCall","src":"4995:12:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4985:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"5016:38:48","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5046:4:48"},{"kind":"number","nodeType":"YulLiteral","src":"5052:1:48","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5042:3:48"},"nodeType":"YulFunctionCall","src":"5042:12:48"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5020:18:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"5093:31:48","statements":[{"nodeType":"YulAssignment","src":"5095:27:48","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5109:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"5117:4:48","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5105:3:48"},"nodeType":"YulFunctionCall","src":"5105:17:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5095:6:48"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5073:18:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5066:6:48"},"nodeType":"YulFunctionCall","src":"5066:26:48"},"nodeType":"YulIf","src":"5063:61:48"},{"body":{"nodeType":"YulBlock","src":"5183:168:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5204:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5207:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:48"},"nodeType":"YulFunctionCall","src":"5197:88:48"},"nodeType":"YulExpressionStatement","src":"5197:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5305:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5308:4:48","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5298:6:48"},"nodeType":"YulFunctionCall","src":"5298:15:48"},"nodeType":"YulExpressionStatement","src":"5298:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5333:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5336:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5326:6:48"},"nodeType":"YulFunctionCall","src":"5326:15:48"},"nodeType":"YulExpressionStatement","src":"5326:15:48"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5139:18:48"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5162:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"5170:2:48","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5159:2:48"},"nodeType":"YulFunctionCall","src":"5159:14:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5136:2:48"},"nodeType":"YulFunctionCall","src":"5136:38:48"},"nodeType":"YulIf","src":"5133:218:48"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4955:4:48","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4964:6:48","type":""}],"src":"4920:437:48"},{"body":{"nodeType":"YulBlock","src":"5536:223:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5553:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5564:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5546:6:48"},"nodeType":"YulFunctionCall","src":"5546:21:48"},"nodeType":"YulExpressionStatement","src":"5546:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5587:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5598:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5583:3:48"},"nodeType":"YulFunctionCall","src":"5583:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"5603:2:48","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5576:6:48"},"nodeType":"YulFunctionCall","src":"5576:30:48"},"nodeType":"YulExpressionStatement","src":"5576:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5637:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:48"},"nodeType":"YulFunctionCall","src":"5622:18:48"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"5642:34:48","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5615:6:48"},"nodeType":"YulFunctionCall","src":"5615:62:48"},"nodeType":"YulExpressionStatement","src":"5615:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5697:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5708:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5693:3:48"},"nodeType":"YulFunctionCall","src":"5693:18:48"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"5713:3:48","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5686:6:48"},"nodeType":"YulFunctionCall","src":"5686:31:48"},"nodeType":"YulExpressionStatement","src":"5686:31:48"},{"nodeType":"YulAssignment","src":"5726:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5738:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5749:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5734:3:48"},"nodeType":"YulFunctionCall","src":"5734:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5726:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5513:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5527:4:48","type":""}],"src":"5362:397:48"},{"body":{"nodeType":"YulBlock","src":"5938:251:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5955:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5966:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5948:6:48"},"nodeType":"YulFunctionCall","src":"5948:21:48"},"nodeType":"YulExpressionStatement","src":"5948:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5989:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6000:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5985:3:48"},"nodeType":"YulFunctionCall","src":"5985:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"6005:2:48","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5978:6:48"},"nodeType":"YulFunctionCall","src":"5978:30:48"},"nodeType":"YulExpressionStatement","src":"5978:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6028:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6039:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6024:3:48"},"nodeType":"YulFunctionCall","src":"6024:18:48"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"6044:34:48","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6017:6:48"},"nodeType":"YulFunctionCall","src":"6017:62:48"},"nodeType":"YulExpressionStatement","src":"6017:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6099:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6110:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6095:3:48"},"nodeType":"YulFunctionCall","src":"6095:18:48"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"6115:31:48","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6088:6:48"},"nodeType":"YulFunctionCall","src":"6088:59:48"},"nodeType":"YulExpressionStatement","src":"6088:59:48"},{"nodeType":"YulAssignment","src":"6156:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6168:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6179:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6164:3:48"},"nodeType":"YulFunctionCall","src":"6164:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6156:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5915:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5929:4:48","type":""}],"src":"5764:425:48"},{"body":{"nodeType":"YulBlock","src":"6368:235:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6385:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6396:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6378:6:48"},"nodeType":"YulFunctionCall","src":"6378:21:48"},"nodeType":"YulExpressionStatement","src":"6378:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6419:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6430:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6415:3:48"},"nodeType":"YulFunctionCall","src":"6415:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"6435:2:48","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6408:6:48"},"nodeType":"YulFunctionCall","src":"6408:30:48"},"nodeType":"YulExpressionStatement","src":"6408:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6458:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6469:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6454:3:48"},"nodeType":"YulFunctionCall","src":"6454:18:48"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"6474:34:48","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6447:6:48"},"nodeType":"YulFunctionCall","src":"6447:62:48"},"nodeType":"YulExpressionStatement","src":"6447:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6529:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6540:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6525:3:48"},"nodeType":"YulFunctionCall","src":"6525:18:48"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"6545:15:48","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6518:6:48"},"nodeType":"YulFunctionCall","src":"6518:43:48"},"nodeType":"YulExpressionStatement","src":"6518:43:48"},{"nodeType":"YulAssignment","src":"6570:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6582:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6593:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6578:3:48"},"nodeType":"YulFunctionCall","src":"6578:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6570:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6345:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6359:4:48","type":""}],"src":"6194:409:48"},{"body":{"nodeType":"YulBlock","src":"6782:174:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6799:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6810:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6792:6:48"},"nodeType":"YulFunctionCall","src":"6792:21:48"},"nodeType":"YulExpressionStatement","src":"6792:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6833:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6844:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6829:3:48"},"nodeType":"YulFunctionCall","src":"6829:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"6849:2:48","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6822:6:48"},"nodeType":"YulFunctionCall","src":"6822:30:48"},"nodeType":"YulExpressionStatement","src":"6822:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6872:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6883:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6868:3:48"},"nodeType":"YulFunctionCall","src":"6868:18:48"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"6888:26:48","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6861:6:48"},"nodeType":"YulFunctionCall","src":"6861:54:48"},"nodeType":"YulExpressionStatement","src":"6861:54:48"},{"nodeType":"YulAssignment","src":"6924:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6936:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6947:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6932:3:48"},"nodeType":"YulFunctionCall","src":"6932:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6924:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6759:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6773:4:48","type":""}],"src":"6608:348:48"},{"body":{"nodeType":"YulBlock","src":"7135:231:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7152:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7163:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7145:6:48"},"nodeType":"YulFunctionCall","src":"7145:21:48"},"nodeType":"YulExpressionStatement","src":"7145:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7197:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7182:3:48"},"nodeType":"YulFunctionCall","src":"7182:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"7202:2:48","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7175:6:48"},"nodeType":"YulFunctionCall","src":"7175:30:48"},"nodeType":"YulExpressionStatement","src":"7175:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7225:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7236:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7221:3:48"},"nodeType":"YulFunctionCall","src":"7221:18:48"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"7241:34:48","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7214:6:48"},"nodeType":"YulFunctionCall","src":"7214:62:48"},"nodeType":"YulExpressionStatement","src":"7214:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7296:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7307:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7292:3:48"},"nodeType":"YulFunctionCall","src":"7292:18:48"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7312:11:48","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7285:6:48"},"nodeType":"YulFunctionCall","src":"7285:39:48"},"nodeType":"YulExpressionStatement","src":"7285:39:48"},{"nodeType":"YulAssignment","src":"7333:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7345:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7356:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7341:3:48"},"nodeType":"YulFunctionCall","src":"7341:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7333:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7112:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7126:4:48","type":""}],"src":"6961:405:48"},{"body":{"nodeType":"YulBlock","src":"7558:283:48","statements":[{"nodeType":"YulVariableDeclaration","src":"7568:27:48","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7588:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7582:5:48"},"nodeType":"YulFunctionCall","src":"7582:13:48"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7572:6:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7630:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"7638:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7626:3:48"},"nodeType":"YulFunctionCall","src":"7626:17:48"},{"name":"pos","nodeType":"YulIdentifier","src":"7645:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"7650:6:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7604:21:48"},"nodeType":"YulFunctionCall","src":"7604:53:48"},"nodeType":"YulExpressionStatement","src":"7604:53:48"},{"nodeType":"YulVariableDeclaration","src":"7666:29:48","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7683:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"7688:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7679:3:48"},"nodeType":"YulFunctionCall","src":"7679:16:48"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"7670:5:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7704:29:48","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7726:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7720:5:48"},"nodeType":"YulFunctionCall","src":"7720:13:48"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"7708:8:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7768:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"7776:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7764:3:48"},"nodeType":"YulFunctionCall","src":"7764:17:48"},{"name":"end_1","nodeType":"YulIdentifier","src":"7783:5:48"},{"name":"length_1","nodeType":"YulIdentifier","src":"7790:8:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7742:21:48"},"nodeType":"YulFunctionCall","src":"7742:57:48"},"nodeType":"YulExpressionStatement","src":"7742:57:48"},{"nodeType":"YulAssignment","src":"7808:27:48","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"7819:5:48"},{"name":"length_1","nodeType":"YulIdentifier","src":"7826:8:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7815:3:48"},"nodeType":"YulFunctionCall","src":"7815:20:48"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7808:3:48"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7526:3:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7531:6:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7539:6:48","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7550:3:48","type":""}],"src":"7371:470:48"},{"body":{"nodeType":"YulBlock","src":"8020:227:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8037:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8048:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8030:6:48"},"nodeType":"YulFunctionCall","src":"8030:21:48"},"nodeType":"YulExpressionStatement","src":"8030:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8071:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8082:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8067:3:48"},"nodeType":"YulFunctionCall","src":"8067:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8087:2:48","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8060:6:48"},"nodeType":"YulFunctionCall","src":"8060:30:48"},"nodeType":"YulExpressionStatement","src":"8060:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8110:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8121:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8106:3:48"},"nodeType":"YulFunctionCall","src":"8106:18:48"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"8126:34:48","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8099:6:48"},"nodeType":"YulFunctionCall","src":"8099:62:48"},"nodeType":"YulExpressionStatement","src":"8099:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8181:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8192:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8177:3:48"},"nodeType":"YulFunctionCall","src":"8177:18:48"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"8197:7:48","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8170:6:48"},"nodeType":"YulFunctionCall","src":"8170:35:48"},"nodeType":"YulExpressionStatement","src":"8170:35:48"},{"nodeType":"YulAssignment","src":"8214:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8226:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8237:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8222:3:48"},"nodeType":"YulFunctionCall","src":"8222:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8214:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7997:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8011:4:48","type":""}],"src":"7846:401:48"},{"body":{"nodeType":"YulBlock","src":"8426:226:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8443:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8454:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8436:6:48"},"nodeType":"YulFunctionCall","src":"8436:21:48"},"nodeType":"YulExpressionStatement","src":"8436:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8477:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8488:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:48"},"nodeType":"YulFunctionCall","src":"8473:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8493:2:48","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8466:6:48"},"nodeType":"YulFunctionCall","src":"8466:30:48"},"nodeType":"YulExpressionStatement","src":"8466:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8516:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8527:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8512:3:48"},"nodeType":"YulFunctionCall","src":"8512:18:48"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8532:34:48","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8505:6:48"},"nodeType":"YulFunctionCall","src":"8505:62:48"},"nodeType":"YulExpressionStatement","src":"8505:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8587:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8598:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:48"},"nodeType":"YulFunctionCall","src":"8583:18:48"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8603:6:48","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8576:6:48"},"nodeType":"YulFunctionCall","src":"8576:34:48"},"nodeType":"YulExpressionStatement","src":"8576:34:48"},{"nodeType":"YulAssignment","src":"8619:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8631:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8642:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8627:3:48"},"nodeType":"YulFunctionCall","src":"8627:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8619:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8403:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8417:4:48","type":""}],"src":"8252:400:48"},{"body":{"nodeType":"YulBlock","src":"8831:175:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8848:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8859:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8841:6:48"},"nodeType":"YulFunctionCall","src":"8841:21:48"},"nodeType":"YulExpressionStatement","src":"8841:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8882:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8893:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8878:3:48"},"nodeType":"YulFunctionCall","src":"8878:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8898:2:48","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8871:6:48"},"nodeType":"YulFunctionCall","src":"8871:30:48"},"nodeType":"YulExpressionStatement","src":"8871:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8921:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8932:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8917:3:48"},"nodeType":"YulFunctionCall","src":"8917:18:48"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"8937:27:48","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8910:6:48"},"nodeType":"YulFunctionCall","src":"8910:55:48"},"nodeType":"YulExpressionStatement","src":"8910:55:48"},{"nodeType":"YulAssignment","src":"8974:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8986:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8997:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8982:3:48"},"nodeType":"YulFunctionCall","src":"8982:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8974:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8808:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8822:4:48","type":""}],"src":"8657:349:48"},{"body":{"nodeType":"YulBlock","src":"9185:240:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9202:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9213:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9195:6:48"},"nodeType":"YulFunctionCall","src":"9195:21:48"},"nodeType":"YulExpressionStatement","src":"9195:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9236:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9247:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9232:3:48"},"nodeType":"YulFunctionCall","src":"9232:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"9252:2:48","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9225:6:48"},"nodeType":"YulFunctionCall","src":"9225:30:48"},"nodeType":"YulExpressionStatement","src":"9225:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9275:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9286:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:48"},"nodeType":"YulFunctionCall","src":"9271:18:48"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"9291:34:48","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9264:6:48"},"nodeType":"YulFunctionCall","src":"9264:62:48"},"nodeType":"YulExpressionStatement","src":"9264:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9346:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9357:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9342:3:48"},"nodeType":"YulFunctionCall","src":"9342:18:48"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"9362:20:48","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9335:6:48"},"nodeType":"YulFunctionCall","src":"9335:48:48"},"nodeType":"YulExpressionStatement","src":"9335:48:48"},{"nodeType":"YulAssignment","src":"9392:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9404:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9415:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9400:3:48"},"nodeType":"YulFunctionCall","src":"9400:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9392:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9162:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9176:4:48","type":""}],"src":"9011:414:48"},{"body":{"nodeType":"YulBlock","src":"9462:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9479:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9482:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9472:6:48"},"nodeType":"YulFunctionCall","src":"9472:88:48"},"nodeType":"YulExpressionStatement","src":"9472:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9576:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9579:4:48","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9569:6:48"},"nodeType":"YulFunctionCall","src":"9569:15:48"},"nodeType":"YulExpressionStatement","src":"9569:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9600:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9603:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9593:6:48"},"nodeType":"YulFunctionCall","src":"9593:15:48"},"nodeType":"YulExpressionStatement","src":"9593:15:48"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9430:184:48"},{"body":{"nodeType":"YulBlock","src":"9822:309:48","statements":[{"nodeType":"YulVariableDeclaration","src":"9832:52:48","value":{"kind":"number","nodeType":"YulLiteral","src":"9842:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9836:2:48","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9900:9:48"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9915:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"9923:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9911:3:48"},"nodeType":"YulFunctionCall","src":"9911:15:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9893:6:48"},"nodeType":"YulFunctionCall","src":"9893:34:48"},"nodeType":"YulExpressionStatement","src":"9893:34:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9947:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9958:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9943:3:48"},"nodeType":"YulFunctionCall","src":"9943:18:48"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9967:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"9975:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9963:3:48"},"nodeType":"YulFunctionCall","src":"9963:15:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9936:6:48"},"nodeType":"YulFunctionCall","src":"9936:43:48"},"nodeType":"YulExpressionStatement","src":"9936:43:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9999:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10010:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9995:3:48"},"nodeType":"YulFunctionCall","src":"9995:18:48"},{"name":"value2","nodeType":"YulIdentifier","src":"10015:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9988:6:48"},"nodeType":"YulFunctionCall","src":"9988:34:48"},"nodeType":"YulExpressionStatement","src":"9988:34:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10042:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10053:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10038:3:48"},"nodeType":"YulFunctionCall","src":"10038:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"10058:3:48","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10031:6:48"},"nodeType":"YulFunctionCall","src":"10031:31:48"},"nodeType":"YulExpressionStatement","src":"10031:31:48"},{"nodeType":"YulAssignment","src":"10071:54:48","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10097:6:48"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10109:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10120:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10105:3:48"},"nodeType":"YulFunctionCall","src":"10105:19:48"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10079:17:48"},"nodeType":"YulFunctionCall","src":"10079:46:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10071:4:48"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9767:9:48","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9778:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9786:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9794:6:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9802:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9813:4:48","type":""}],"src":"9619:512:48"},{"body":{"nodeType":"YulBlock","src":"10216:169:48","statements":[{"body":{"nodeType":"YulBlock","src":"10262:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10271:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10274:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10264:6:48"},"nodeType":"YulFunctionCall","src":"10264:12:48"},"nodeType":"YulExpressionStatement","src":"10264:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10237:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"10246:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10233:3:48"},"nodeType":"YulFunctionCall","src":"10233:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"10258:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10229:3:48"},"nodeType":"YulFunctionCall","src":"10229:32:48"},"nodeType":"YulIf","src":"10226:52:48"},{"nodeType":"YulVariableDeclaration","src":"10287:29:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10300:5:48"},"nodeType":"YulFunctionCall","src":"10300:16:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10291:5:48","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10349:5:48"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"10325:23:48"},"nodeType":"YulFunctionCall","src":"10325:30:48"},"nodeType":"YulExpressionStatement","src":"10325:30:48"},{"nodeType":"YulAssignment","src":"10364:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"10374:5:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10364:6:48"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10182:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10193:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10205:6:48","type":""}],"src":"10136:249:48"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":48,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101c3578063b88d4fde146101d6578063c87b56dd146101e9578063e985e9c5146101fc57600080fd5b80636352211e1461018757806370a082311461019a57806395d89b41146101bb57600080fd5b8063095ea7b3116100bd578063095ea7b31461014c57806323b872dd1461016157806342842e0e1461017457600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f2366004610f2a565b610238565b60405190151581526020015b60405180910390f35b6101146102d5565b6040516101039190610f9f565b61013461012f366004610fb2565b610367565b6040516001600160a01b039091168152602001610103565b61015f61015a366004610fe7565b61038e565b005b61015f61016f366004611011565b6104c5565b61015f610182366004611011565b61053c565b610134610195366004610fb2565b610557565b6101ad6101a836600461104d565b6105bc565b604051908152602001610103565b610114610656565b61015f6101d1366004611068565b610665565b61015f6101e43660046110ba565b610674565b6101146101f7366004610fb2565b6106f2565b6100f761020a366004611196565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061029b57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102cf57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546102e4906111c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610310906111c9565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050905090565b600061037282610766565b506000908152600460205260409020546001600160a01b031690565b600061039982610557565b9050806001600160a01b0316836001600160a01b031614156104285760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806104445750610444813361020a565b6104b65760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161041f565b6104c083836107cd565b505050565b6104cf3382610848565b6105315760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161041f565b6104c08383836108c7565b6104c083838360405180602001604052806000815250610674565b6000818152600260205260408120546001600160a01b0316806102cf5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161041f565b60006001600160a01b03821661063a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161041f565b506001600160a01b031660009081526003602052604090205490565b6060600180546102e4906111c9565b610670338383610acd565b5050565b61067e3383610848565b6106e05760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161041f565b6106ec84848484610b9c565b50505050565b60606106fd82610766565b600061071460408051602081019091526000815290565b90506000815111610734576040518060200160405280600081525061075f565b8061073e84610c25565b60405160200161074f929190611204565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166107ca5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161041f565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061080f82610557565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061085483610557565b9050806001600160a01b0316846001600160a01b0316148061089b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108bf5750836001600160a01b03166108b484610367565b6001600160a01b0316145b949350505050565b826001600160a01b03166108da82610557565b6001600160a01b03161461093e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161041f565b6001600160a01b0382166109b95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161041f565b826001600160a01b03166109cc82610557565b6001600160a01b031614610a305760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161041f565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610b2f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161041f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ba78484846108c7565b610bb384848484610ccf565b6106ec5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161041f565b60606000610c3283610e32565b600101905060008167ffffffffffffffff811115610c5257610c526110a4565b6040519080825280601f01601f191660200182016040528015610c7c576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610cc257610cc7565b610c86565b509392505050565b60006001600160a01b0384163b15610e2757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d13903390899088908890600401611233565b602060405180830381600087803b158015610d2d57600080fd5b505af1925050508015610d5d575060408051601f3d908101601f19168201909252610d5a9181019061126f565b60015b610e0d573d808015610d8b576040519150601f19603f3d011682016040523d82523d6000602084013e610d90565b606091505b508051610e055760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161041f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108bf565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610e7b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610ea7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610ec557662386f26fc10000830492506010015b6305f5e1008310610edd576305f5e100830492506008015b6127108310610ef157612710830492506004015b60648310610f03576064830492506002015b600a83106102cf5760010192915050565b6001600160e01b0319811681146107ca57600080fd5b600060208284031215610f3c57600080fd5b813561075f81610f14565b60005b83811015610f62578181015183820152602001610f4a565b838111156106ec5750506000910152565b60008151808452610f8b816020860160208601610f47565b601f01601f19169290920160200192915050565b60208152600061075f6020830184610f73565b600060208284031215610fc457600080fd5b5035919050565b80356001600160a01b0381168114610fe257600080fd5b919050565b60008060408385031215610ffa57600080fd5b61100383610fcb565b946020939093013593505050565b60008060006060848603121561102657600080fd5b61102f84610fcb565b925061103d60208501610fcb565b9150604084013590509250925092565b60006020828403121561105f57600080fd5b61075f82610fcb565b6000806040838503121561107b57600080fd5b61108483610fcb565b91506020830135801515811461109957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156110d057600080fd5b6110d985610fcb565b93506110e760208601610fcb565b925060408501359150606085013567ffffffffffffffff8082111561110b57600080fd5b818701915087601f83011261111f57600080fd5b813581811115611131576111316110a4565b604051601f8201601f19908116603f01168101908382118183101715611159576111596110a4565b816040528281528a602084870101111561117257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156111a957600080fd5b6111b283610fcb565b91506111c060208401610fcb565b90509250929050565b600181811c908216806111dd57607f821691505b602082108114156111fe57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611216818460208801610f47565b83519083019061122a818360208801610f47565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526112656080830184610f73565b9695505050505050565b60006020828403121561128157600080fd5b815161075f81610f1456fea2646970667358221220e32126bc4b5190e7341385d7e258eb02a26cc4a91de0bc3fd84b220d3c86173464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xFE7 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x134 PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x656 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x29B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x2CF JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2E4 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x310 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x332 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x340 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 DUP3 PUSH2 0x766 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x444 DUP2 CALLER PUSH2 0x20A JUMP JUMPDEST PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0x4C0 DUP4 DUP4 PUSH2 0x7CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4CF CALLER DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0x4C0 DUP4 DUP4 DUP4 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x4C0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x674 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2E4 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x670 CALLER DUP4 DUP4 PUSH2 0xACD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x67E CALLER DUP4 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0x6EC DUP5 DUP5 DUP5 DUP5 PUSH2 0xB9C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6FD DUP3 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x75F JUMP JUMPDEST DUP1 PUSH2 0x73E DUP5 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x74F SWAP3 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x41F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x80F DUP3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x854 DUP4 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x89B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8BF JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8B4 DUP5 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DA DUP3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CC DUP3 PUSH2 0x557 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xBA7 DUP5 DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0xBB3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC32 DUP4 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC52 JUMPI PUSH2 0xC52 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC7C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xCC2 JUMPI PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD13 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1233 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD5D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD5A SWAP2 DUP2 ADD SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE0D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8BF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xE7B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xEA7 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xEC5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xEDD JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xEF1 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xF03 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2CF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x75F DUP2 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF62 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF4A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6EC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF8B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x75F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1003 DUP4 PUSH2 0xFCB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102F DUP5 PUSH2 0xFCB JUMP JUMPDEST SWAP3 POP PUSH2 0x103D PUSH1 0x20 DUP6 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75F DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1084 DUP4 PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D9 DUP6 PUSH2 0xFCB JUMP JUMPDEST SWAP4 POP PUSH2 0x10E7 PUSH1 0x20 DUP7 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1131 JUMPI PUSH2 0x1131 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1159 JUMPI PUSH2 0x1159 PUSH2 0x10A4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B2 DUP4 PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP PUSH2 0x11C0 PUSH1 0x20 DUP5 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x11FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1216 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF47 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x122A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF47 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1265 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF73 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x75F DUP2 PUSH2 0xF14 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x21 0x26 0xBC 0x4B MLOAD SWAP1 0xE7 CALLVALUE SGT DUP6 0xD7 0xE2 PC 0xEB MUL LOG2 PUSH13 0xC4A91DE0BC3FD84B220D3C8617 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"628:16377:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;611:14:48;;604:22;586:41;;574:2;559:18;1570:300:16;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1738:55:48;;;1720:74;;1708:2;1693:18;3935:167:16;1574:226:48;3468:406:16;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2935:25:48;;;2923:2;2908:18;1929:204:16;2789:177:48;2633:102:16;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:16;;1722:25;1707:40;;:104;;-1:-1:-1;;;;;;;1763:48:16;;1778:33;1763:48;1707:104;:156;;;-1:-1:-1;952:25:41;-1:-1:-1;;;;;;937:40:41;;;1827:36:16;1688:175;1570:300;-1:-1:-1;;1570:300:16:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:16;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:16;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:16;:2;-1:-1:-1;;;;;3605:11:16;;;3597:57;;;;-1:-1:-1;;;3597:57:16;;5564:2:48;3597:57:16;;;5546:21:48;5603:2;5583:18;;;5576:30;5642:34;5622:18;;;5615:62;5713:3;5693:18;;;5686:31;5734:19;;3597:57:16;;;;;;;;;719:10:34;-1:-1:-1;;;;;3686:21:16;;;;:62;;-1:-1:-1;3711:37:16;3728:5;719:10:34;4388:162:16;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:16;;5966:2:48;3665:170:16;;;5948:21:48;6005:2;5985:18;;;5978:30;6044:34;6024:18;;;6017:62;6115:31;6095:18;;;6088:59;6164:19;;3665:170:16;5764:425:48;3665:170:16;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:34;4804:7:16;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:16;;6396:2:48;4763:99:16;;;6378:21:48;6435:2;6415:18;;;6408:30;6474:34;6454:18;;;6447:62;-1:-1:-1;;;6525:18:48;;;6518:43;6578:19;;4763:99:16;6194:409:48;4763:99:16;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;;2324:56;;;;-1:-1:-1;;;2324:56:16;;6810:2:48;2324:56:16;;;6792:21:48;6849:2;6829:18;;;6822:30;6888:26;6868:18;;;6861:54;6932:18;;2324:56:16;6608:348:48;1929:204:16;2001:7;-1:-1:-1;;;;;2028:19:16;;2020:73;;;;-1:-1:-1;;;2020:73:16;;7163:2:48;2020:73:16;;;7145:21:48;7202:2;7182:18;;;7175:30;7241:34;7221:18;;;7214:62;7312:11;7292:18;;;7285:39;7341:19;;2020:73:16;6961:405:48;2020:73:16;-1:-1:-1;;;;;;2110:16:16;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:34;4296:8:16;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;719:10:34;5352:7:16;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:16;;6396:2:48;5311:99:16;;;6378:21:48;6435:2;6415:18;;;6408:30;6474:34;6454:18;;;6447:62;-1:-1:-1;;;6525:18:48;;;6518:43;6578:19;;5311:99:16;6194:409:48;5311:99:16;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:16;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:16:o;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;13313:53;;;;-1:-1:-1;;;13313:53:16;;6810:2:48;13313:53:16;;;6792:21:48;6849:2;6829:18;;;6822:30;6888:26;6868:18;;;6861:54;6932:18;;13313:53:16;6608:348:48;13313:53:16;13240:133;:::o;12572:171::-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;12646:29:16;-1:-1:-1;;;;;12646:29:16;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:16;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:16;:7;-1:-1:-1;;;;;7570:16:16;;:52;;;-1:-1:-1;;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:16;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:16;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:16:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:16;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:16;;11346:81;;;;-1:-1:-1;;;11346:81:16;;8048:2:48;11346:81:16;;;8030:21:48;8087:2;8067:18;;;8060:30;8126:34;8106:18;;;8099:62;-1:-1:-1;;;8177:18:48;;;8170:35;8222:19;;11346:81:16;7846:401:48;11346:81:16;-1:-1:-1;;;;;11445:16:16;;11437:65;;;;-1:-1:-1;;;11437:65:16;;8454:2:48;11437:65:16;;;8436:21:48;8493:2;8473:18;;;8466:30;8532:34;8512:18;;;8505:62;8603:6;8583:18;;;8576:34;8627:19;;11437:65:16;8252:400:48;11437:65:16;11682:4;-1:-1:-1;;;;;11655:31:16;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:16;;11647:81;;;;-1:-1:-1;;;11647:81:16;;8048:2:48;11647:81:16;;;8030:21:48;8087:2;8067:18;;;8060:30;8126:34;8106:18;;;8099:62;-1:-1:-1;;;8177:18:48;;;8170:35;8222:19;;11647:81:16;7846:401:48;11647:81:16;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;11790:31:16;;;;;;-1:-1:-1;;;;;12265:15:16;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:16;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:16;:5;-1:-1:-1;;;;;12990:17:16;;;12982:55;;;;-1:-1:-1;;;12982:55:16;;8859:2:48;12982:55:16;;;8841:21:48;8898:2;8878:18;;;8871:30;8937:27;8917:18;;;8910:55;8982:18;;12982:55:16;8657:349:48;12982:55:16;-1:-1:-1;;;;;13047:25:16;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:16;;;;;;;;;;13108:41;;586::48;;;13108::16;;559:18:48;13108:41:16;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:16;;9213:2:48;6476:110:16;;;9195:21:48;9252:2;9232:18;;;9225:30;9291:34;9271:18;;;9264:62;9362:20;9342:18;;;9335:48;9400:19;;6476:110:16;9011:414:48;447:696:38;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:38;-1:-1:-1;604:41:38;-1:-1:-1;765:28:38;;;781:2;765:28;820:280;-1:-1:-1;;851:5:38;990:8;985:2;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1068:10:38;1064:21;;1080:5;;1064:21;820:280;;;-1:-1:-1;1120:6:38;447:696;-1:-1:-1;;;447:696:38:o;13925:831:16:-;14074:4;-1:-1:-1;;;;;14094:13:16;;1702:19:32;:23;14090:660:16;;14129:71;;-1:-1:-1;;;14129:71:16;;-1:-1:-1;;;;;14129:36:16;;;;;:71;;719:10:34;;14180:4:16;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:16;;;;;;;;-1:-1:-1;;14129:71:16;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14367:13:16;;14363:321;;14409:60;;-1:-1:-1;;;14409:60:16;;9213:2:48;14409:60:16;;;9195:21:48;9252:2;9232:18;;;9225:30;9291:34;9271:18;;;9264:62;9362:20;9342:18;;;9335:48;9400:19;;14409:60:16;9011:414:48;14363:321:16;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:16;-1:-1:-1;;;14250:51:16;;-1:-1:-1;14243:58:16;;14090:660;-1:-1:-1;14735:4:16;13925:831;;;;;;:::o;10139:916:43:-;10192:7;;10276:8;10267:17;;10263:103;;10313:8;10304:17;;;-1:-1:-1;10349:2:43;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:43;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:43;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:43;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:43;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:43;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:43:o;14:177:48:-;-1:-1:-1;;;;;;92:5:48;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:258::-;710:1;720:113;734:6;731:1;728:13;720:113;;;810:11;;;804:18;791:11;;;784:39;756:2;749:10;720:113;;;851:6;848:1;845:13;842:48;;;-1:-1:-1;;886:1:48;868:16;;861:27;638:258::o;901:::-;943:3;981:5;975:12;1008:6;1003:3;996:19;1024:63;1080:6;1073:4;1068:3;1064:14;1057:4;1050:5;1046:16;1024:63;:::i;:::-;1141:2;1120:15;-1:-1:-1;;1116:29:48;1107:39;;;;1148:4;1103:50;;901:258;-1:-1:-1;;901:258:48:o;1164:220::-;1313:2;1302:9;1295:21;1276:4;1333:45;1374:2;1363:9;1359:18;1351:6;1333:45;:::i;1389:180::-;1448:6;1501:2;1489:9;1480:7;1476:23;1472:32;1469:52;;;1517:1;1514;1507:12;1469:52;-1:-1:-1;1540:23:48;;1389:180;-1:-1:-1;1389:180:48:o;1805:196::-;1873:20;;-1:-1:-1;;;;;1922:54:48;;1912:65;;1902:93;;1991:1;1988;1981:12;1902:93;1805:196;;;:::o;2006:254::-;2074:6;2082;2135:2;2123:9;2114:7;2110:23;2106:32;2103:52;;;2151:1;2148;2141:12;2103:52;2174:29;2193:9;2174:29;:::i;:::-;2164:39;2250:2;2235:18;;;;2222:32;;-1:-1:-1;;;2006:254:48:o;2265:328::-;2342:6;2350;2358;2411:2;2399:9;2390:7;2386:23;2382:32;2379:52;;;2427:1;2424;2417:12;2379:52;2450:29;2469:9;2450:29;:::i;:::-;2440:39;;2498:38;2532:2;2521:9;2517:18;2498:38;:::i;:::-;2488:48;;2583:2;2572:9;2568:18;2555:32;2545:42;;2265:328;;;;;:::o;2598:186::-;2657:6;2710:2;2698:9;2689:7;2685:23;2681:32;2678:52;;;2726:1;2723;2716:12;2678:52;2749:29;2768:9;2749:29;:::i;2971:347::-;3036:6;3044;3097:2;3085:9;3076:7;3072:23;3068:32;3065:52;;;3113:1;3110;3103:12;3065:52;3136:29;3155:9;3136:29;:::i;:::-;3126:39;;3215:2;3204:9;3200:18;3187:32;3262:5;3255:13;3248:21;3241:5;3238:32;3228:60;;3284:1;3281;3274:12;3228:60;3307:5;3297:15;;;2971:347;;;;;:::o;3323:184::-;-1:-1:-1;;;3372:1:48;3365:88;3472:4;3469:1;3462:15;3496:4;3493:1;3486:15;3512:1138;3607:6;3615;3623;3631;3684:3;3672:9;3663:7;3659:23;3655:33;3652:53;;;3701:1;3698;3691:12;3652:53;3724:29;3743:9;3724:29;:::i;:::-;3714:39;;3772:38;3806:2;3795:9;3791:18;3772:38;:::i;:::-;3762:48;;3857:2;3846:9;3842:18;3829:32;3819:42;;3912:2;3901:9;3897:18;3884:32;3935:18;3976:2;3968:6;3965:14;3962:34;;;3992:1;3989;3982:12;3962:34;4030:6;4019:9;4015:22;4005:32;;4075:7;4068:4;4064:2;4060:13;4056:27;4046:55;;4097:1;4094;4087:12;4046:55;4133:2;4120:16;4155:2;4151;4148:10;4145:36;;;4161:18;;:::i;:::-;4236:2;4230:9;4204:2;4290:13;;-1:-1:-1;;4286:22:48;;;4310:2;4282:31;4278:40;4266:53;;;4334:18;;;4354:22;;;4331:46;4328:72;;;4380:18;;:::i;:::-;4420:10;4416:2;4409:22;4455:2;4447:6;4440:18;4495:7;4490:2;4485;4481;4477:11;4473:20;4470:33;4467:53;;;4516:1;4513;4506:12;4467:53;4572:2;4567;4563;4559:11;4554:2;4546:6;4542:15;4529:46;4617:1;4612:2;4607;4599:6;4595:15;4591:24;4584:35;4638:6;4628:16;;;;;;;3512:1138;;;;;;;:::o;4655:260::-;4723:6;4731;4784:2;4772:9;4763:7;4759:23;4755:32;4752:52;;;4800:1;4797;4790:12;4752:52;4823:29;4842:9;4823:29;:::i;:::-;4813:39;;4871:38;4905:2;4894:9;4890:18;4871:38;:::i;:::-;4861:48;;4655:260;;;;;:::o;4920:437::-;4999:1;4995:12;;;;5042;;;5063:61;;5117:4;5109:6;5105:17;5095:27;;5063:61;5170:2;5162:6;5159:14;5139:18;5136:38;5133:218;;;-1:-1:-1;;;5204:1:48;5197:88;5308:4;5305:1;5298:15;5336:4;5333:1;5326:15;5133:218;;4920:437;;;:::o;7371:470::-;7550:3;7588:6;7582:13;7604:53;7650:6;7645:3;7638:4;7630:6;7626:17;7604:53;:::i;:::-;7720:13;;7679:16;;;;7742:57;7720:13;7679:16;7776:4;7764:17;;7742:57;:::i;:::-;7815:20;;7371:470;-1:-1:-1;;;;7371:470:48:o;9619:512::-;9813:4;-1:-1:-1;;;;;9923:2:48;9915:6;9911:15;9900:9;9893:34;9975:2;9967:6;9963:15;9958:2;9947:9;9943:18;9936:43;;10015:6;10010:2;9999:9;9995:18;9988:34;10058:3;10053:2;10042:9;10038:18;10031:31;10079:46;10120:3;10109:9;10105:19;10097:6;10079:46;:::i;:::-;10071:54;9619:512;-1:-1:-1;;;;;;9619:512:48:o;10136:249::-;10205:6;10258:2;10246:9;10237:7;10233:23;10229:32;10226:52;;;10274:1;10271;10264:12;10226:52;10306:9;10300:16;10325:30;10349:5;10325:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721Consecutive.sol":{"ERC721Consecutive":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"fromAddress","type":"address"},{"indexed":true,"internalType":"address","name":"toAddress","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC2309 \\\"Consecutive Transfer Extension\\\" as defined in https://eips.ethereum.org/EIPS/eip-2309[EIP-2309]. This extension allows the minting of large batches of tokens, during contract construction only. For upgradeable contracts this implies that batch minting is only available during proxy deployment, and not in subsequent upgrades. These batches are limited to 5000 tokens at a time by default to accommodate off-chain indexers. Using this extension removes the ability to mint single tokens during contract construction. This ability is regained after construction. During construction, only batch minting is allowed. IMPORTANT: This extension bypasses the hooks {_beforeTokenTransfer} and {_afterTokenTransfer} for tokens minted in batch. When using this extension, you should consider the {_beforeConsecutiveTokenTransfer} and {_afterConsecutiveTokenTransfer} hooks in addition to {_beforeTokenTransfer} and {_afterTokenTransfer}. IMPORTANT: When overriding {_afterTokenTransfer}, be careful about call ordering. {ownerOf} may return invalid values during the {_afterTokenTransfer} execution if the super call is not called first. To be safe, execute the super call before your custom logic. _Available since v4.8._\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721Consecutive.sol\":\"ERC721Consecutive\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC2309.sol\":{\"keccak256\":\"0x769b8c97e7ceca35514f85dcf77ea7e9da1c9a3b3b9c119dda811cd8394aa601\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://113df79cc1cae24c055be91b41febfa2dbb28089c969547f7ca3ca5d23d308f6\",\"dweb:/ipfs/QmTwrtF69W9G3t9VbUjF6P1m6jNW4dh6y3kE5vQqUdsSnr\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Consecutive.sol\":{\"keccak256\":\"0xf0a85be34cb519afb99f153c45c905fbae17fa93c798d5d7ea08a0e98f20ac1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a83c25f8c1d4f727d993157e034c01e8ca68451033e0e75d8d3545f87fea678\",\"dweb:/ipfs/QmbegJMFm6kva4BaHGUv1E4URTo57S1yf7ZimNeDqCntaF\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/utils/structs/BitMaps.sol\":{\"keccak256\":\"0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f6d9467f83ad116296f5d3f16734fa997cf333a6bc57b494b9d4771e7618fa6\",\"dweb:/ipfs/QmS5T3j2ijQQXv9QtQGMngekqdSRJSad4VEyeszRwDurMS\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721Pausable.sol":{"ERC721Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","paused()":"5c975abb","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract unpausable.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721Pausable.sol\":\"ERC721Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0x645230d3afe28f9108eef658e77bb6ac72cea51ac091b40951977c88f7044142\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9be3653b7c267854fe82463f1e2650ff25c428f7c5526965ec5f57ffadead8ef\",\"dweb:/ipfs/QmPYTo2h2GEynxCvKsG6EffDJMrNkUcrEYgycrCtzUk7Kx\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721Royalty.sol":{"ERC721Royalty":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC721 with the ERC2981 NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721Royalty.sol\":\"ERC721Royalty\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Royalty.sol\":{\"keccak256\":\"0x93d24eea4e6ddbed53ef161567ae62bfd0c3aebb7b48f37e4dbeb7a937108866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2ed35e16e296fcc3d2311d584e5006ddc188d7d76198e8e750193750b65f9c4\",\"dweb:/ipfs/QmYzLcEgZ4TSBJNPBxhq9BdLQC89w3zyWH88rw3DBy4MxY\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721Votes.sol":{"ERC721Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getApproved(uint256)":"081812fc","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","nonces(address)":"7ecebe00","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC721 to support voting and delegation as implemented by {Votes}, where each individual NFT counts as 1 vote unit. Tokens do not count as votes until they are delegated, because votes must be tracked which incurs an additional cost on every transfer. Token holders can either delegate to a trusted representative who will decide how to make use of the votes in governance decisions, or they can delegate to themselves to be their own representative. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the contract's {EIP712} domain separator.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"nonces(address)\":{\"details\":\"Returns an address nonce.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721Votes.sol\":\"ERC721Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x215ab7b366363cdaa7e60b21cea73ded788f21b870dfe52b58a00047158f7fa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d55979017ebe0d987578f73b989582a7482baba1d091f55cefb793b7cacaec\",\"dweb:/ipfs/QmYqGx2nyygkrGn1WQALa6cFjKEAMFyeqGpYYcPnzrfdmB\"]},\"contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Votes.sol\":{\"keccak256\":\"0xcff123b20aefb9514e523f287d76ef80e2698e1ef93b1832a9c771f75c89d1c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ddd49b3f2ce68056fdb59826ba356b8d1b0d98e847c065f9b8d5d484133bcf1\",\"dweb:/ipfs/QmPurnXbXb6RBVYhh3bFTvd9CwLKs4ZkhSAE2Az68iWrsP\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/ERC721Wrapper.sol":{"ERC721Wrapper":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"depositFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"underlying","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"withdrawTo","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","depositFor(address,uint256[])":"cace6eb2","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","onERC721Received(address,address,uint256,bytes)":"150b7a02","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","underlying()":"6f307dc3","withdrawTo(address,uint256[])":"7c1b126c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdrawTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of the ERC721 token contract to support token wrapping. Users can deposit and withdraw an \\\"underlying token\\\" and receive a \\\"wrapped token\\\" with a matching tokenId. This is useful in conjunction with other modules. For example, combining this wrapping mechanism with {ERC721Votes} will allow the wrapping of an existing \\\"basic\\\" ERC721 into a governance token. _Available since v4.9.0_\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"depositFor(address,uint256[])\":{\"details\":\"Allow a user to deposit underlying tokens and mint the corresponding tokenIds.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Overrides {IERC721Receiver-onERC721Received} to allow minting on direct ERC721 transfers to this contract. In case there's data attached, it validates that the operator is this contract, so only trusted data is accepted from {depositFor}. WARNING: Doesn't work with unsafe transfers (eg. {IERC721-transferFrom}). Use {ERC721Wrapper-_recover} for recovering in that scenario.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"underlying()\":{\"details\":\"Returns the underlying token.\"},\"withdrawTo(address,uint256[])\":{\"details\":\"Allow a user to burn wrapped tokens and withdraw the corresponding tokenIds of the underlying tokens.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/ERC721Wrapper.sol\":\"ERC721Wrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Wrapper.sol\":{\"keccak256\":\"0xa7a09157b0a0254495f0d48345da78d087069ab1df1e36f3c59f02841bb0419e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7347fef6eda01843c2889df60541a9a70ba3f74ad443f98d0c42d362ae32f4b\",\"dweb:/ipfs/QmWVrPCfQnsSMdjtDDC87LgKwEYbjuysJLVzdD63Lysw8n\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol":{"ERC721PresetMinterPauserAutoId":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseTokenURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1406":{"entryPoint":null,"id":1406,"parameterSlots":0,"returnSlots":0},"@_1550":{"entryPoint":null,"id":1550,"parameterSlots":2,"returnSlots":0},"@_3881":{"entryPoint":null,"id":3881,"parameterSlots":3,"returnSlots":0},"@_add_10025":{"entryPoint":519,"id":10025,"parameterSlots":2,"returnSlots":1},"@_contains_10128":{"entryPoint":null,"id":10128,"parameterSlots":2,"returnSlots":1},"@_grantRole_384":{"entryPoint":327,"id":384,"parameterSlots":2,"returnSlots":0},"@_grantRole_516":{"entryPoint":260,"id":516,"parameterSlots":2,"returnSlots":0},"@_msgSender_6077":{"entryPoint":null,"id":6077,"parameterSlots":0,"returnSlots":1},"@_setupRole_324":{"entryPoint":244,"id":324,"parameterSlots":2,"returnSlots":0},"@add_10325":{"entryPoint":487,"id":10325,"parameterSlots":2,"returnSlots":1},"@hasRole_180":{"entryPoint":null,"id":180,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":972,"id":null,"parameterSlots":2,"returnSlots":3},"extract_byte_array_length":{"entryPoint":1117,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":767,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2189:48","statements":[{"nodeType":"YulBlock","src":"6:3:48","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:48","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:48","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:48","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:48"},"nodeType":"YulFunctionCall","src":"66:20:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:48"},"nodeType":"YulFunctionCall","src":"56:31:48"},"nodeType":"YulExpressionStatement","src":"56:31:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:48","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:48"},"nodeType":"YulFunctionCall","src":"96:15:48"},"nodeType":"YulExpressionStatement","src":"96:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:48"},"nodeType":"YulFunctionCall","src":"120:15:48"},"nodeType":"YulExpressionStatement","src":"120:15:48"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:48"},{"body":{"nodeType":"YulBlock","src":"210:821:48","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:48"},"nodeType":"YulFunctionCall","src":"261:12:48"},"nodeType":"YulExpressionStatement","src":"261:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:48"},"nodeType":"YulFunctionCall","src":"234:17:48"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:48"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:48"},"nodeType":"YulFunctionCall","src":"230:27:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:48"},"nodeType":"YulFunctionCall","src":"223:35:48"},"nodeType":"YulIf","src":"220:55:48"},{"nodeType":"YulVariableDeclaration","src":"284:23:48","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:48"},"nodeType":"YulFunctionCall","src":"294:13:48"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:48","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:48","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:48","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:48"},"nodeType":"YulFunctionCall","src":"330:10:48"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:48","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:48"},"nodeType":"YulFunctionCall","src":"326:18:48"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:48"},"nodeType":"YulFunctionCall","src":"369:18:48"},"nodeType":"YulExpressionStatement","src":"369:18:48"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:48"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:48"},"nodeType":"YulFunctionCall","src":"356:10:48"},"nodeType":"YulIf","src":"353:36:48"},{"nodeType":"YulVariableDeclaration","src":"398:17:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:48"},"nodeType":"YulFunctionCall","src":"408:7:48"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:48","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:48"},"nodeType":"YulFunctionCall","src":"438:9:48"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:48","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:48"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:48"},"nodeType":"YulFunctionCall","src":"498:13:48"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:48"},"nodeType":"YulFunctionCall","src":"494:22:48"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:48","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:48"},"nodeType":"YulFunctionCall","src":"490:31:48"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:48"},"nodeType":"YulFunctionCall","src":"486:40:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:48"},"nodeType":"YulFunctionCall","src":"474:53:48"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:48"},"nodeType":"YulFunctionCall","src":"588:18:48"},"nodeType":"YulExpressionStatement","src":"588:18:48"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:48"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:48"},"nodeType":"YulFunctionCall","src":"542:18:48"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:48"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:48"},"nodeType":"YulFunctionCall","src":"562:22:48"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:48"},"nodeType":"YulFunctionCall","src":"539:46:48"},"nodeType":"YulIf","src":"536:72:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:48","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:48"},"nodeType":"YulFunctionCall","src":"617:22:48"},"nodeType":"YulExpressionStatement","src":"617:22:48"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:48"},"nodeType":"YulFunctionCall","src":"648:18:48"},"nodeType":"YulExpressionStatement","src":"648:18:48"},{"nodeType":"YulVariableDeclaration","src":"675:14:48","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:48","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:48"},"nodeType":"YulFunctionCall","src":"737:12:48"},"nodeType":"YulExpressionStatement","src":"737:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:48"},"nodeType":"YulFunctionCall","src":"708:15:48"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:48"},"nodeType":"YulFunctionCall","src":"704:24:48"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:48"},"nodeType":"YulFunctionCall","src":"701:33:48"},"nodeType":"YulIf","src":"698:53:48"},{"nodeType":"YulVariableDeclaration","src":"760:10:48","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:48","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:48","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:48"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:48"},"nodeType":"YulFunctionCall","src":"850:14:48"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:48"},"nodeType":"YulFunctionCall","src":"846:23:48"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:48"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:48"},"nodeType":"YulFunctionCall","src":"881:14:48"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:48"},"nodeType":"YulFunctionCall","src":"877:23:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:48"},"nodeType":"YulFunctionCall","src":"871:30:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:48"},"nodeType":"YulFunctionCall","src":"839:63:48"},"nodeType":"YulExpressionStatement","src":"839:63:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:48"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:48"},"nodeType":"YulFunctionCall","src":"787:9:48"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:48","statements":[{"nodeType":"YulAssignment","src":"799:15:48","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:48"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:48"},"nodeType":"YulFunctionCall","src":"804:10:48"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:48"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:48","statements":[]},"src":"779:133:48"},{"body":{"nodeType":"YulBlock","src":"942:59:48","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:48"},"nodeType":"YulFunctionCall","src":"967:15:48"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:48"},"nodeType":"YulFunctionCall","src":"963:24:48"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:48"},"nodeType":"YulFunctionCall","src":"956:35:48"},"nodeType":"YulExpressionStatement","src":"956:35:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:48"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:48"},"nodeType":"YulFunctionCall","src":"924:9:48"},"nodeType":"YulIf","src":"921:80:48"},{"nodeType":"YulAssignment","src":"1010:15:48","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:48"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:48"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:48","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:48","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:48","type":""}],"src":"146:885:48"},{"body":{"nodeType":"YulBlock","src":"1181:621:48","statements":[{"body":{"nodeType":"YulBlock","src":"1227:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1236:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1239:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1229:6:48"},"nodeType":"YulFunctionCall","src":"1229:12:48"},"nodeType":"YulExpressionStatement","src":"1229:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1202:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"1211:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1198:3:48"},"nodeType":"YulFunctionCall","src":"1198:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"1223:2:48","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1194:3:48"},"nodeType":"YulFunctionCall","src":"1194:32:48"},"nodeType":"YulIf","src":"1191:52:48"},{"nodeType":"YulVariableDeclaration","src":"1252:30:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1272:9:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1266:5:48"},"nodeType":"YulFunctionCall","src":"1266:16:48"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1256:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1291:28:48","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1309:2:48","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1313:1:48","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1305:3:48"},"nodeType":"YulFunctionCall","src":"1305:10:48"},{"kind":"number","nodeType":"YulLiteral","src":"1317:1:48","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1301:3:48"},"nodeType":"YulFunctionCall","src":"1301:18:48"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1295:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"1346:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1355:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1358:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1348:6:48"},"nodeType":"YulFunctionCall","src":"1348:12:48"},"nodeType":"YulExpressionStatement","src":"1348:12:48"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1334:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"1342:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1331:2:48"},"nodeType":"YulFunctionCall","src":"1331:14:48"},"nodeType":"YulIf","src":"1328:34:48"},{"nodeType":"YulAssignment","src":"1371:71:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1414:9:48"},{"name":"offset","nodeType":"YulIdentifier","src":"1425:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1410:3:48"},"nodeType":"YulFunctionCall","src":"1410:22:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1434:7:48"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1381:28:48"},"nodeType":"YulFunctionCall","src":"1381:61:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1371:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"1451:41:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1488:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:48"},"nodeType":"YulFunctionCall","src":"1473:18:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1467:5:48"},"nodeType":"YulFunctionCall","src":"1467:25:48"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1455:8:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"1521:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1530:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1533:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1523:6:48"},"nodeType":"YulFunctionCall","src":"1523:12:48"},"nodeType":"YulExpressionStatement","src":"1523:12:48"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1507:8:48"},{"name":"_1","nodeType":"YulIdentifier","src":"1517:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1504:2:48"},"nodeType":"YulFunctionCall","src":"1504:16:48"},"nodeType":"YulIf","src":"1501:36:48"},{"nodeType":"YulAssignment","src":"1546:73:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1589:9:48"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1600:8:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1585:3:48"},"nodeType":"YulFunctionCall","src":"1585:24:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1611:7:48"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1556:28:48"},"nodeType":"YulFunctionCall","src":"1556:63:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1546:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"1628:41:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1654:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1665:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1650:3:48"},"nodeType":"YulFunctionCall","src":"1650:18:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1644:5:48"},"nodeType":"YulFunctionCall","src":"1644:25:48"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"1632:8:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"1698:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:48"},"nodeType":"YulFunctionCall","src":"1700:12:48"},"nodeType":"YulExpressionStatement","src":"1700:12:48"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"1684:8:48"},{"name":"_1","nodeType":"YulIdentifier","src":"1694:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1681:2:48"},"nodeType":"YulFunctionCall","src":"1681:16:48"},"nodeType":"YulIf","src":"1678:36:48"},{"nodeType":"YulAssignment","src":"1723:73:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1766:9:48"},{"name":"offset_2","nodeType":"YulIdentifier","src":"1777:8:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1762:3:48"},"nodeType":"YulFunctionCall","src":"1762:24:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1788:7:48"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1733:28:48"},"nodeType":"YulFunctionCall","src":"1733:63:48"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1723:6:48"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1131:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1142:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1154:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1162:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1170:6:48","type":""}],"src":"1036:766:48"},{"body":{"nodeType":"YulBlock","src":"1862:325:48","statements":[{"nodeType":"YulAssignment","src":"1872:22:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:48","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1889:4:48"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1882:3:48"},"nodeType":"YulFunctionCall","src":"1882:12:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1872:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"1903:38:48","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1933:4:48"},{"kind":"number","nodeType":"YulLiteral","src":"1939:1:48","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1929:3:48"},"nodeType":"YulFunctionCall","src":"1929:12:48"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1907:18:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"1980:31:48","statements":[{"nodeType":"YulAssignment","src":"1982:27:48","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1996:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"2004:4:48","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1992:3:48"},"nodeType":"YulFunctionCall","src":"1992:17:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1982:6:48"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1960:18:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1953:6:48"},"nodeType":"YulFunctionCall","src":"1953:26:48"},"nodeType":"YulIf","src":"1950:61:48"},{"body":{"nodeType":"YulBlock","src":"2070:111:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2091:1:48","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2098:3:48","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2103:10:48","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2094:3:48"},"nodeType":"YulFunctionCall","src":"2094:20:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2084:6:48"},"nodeType":"YulFunctionCall","src":"2084:31:48"},"nodeType":"YulExpressionStatement","src":"2084:31:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2135:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2138:4:48","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2128:6:48"},"nodeType":"YulFunctionCall","src":"2128:15:48"},"nodeType":"YulExpressionStatement","src":"2128:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2163:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2166:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2156:6:48"},"nodeType":"YulFunctionCall","src":"2156:15:48"},"nodeType":"YulExpressionStatement","src":"2156:15:48"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2026:18:48"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2049:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"2057:2:48","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2046:2:48"},"nodeType":"YulFunctionCall","src":"2046:14:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2023:2:48"},"nodeType":"YulFunctionCall","src":"2023:38:48"},"nodeType":"YulIf","src":"2020:161:48"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1842:4:48","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1851:6:48","type":""}],"src":"1807:380:48"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":48,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002d6538038062002d658339810160408190526200003491620003cc565b8251839083906200004d90600290602085019062000259565b5080516200006390600390602084019062000259565b5050600c805460ff191690555080516200008590600e90602084019062000259565b5062000093600033620000f4565b620000bf7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000f4565b620000eb7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000f4565b5050506200049a565b62000100828262000104565b5050565b6200011b82826200014760201b62000e201760201c565b60008281526001602090815260409091206200014291839062000ebe620001e7821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000100576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a33390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001fe836001600160a01b03841662000207565b90505b92915050565b6000818152600183016020526040812054620002505750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000201565b50600062000201565b82805462000267906200045d565b90600052602060002090601f0160209004810192826200028b5760008555620002d6565b82601f10620002a657805160ff1916838001178555620002d6565b82800160010185558215620002d6579182015b82811115620002d6578251825591602001919060010190620002b9565b50620002e4929150620002e8565b5090565b5b80821115620002e45760008155600101620002e9565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200032757600080fd5b81516001600160401b0380821115620003445762000344620002ff565b604051601f8301601f19908116603f011681019082821181831017156200036f576200036f620002ff565b816040528381526020925086838588010111156200038c57600080fd5b600091505b83821015620003b0578582018301518183018401529082019062000391565b83821115620003c25760008385830101525b9695505050505050565b600080600060608486031215620003e257600080fd5b83516001600160401b0380821115620003fa57600080fd5b620004088783880162000315565b945060208601519150808211156200041f57600080fd5b6200042d8783880162000315565b935060408601519150808211156200044457600080fd5b50620004538682870162000315565b9150509250925092565b600181811c908216806200047257607f821691505b602082108114156200049457634e487b7160e01b600052602260045260246000fd5b50919050565b6128bb80620004aa6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063d539139311610071578063d53913931461041b578063d547741f14610442578063e63ab1e914610455578063e985e9c51461047c57600080fd5b8063a22cb465146103cf578063b88d4fde146103e2578063c87b56dd146103f5578063ca15c8731461040857600080fd5b80639010d07c116100de5780639010d07c1461037557806391d148541461038857806395d89b41146103bf578063a217fddf146103c757600080fd5b80636352211e146103345780636a6278421461034757806370a082311461035a5780638456cb591461036d57600080fd5b80632f2ff15d1161018757806342842e0e1161015657806342842e0e146102f057806342966c68146103035780634f6ccce7146103165780635c975abb1461032957600080fd5b80632f2ff15d146102af5780632f745c59146102c257806336568abe146102d55780633f4ba83a146102e857600080fd5b8063095ea7b3116101c3578063095ea7b31461025257806318160ddd1461026757806323b872dd14610279578063248a9ca31461028c57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f83660046123b6565b6104b8565b60405190151581526020015b60405180910390f35b61021a6104c9565b604051610209919061242b565b61023a61023536600461243e565b61055b565b6040516001600160a01b039091168152602001610209565b610265610260366004612473565b610582565b005b600a545b604051908152602001610209565b61026561028736600461249d565b6106b9565b61026b61029a36600461243e565b60009081526020819052604090206001015490565b6102656102bd3660046124d9565b610731565b61026b6102d0366004612473565b610756565b6102656102e33660046124d9565b6107fe565b61026561088a565b6102656102fe36600461249d565b610932565b61026561031136600461243e565b61094d565b61026b61032436600461243e565b6109c4565b600c5460ff166101fd565b61023a61034236600461243e565b610a68565b610265610355366004612505565b610acd565b61026b610368366004612505565b610b89565b610265610c23565b61023a610383366004612520565b610cc7565b6101fd6103963660046124d9565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61021a610ce6565b61026b600081565b6102656103dd366004612542565b610cf5565b6102656103f0366004612594565b610d00565b61021a61040336600461243e565b610d7e565b61026b61041636600461243e565b610de4565b61026b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102656104503660046124d9565b610dfb565b61026b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6101fd61048a366004612670565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006104c382610ed3565b92915050565b6060600280546104d89061269a565b80601f01602080910402602001604051908101604052809291908181526020018280546105049061269a565b80156105515780601f1061052657610100808354040283529160200191610551565b820191906000526020600020905b81548152906001019060200180831161053457829003601f168201915b5050505050905090565b600061056682610f11565b506000908152600660205260409020546001600160a01b031690565b600061058d82610a68565b9050806001600160a01b0316836001600160a01b0316141561061c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806106385750610638813361048a565b6106aa5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610613565b6106b48383610f75565b505050565b6106c4335b82610ff0565b6107265760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610613565b6106b483838361106f565b60008281526020819052604090206001015461074c81611282565b6106b4838361128c565b600061076183610b89565b82106107d55760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610613565b506001600160a01b03919091166000908152600860209081526040808320938352929052205490565b6001600160a01b038116331461087c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610613565b61088682826112ae565b5050565b6108b47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610396565b610928576040805162461bcd60e51b81526020600482015260248101919091527f4552433732315072657365744d696e7465725061757365724175746f49643a2060448201527f6d75737420686176652070617573657220726f6c6520746f20756e70617573656064820152608401610613565b6109306112d0565b565b6106b483838360405180602001604052806000815250610d00565b610956336106be565b6109b85760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610613565b6109c181611322565b50565b60006109cf600a5490565b8210610a435760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610613565b600a8281548110610a5657610a566126d5565b90600052602060002001549050919050565b6000818152600460205260408120546001600160a01b0316806104c35760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610613565b610af77f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610396565b610b695760405162461bcd60e51b815260206004820152603d60248201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060448201527f6d7573742068617665206d696e74657220726f6c6520746f206d696e740000006064820152608401610613565b610b7b81610b76600d5490565b6113d2565b6109c1600d80546001019055565b60006001600160a01b038216610c075760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610613565b506001600160a01b031660009081526005602052604090205490565b610c4d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610396565b610cbf5760405162461bcd60e51b815260206004820152603e60248201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060448201527f6d75737420686176652070617573657220726f6c6520746f20706175736500006064820152608401610613565b610930611578565b6000828152600160205260408120610cdf90836115b5565b9392505050565b6060600380546104d89061269a565b6108863383836115c1565b610d0a3383610ff0565b610d6c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610613565b610d7884848484611690565b50505050565b6060610d8982610f11565b6000610d93611719565b90506000815111610db35760405180602001604052806000815250610cdf565b80610dbd84611728565b604051602001610dce9291906126eb565b6040516020818303038152906040529392505050565b60008181526001602052604081206104c3906117d2565b600082815260208190526040902060010154610e1681611282565b6106b483836112ae565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610886576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e7a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610cdf836001600160a01b0384166117dc565b60006001600160e01b031982167f780e9d630000000000000000000000000000000000000000000000000000000014806104c357506104c38261182b565b6000818152600460205260409020546001600160a01b03166109c15760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610613565b6000818152600660205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610fb782610a68565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ffc83610a68565b9050806001600160a01b0316846001600160a01b0316148061104357506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b806110675750836001600160a01b031661105c8461055b565b6001600160a01b0316145b949350505050565b826001600160a01b031661108282610a68565b6001600160a01b0316146110e65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610613565b6001600160a01b0382166111615760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610613565b61116e838383600161189d565b826001600160a01b031661118182610a68565b6001600160a01b0316146111e55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610613565b6000818152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260058552838620805460001901905590871680865283862080546001019055868652600490945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6109c181336118a9565b6112968282610e20565b60008281526001602052604090206106b49082610ebe565b6112b8828261191c565b60008281526001602052604090206106b4908261199b565b6112d86119b0565b600c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600061132d82610a68565b905061133d81600084600161189d565b61134682610a68565b6000838152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0385168085526005845282852080546000190190558785526004909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166114285760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610613565b6000818152600460205260409020546001600160a01b03161561148d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610613565b61149b60008383600161189d565b6000818152600460205260409020546001600160a01b0316156115005760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610613565b6001600160a01b0382166000818152600560209081526040808320805460010190558483526004909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611580611a02565b600c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113053390565b6000610cdf8383611a55565b816001600160a01b0316836001600160a01b031614156116235760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610613565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61169b84848461106f565b6116a784848484611a7f565b610d785760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610613565b6060600e80546104d89061269a565b6060600061173583611be2565b600101905060008167ffffffffffffffff8111156117555761175561257e565b6040519080825280601f01601f19166020018201604052801561177f576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846117c5576117ca565b611789565b509392505050565b60006104c3825490565b6000818152600183016020526040812054611823575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104c3565b5060006104c3565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061188e57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806104c357506104c382611cc4565b610d7884848484611d02565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610886576118da81611d87565b6118e5836020611d99565b6040516020016118f692919061271a565b60408051601f198184030181529082905262461bcd60e51b82526106139160040161242b565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610886576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610cdf836001600160a01b038416611f7a565b600c5460ff166109305760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610613565b600c5460ff16156109305760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610613565b6000826000018281548110611a6c57611a6c6126d5565b9060005260206000200154905092915050565b60006001600160a01b0384163b15611bd757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ac390339089908890889060040161279b565b602060405180830381600087803b158015611add57600080fd5b505af1925050508015611b0d575060408051601f3d908101601f19168201909252611b0a918101906127d7565b60015b611bbd573d808015611b3b576040519150601f19603f3d011682016040523d82523d6000602084013e611b40565b606091505b508051611bb55760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610613565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611067565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c2b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611c57576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611c7557662386f26fc10000830492506010015b6305f5e1008310611c8d576305f5e100830492506008015b6127108310611ca157612710830492506004015b60648310611cb3576064830492506002015b600a83106104c35760010192915050565b60006001600160e01b031982167f5a05180f0000000000000000000000000000000000000000000000000000000014806104c357506104c38261206d565b611d0e848484846120d4565b600c5460ff1615610d785760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c65207061757365640000000000000000000000000000000000000000006064820152608401610613565b60606104c36001600160a01b03831660145b60606000611da883600261280a565b611db3906002612829565b67ffffffffffffffff811115611dcb57611dcb61257e565b6040519080825280601f01601f191660200182016040528015611df5576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611e2c57611e2c6126d5565b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611e7757611e776126d5565b60200101906001600160f81b031916908160001a9053506000611e9b84600261280a565b611ea6906001612829565b90505b6001811115611f2b577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611ee757611ee76126d5565b1a60f81b828281518110611efd57611efd6126d5565b60200101906001600160f81b031916908160001a90535060049490941c93611f2481612841565b9050611ea9565b508315610cdf5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610613565b60008181526001830160205260408120548015612063576000611f9e600183612858565b8554909150600090611fb290600190612858565b9050818114612017576000866000018281548110611fd257611fd26126d5565b9060005260206000200154905080876000018481548110611ff557611ff56126d5565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806120285761202861286f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104c3565b60009150506104c3565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806104c357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146104c3565b600181111561214b5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f7274656400000000000000000000006064820152608401610613565b816001600160a01b0385166121a7576121a281600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b6121ca565b836001600160a01b0316856001600160a01b0316146121ca576121ca8582612210565b6001600160a01b0384166121e6576121e1816122ad565b612209565b846001600160a01b0316846001600160a01b03161461220957612209848261235c565b5050505050565b6000600161221d84610b89565b6122279190612858565b60008381526009602052604090205490915080821461227a576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a546000906122bf90600190612858565b6000838152600b6020526040812054600a80549394509092849081106122e7576122e76126d5565b9060005260206000200154905080600a8381548110612308576123086126d5565b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a8054806123405761234061286f565b6001900381819060005260206000200160009055905550505050565b600061236783610b89565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b6001600160e01b0319811681146109c157600080fd5b6000602082840312156123c857600080fd5b8135610cdf816123a0565b60005b838110156123ee5781810151838201526020016123d6565b83811115610d785750506000910152565b600081518084526124178160208601602086016123d3565b601f01601f19169290920160200192915050565b602081526000610cdf60208301846123ff565b60006020828403121561245057600080fd5b5035919050565b80356001600160a01b038116811461246e57600080fd5b919050565b6000806040838503121561248657600080fd5b61248f83612457565b946020939093013593505050565b6000806000606084860312156124b257600080fd5b6124bb84612457565b92506124c960208501612457565b9150604084013590509250925092565b600080604083850312156124ec57600080fd5b823591506124fc60208401612457565b90509250929050565b60006020828403121561251757600080fd5b610cdf82612457565b6000806040838503121561253357600080fd5b50508035926020909101359150565b6000806040838503121561255557600080fd5b61255e83612457565b91506020830135801515811461257357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156125aa57600080fd5b6125b385612457565b93506125c160208601612457565b925060408501359150606085013567ffffffffffffffff808211156125e557600080fd5b818701915087601f8301126125f957600080fd5b81358181111561260b5761260b61257e565b604051601f8201601f19908116603f011681019083821181831017156126335761263361257e565b816040528281528a602084870101111561264c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561268357600080fd5b61268c83612457565b91506124fc60208401612457565b600181811c908216806126ae57607f821691505b602082108114156126cf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516126fd8184602088016123d3565b8351908301906127118183602088016123d3565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516127528160178501602088016123d3565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161278f8160288401602088016123d3565b01602801949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526127cd60808301846123ff565b9695505050505050565b6000602082840312156127e957600080fd5b8151610cdf816123a0565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612824576128246127f4565b500290565b6000821982111561283c5761283c6127f4565b500190565b600081612850576128506127f4565b506000190190565b60008282101561286a5761286a6127f4565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220639ead0cfadfa92f8633043a32160285e8eb8f87e0938fdffec592bf4b8281db64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D65 CODESIZE SUB DUP1 PUSH3 0x2D65 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x3CC JUMP JUMPDEST DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x259 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x259 JUMP JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP DUP1 MLOAD PUSH3 0x85 SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x259 JUMP JUMPDEST POP PUSH3 0x93 PUSH1 0x0 CALLER PUSH3 0xF4 JUMP JUMPDEST PUSH3 0xBF PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH3 0xF4 JUMP JUMPDEST PUSH3 0xEB PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH3 0xF4 JUMP JUMPDEST POP POP POP PUSH3 0x49A JUMP JUMPDEST PUSH3 0x100 DUP3 DUP3 PUSH3 0x104 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x11B DUP3 DUP3 PUSH3 0x147 PUSH1 0x20 SHL PUSH3 0xE20 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x142 SWAP2 DUP4 SWAP1 PUSH3 0xEBE PUSH3 0x1E7 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x100 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1A3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x207 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x250 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x201 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x201 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x267 SWAP1 PUSH3 0x45D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x28B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2D6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B9 JUMP JUMPDEST POP PUSH3 0x2E4 SWAP3 SWAP2 POP PUSH3 0x2E8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2E9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x344 JUMPI PUSH3 0x344 PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x36F JUMPI PUSH3 0x36F PUSH3 0x2FF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x3B0 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x391 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x3C2 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x408 DUP8 DUP4 DUP9 ADD PUSH3 0x315 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x42D DUP8 DUP4 DUP9 ADD PUSH3 0x315 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x453 DUP7 DUP3 DUP8 ADD PUSH3 0x315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x472 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x494 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28BB DUP1 PUSH3 0x4AA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH2 0x23A PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x209 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x2473 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x209 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x249D JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2473 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x265 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x249D JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x23A PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0xA68 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0x26B PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x265 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x21A PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x26B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2594 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x26B PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x26B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x26B PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x2670 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3 DUP3 PUSH2 0xED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x269A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x504 SWAP1 PUSH2 0x269A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x551 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x526 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x551 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x534 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP3 PUSH2 0xF11 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D DUP3 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x638 JUMPI POP PUSH2 0x638 DUP2 CALLER PUSH2 0x48A JUMP JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 PUSH2 0xF75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6C4 CALLER JUMPDEST DUP3 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 DUP4 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x74C DUP2 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x761 DUP4 PUSH2 0xB89 JUMP JUMPDEST DUP3 LT PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x886 DUP3 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B4 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x396 JUMP JUMPDEST PUSH2 0x928 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4552433732315072657365744D696E7465725061757365724175746F49643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D75737420686176652070617573657220726F6C6520746F20756E7061757365 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x930 PUSH2 0x12D0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x956 CALLER PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x9C1 DUP2 PUSH2 0x1322 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0xAF7 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x396 JUMP JUMPDEST PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732315072657365744D696E7465725061757365724175746F49643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D7573742068617665206D696E74657220726F6C6520746F206D696E74000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB76 PUSH1 0xD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x9C1 PUSH1 0xD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC4D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x396 JUMP JUMPDEST PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732315072657365744D696E7465725061757365724175746F49643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D75737420686176652070617573657220726F6C6520746F2070617573650000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x930 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xCDF SWAP1 DUP4 PUSH2 0x15B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x886 CALLER DUP4 DUP4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0xD0A CALLER DUP4 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0xD78 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1690 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD89 DUP3 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD93 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDF JUMP JUMPDEST DUP1 PUSH2 0xDBD DUP5 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDCE SWAP3 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x4C3 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xE16 DUP2 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x886 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE7A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C3 JUMPI POP PUSH2 0x4C3 DUP3 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xFB7 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFFC DUP4 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1043 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1067 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x105C DUP5 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1082 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x116E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1181 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x5 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x9C1 DUP2 CALLER PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1296 DUP3 DUP3 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x6B4 SWAP1 DUP3 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x12B8 DUP3 DUP3 PUSH2 0x191C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x6B4 SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132D DUP3 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP PUSH2 0x133D DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x1346 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x148D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x149B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1305 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF DUP4 DUP4 PUSH2 0x1A55 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x169B DUP5 DUP5 DUP5 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x16A7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1735 DUP4 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1755 JUMPI PUSH2 0x1755 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x177F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x17C5 JUMPI PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1789 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1823 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4C3 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x188E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x4C3 JUMPI POP PUSH2 0x4C3 DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0xD78 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x886 JUMPI PUSH2 0x18DA DUP2 PUSH2 0x1D87 JUMP JUMPDEST PUSH2 0x18E5 DUP4 PUSH1 0x20 PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F6 SWAP3 SWAP2 SWAP1 PUSH2 0x271A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x613 SWAP2 PUSH1 0x4 ADD PUSH2 0x242B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x886 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A6C JUMPI PUSH2 0x1A6C PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1BD7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1AC3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x279B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B0D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B0A SWAP2 DUP2 ADD SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BBD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1BB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1067 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C2B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C57 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C75 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C8D JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CA1 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CB3 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4C3 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C3 JUMPI POP PUSH2 0x4C3 DUP3 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x1D0E DUP5 DUP5 DUP5 DUP5 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732315061757361626C653A20746F6B656E207472616E736665722077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68696C6520706175736564000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4C3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1DA8 DUP4 PUSH1 0x2 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1DB3 SWAP1 PUSH1 0x2 PUSH2 0x2829 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DCB JUMPI PUSH2 0x1DCB PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E2C JUMPI PUSH2 0x1E2C PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E77 JUMPI PUSH2 0x1E77 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1E9B DUP5 PUSH1 0x2 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1EA6 SWAP1 PUSH1 0x1 PUSH2 0x2829 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F2B JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1EE7 JUMPI PUSH2 0x1EE7 PUSH2 0x26D5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EFD JUMPI PUSH2 0x1EFD PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1F24 DUP2 PUSH2 0x2841 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EA9 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 PUSH2 0x1F9E PUSH1 0x1 DUP4 PUSH2 0x2858 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1FB2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2858 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2017 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1FD2 JUMPI PUSH2 0x1FD2 PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FF5 JUMPI PUSH2 0x1FF5 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2028 JUMPI PUSH2 0x2028 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C3 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x214B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20636F6E7365637574697665207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E7366657273206E6F7420737570706F727465640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x21A7 JUMPI PUSH2 0x21A2 DUP2 PUSH1 0xA DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SSTORE JUMP JUMPDEST PUSH2 0x21CA JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x21CA JUMPI PUSH2 0x21CA DUP6 DUP3 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x21E6 JUMPI PUSH2 0x21E1 DUP2 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x2209 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2209 JUMPI PUSH2 0x2209 DUP5 DUP3 PUSH2 0x235C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x221D DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x2227 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x227A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x8 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x22BF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x22E7 JUMPI PUSH2 0x22E7 PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2308 JUMPI PUSH2 0x2308 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x2340 JUMPI PUSH2 0x2340 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2367 DUP4 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCDF DUP2 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23D6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD78 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2417 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xCDF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x246E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x248F DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24BB DUP5 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP PUSH2 0x24C9 PUSH1 0x20 DUP6 ADD PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x24FC PUSH1 0x20 DUP5 ADD PUSH2 0x2457 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCDF DUP3 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255E DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x25AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25B3 DUP6 PUSH2 0x2457 JUMP JUMPDEST SWAP4 POP PUSH2 0x25C1 PUSH1 0x20 DUP7 ADD PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x260B JUMPI PUSH2 0x260B PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2633 JUMPI PUSH2 0x2633 PUSH2 0x257E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x264C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x268C DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FC PUSH1 0x20 DUP5 ADD PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x26AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x26CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x26FD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2711 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2752 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x278F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x27CD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x23FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCDF DUP2 PUSH2 0x23A0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2824 PUSH2 0x27F4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x283C JUMPI PUSH2 0x283C PUSH2 0x27F4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2850 JUMPI PUSH2 0x2850 PUSH2 0x27F4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x286A JUMPI PUSH2 0x286A PUSH2 0x27F4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x9EAD0CFA 0xDF 0xA9 0x2F DUP7 CALLER DIV GASPRICE ORIGIN AND MUL DUP6 0xE8 0xEB DUP16 DUP8 0xE0 SWAP4 DUP16 0xDF INVALID 0xC5 SWAP3 0xBF 0x4B DUP3 DUP2 0xDB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1138:3201:30:-:0;;;1806:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13:16;;1895:4:30;;1901:6;;1456:13:16;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:16;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;996:7:15;:15;;-1:-1:-1;;996:15:15;;;-1:-1:-1;1919:28:30;;::::1;::::0;:13:::1;::::0;:28:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1958:44:30::1;2198:4:1;719:10:34::0;1958::30::1;:44::i;:::-;2013:37;1370:24;719:10:34::0;1958::30::1;:44::i;2013:37::-;2060;1438:24;719:10:34::0;1958::30::1;:44::i;2060:37::-;1806:298:::0;;;1138:3201;;6937:110:1;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;1978:166:2:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7587:233:1:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:1;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:1;;;;;;;;;:36;;-1:-1:-1;;7708:36:1;7740:4;7708:36;;;7790:12;719:10:34;;640:96;7790:12:1;-1:-1:-1;;;;;7763:40:1;7781:7;-1:-1:-1;;;;;7763:40:1;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:47:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:47;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:47;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:47;2589:12;;1138:3201:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1138:3201:30;;;-1:-1:-1;1138:3201:30;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:48;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:48;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:48;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:48:o;1036:766::-;1154:6;1162;1170;1223:2;1211:9;1202:7;1198:23;1194:32;1191:52;;;1239:1;1236;1229:12;1191:52;1266:16;;-1:-1:-1;;;;;1331:14:48;;;1328:34;;;1358:1;1355;1348:12;1328:34;1381:61;1434:7;1425:6;1414:9;1410:22;1381:61;:::i;:::-;1371:71;;1488:2;1477:9;1473:18;1467:25;1451:41;;1517:2;1507:8;1504:16;1501:36;;;1533:1;1530;1523:12;1501:36;1556:63;1611:7;1600:8;1589:9;1585:24;1556:63;:::i;:::-;1546:73;;1665:2;1654:9;1650:18;1644:25;1628:41;;1694:2;1684:8;1681:16;1678:36;;;1710:1;1707;1700:12;1678:36;;1733:63;1788:7;1777:8;1766:9;1762:24;1733:63;:::i;:::-;1723:73;;;1036:766;;;;;:::o;1807:380::-;1886:1;1882:12;;;;1929;;;1950:61;;2004:4;1996:6;1992:17;1982:27;;1950:61;2057:2;2049:6;2046:14;2026:18;2023:38;2020:161;;;2103:10;2098:3;2094:20;2091:1;2084:31;2138:4;2135:1;2128:15;2166:4;2163:1;2156:15;2020:161;;1807:380;;;:::o;:::-;1138:3201:30;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_128":{"entryPoint":null,"id":128,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_3834":{"entryPoint":null,"id":3834,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_3839":{"entryPoint":null,"id":3839,"parameterSlots":0,"returnSlots":0},"@_addTokenToAllTokensEnumeration_3120":{"entryPoint":null,"id":3120,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_3100":{"entryPoint":9052,"id":3100,"parameterSlots":2,"returnSlots":0},"@_add_10025":{"entryPoint":6108,"id":10025,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_2398":{"entryPoint":null,"id":2398,"parameterSlots":4,"returnSlots":0},"@_approve_2264":{"entryPoint":3957,"id":2264,"parameterSlots":2,"returnSlots":0},"@_at_10159":{"entryPoint":6741,"id":10159,"parameterSlots":2,"returnSlots":1},"@_baseURI_3890":{"entryPoint":5913,"id":3890,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2385":{"entryPoint":null,"id":2385,"parameterSlots":4,"returnSlots":0},"@_beforeTokenTransfer_3070":{"entryPoint":8404,"id":3070,"parameterSlots":4,"returnSlots":0},"@_beforeTokenTransfer_3271":{"entryPoint":7426,"id":3271,"parameterSlots":4,"returnSlots":0},"@_beforeTokenTransfer_3977":{"entryPoint":6301,"id":3977,"parameterSlots":4,"returnSlots":0},"@_burn_2155":{"entryPoint":4898,"id":2155,"parameterSlots":1,"returnSlots":0},"@_checkOnERC721Received_2372":{"entryPoint":6783,"id":2372,"parameterSlots":4,"returnSlots":1},"@_checkRole_193":{"entryPoint":4738,"id":193,"parameterSlots":1,"returnSlots":0},"@_checkRole_232":{"entryPoint":6313,"id":232,"parameterSlots":2,"returnSlots":0},"@_contains_10128":{"entryPoint":null,"id":10128,"parameterSlots":2,"returnSlots":1},"@_exists_1933":{"entryPoint":null,"id":1933,"parameterSlots":1,"returnSlots":1},"@_grantRole_384":{"entryPoint":3616,"id":384,"parameterSlots":2,"returnSlots":0},"@_grantRole_516":{"entryPoint":4748,"id":516,"parameterSlots":2,"returnSlots":0},"@_isApprovedOrOwner_1967":{"entryPoint":4080,"id":1967,"parameterSlots":2,"returnSlots":1},"@_length_10142":{"entryPoint":null,"id":10142,"parameterSlots":1,"returnSlots":1},"@_mint_2088":{"entryPoint":5074,"id":2088,"parameterSlots":2,"returnSlots":0},"@_msgSender_6077":{"entryPoint":null,"id":6077,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1915":{"entryPoint":null,"id":1915,"parameterSlots":1,"returnSlots":1},"@_pause_1470":{"entryPoint":5496,"id":1470,"parameterSlots":0,"returnSlots":0},"@_removeTokenFromAllTokensEnumeration_3231":{"entryPoint":8877,"id":3231,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_3183":{"entryPoint":8720,"id":3183,"parameterSlots":2,"returnSlots":0},"@_remove_10109":{"entryPoint":8058,"id":10109,"parameterSlots":2,"returnSlots":1},"@_requireMinted_2310":{"entryPoint":3857,"id":2310,"parameterSlots":1,"returnSlots":0},"@_requireNotPaused_1443":{"entryPoint":6658,"id":1443,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1454":{"entryPoint":6576,"id":1454,"parameterSlots":0,"returnSlots":0},"@_revokeRole_415":{"entryPoint":6428,"id":415,"parameterSlots":2,"returnSlots":0},"@_revokeRole_540":{"entryPoint":4782,"id":540,"parameterSlots":2,"returnSlots":0},"@_safeTransfer_1902":{"entryPoint":5776,"id":1902,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2296":{"entryPoint":5569,"id":2296,"parameterSlots":3,"returnSlots":0},"@_transfer_2240":{"entryPoint":4207,"id":2240,"parameterSlots":3,"returnSlots":0},"@_unpause_1486":{"entryPoint":4816,"id":1486,"parameterSlots":0,"returnSlots":0},"@add_10325":{"entryPoint":3774,"id":10325,"parameterSlots":2,"returnSlots":1},"@approve_1744":{"entryPoint":1410,"id":1744,"parameterSlots":2,"returnSlots":0},"@at_10421":{"entryPoint":5557,"id":10421,"parameterSlots":2,"returnSlots":1},"@balanceOf_1605":{"entryPoint":2953,"id":1605,"parameterSlots":1,"returnSlots":1},"@burn_2577":{"entryPoint":2381,"id":2577,"parameterSlots":1,"returnSlots":0},"@current_6105":{"entryPoint":null,"id":6105,"parameterSlots":1,"returnSlots":1},"@getApproved_1762":{"entryPoint":1371,"id":1762,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_247":{"entryPoint":null,"id":247,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_492":{"entryPoint":3556,"id":492,"parameterSlots":1,"returnSlots":1},"@getRoleMember_476":{"entryPoint":3271,"id":476,"parameterSlots":2,"returnSlots":1},"@grantRole_267":{"entryPoint":1841,"id":267,"parameterSlots":2,"returnSlots":0},"@hasRole_180":{"entryPoint":null,"id":180,"parameterSlots":2,"returnSlots":1},"@increment_6119":{"entryPoint":null,"id":6119,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_1797":{"entryPoint":null,"id":1797,"parameterSlots":2,"returnSlots":1},"@isContract_4212":{"entryPoint":null,"id":4212,"parameterSlots":1,"returnSlots":1},"@length_10394":{"entryPoint":6098,"id":10394,"parameterSlots":1,"returnSlots":1},"@log10_8025":{"entryPoint":7138,"id":8025,"parameterSlots":1,"returnSlots":1},"@mint_3918":{"entryPoint":2765,"id":3918,"parameterSlots":1,"returnSlots":0},"@name_1643":{"entryPoint":1225,"id":1643,"parameterSlots":0,"returnSlots":1},"@ownerOf_1633":{"entryPoint":2664,"id":1633,"parameterSlots":1,"returnSlots":1},"@pause_3935":{"entryPoint":3107,"id":3935,"parameterSlots":0,"returnSlots":0},"@paused_1431":{"entryPoint":null,"id":1431,"parameterSlots":0,"returnSlots":1},"@remove_10352":{"entryPoint":6555,"id":10352,"parameterSlots":2,"returnSlots":1},"@renounceRole_310":{"entryPoint":2046,"id":310,"parameterSlots":2,"returnSlots":0},"@revokeRole_287":{"entryPoint":3579,"id":287,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1843":{"entryPoint":2354,"id":1843,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1873":{"entryPoint":3328,"id":1873,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1779":{"entryPoint":3317,"id":1779,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1581":{"entryPoint":6187,"id":1581,"parameterSlots":1,"returnSlots":1},"@supportsInterface_161":{"entryPoint":8301,"id":161,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2928":{"entryPoint":3795,"id":2928,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3995":{"entryPoint":1208,"id":3995,"parameterSlots":1,"returnSlots":1},"@supportsInterface_457":{"entryPoint":7364,"id":457,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7309":{"entryPoint":null,"id":7309,"parameterSlots":1,"returnSlots":1},"@symbol_1653":{"entryPoint":3302,"id":1653,"parameterSlots":0,"returnSlots":1},"@toHexString_6670":{"entryPoint":7577,"id":6670,"parameterSlots":2,"returnSlots":1},"@toHexString_6690":{"entryPoint":7559,"id":6690,"parameterSlots":1,"returnSlots":1},"@toString_6546":{"entryPoint":5928,"id":6546,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_2990":{"entryPoint":2500,"id":2990,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_2956":{"entryPoint":1878,"id":2956,"parameterSlots":2,"returnSlots":1},"@tokenURI_1692":{"entryPoint":3454,"id":1692,"parameterSlots":1,"returnSlots":1},"@totalSupply_2967":{"entryPoint":null,"id":2967,"parameterSlots":0,"returnSlots":1},"@transferFrom_1824":{"entryPoint":1721,"id":1824,"parameterSlots":3,"returnSlots":0},"@unpause_3952":{"entryPoint":2186,"id":3952,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":9303,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9840,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9373,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":9620,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9538,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9331,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":9433,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":9504,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":10199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":9215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9963,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10010,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10139,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_08db93f8e1c3024ee7c131cc7a109eb4e5cb2ff5f9a23b64fb5b344cedec8968__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10281,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10250,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10328,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":9171,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":10305,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9882,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10228,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":10351,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9941,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9598,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":9120,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18343:48","statements":[{"nodeType":"YulBlock","src":"6:3:48","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:133:48","statements":[{"body":{"nodeType":"YulBlock","src":"169:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:48"},"nodeType":"YulFunctionCall","src":"171:12:48"},"nodeType":"YulExpressionStatement","src":"171:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:48"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"99:66:48","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:48"},"nodeType":"YulFunctionCall","src":"88:78:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:48"},"nodeType":"YulFunctionCall","src":"78:89:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:48"},"nodeType":"YulFunctionCall","src":"71:97:48"},"nodeType":"YulIf","src":"68:117:48"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:48","type":""}],"src":"14:177:48"},{"body":{"nodeType":"YulBlock","src":"265:176:48","statements":[{"body":{"nodeType":"YulBlock","src":"311:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"320:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"323:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"313:6:48"},"nodeType":"YulFunctionCall","src":"313:12:48"},"nodeType":"YulExpressionStatement","src":"313:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"286:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"295:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"282:3:48"},"nodeType":"YulFunctionCall","src":"282:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"307:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"278:3:48"},"nodeType":"YulFunctionCall","src":"278:32:48"},"nodeType":"YulIf","src":"275:52:48"},{"nodeType":"YulVariableDeclaration","src":"336:36:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"349:12:48"},"nodeType":"YulFunctionCall","src":"349:23:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"340:5:48","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"405:5:48"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"381:23:48"},"nodeType":"YulFunctionCall","src":"381:30:48"},"nodeType":"YulExpressionStatement","src":"381:30:48"},{"nodeType":"YulAssignment","src":"420:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"430:5:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"420:6:48"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"231:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"242:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"254:6:48","type":""}],"src":"196:245:48"},{"body":{"nodeType":"YulBlock","src":"541:92:48","statements":[{"nodeType":"YulAssignment","src":"551:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"574:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"559:3:48"},"nodeType":"YulFunctionCall","src":"559:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"551:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:48"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"618:6:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"611:6:48"},"nodeType":"YulFunctionCall","src":"611:14:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"604:6:48"},"nodeType":"YulFunctionCall","src":"604:22:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"586:6:48"},"nodeType":"YulFunctionCall","src":"586:41:48"},"nodeType":"YulExpressionStatement","src":"586:41:48"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"510:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"521:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"532:4:48","type":""}],"src":"446:187:48"},{"body":{"nodeType":"YulBlock","src":"691:205:48","statements":[{"nodeType":"YulVariableDeclaration","src":"701:10:48","value":{"kind":"number","nodeType":"YulLiteral","src":"710:1:48","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"705:1:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"770:63:48","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"795:3:48"},{"name":"i","nodeType":"YulIdentifier","src":"800:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"791:3:48"},"nodeType":"YulFunctionCall","src":"791:11:48"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"814:3:48"},{"name":"i","nodeType":"YulIdentifier","src":"819:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"810:3:48"},"nodeType":"YulFunctionCall","src":"810:11:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"804:5:48"},"nodeType":"YulFunctionCall","src":"804:18:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"784:6:48"},"nodeType":"YulFunctionCall","src":"784:39:48"},"nodeType":"YulExpressionStatement","src":"784:39:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"731:1:48"},{"name":"length","nodeType":"YulIdentifier","src":"734:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"728:2:48"},"nodeType":"YulFunctionCall","src":"728:13:48"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"742:19:48","statements":[{"nodeType":"YulAssignment","src":"744:15:48","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"753:1:48"},{"kind":"number","nodeType":"YulLiteral","src":"756:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"749:3:48"},"nodeType":"YulFunctionCall","src":"749:10:48"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"744:1:48"}]}]},"pre":{"nodeType":"YulBlock","src":"724:3:48","statements":[]},"src":"720:113:48"},{"body":{"nodeType":"YulBlock","src":"859:31:48","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"872:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"877:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"868:3:48"},"nodeType":"YulFunctionCall","src":"868:16:48"},{"kind":"number","nodeType":"YulLiteral","src":"886:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"861:6:48"},"nodeType":"YulFunctionCall","src":"861:27:48"},"nodeType":"YulExpressionStatement","src":"861:27:48"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"848:1:48"},{"name":"length","nodeType":"YulIdentifier","src":"851:6:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"845:2:48"},"nodeType":"YulFunctionCall","src":"845:13:48"},"nodeType":"YulIf","src":"842:48:48"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"669:3:48","type":""},{"name":"dst","nodeType":"YulTypedName","src":"674:3:48","type":""},{"name":"length","nodeType":"YulTypedName","src":"679:6:48","type":""}],"src":"638:258:48"},{"body":{"nodeType":"YulBlock","src":"951:208:48","statements":[{"nodeType":"YulVariableDeclaration","src":"961:26:48","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"981:5:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"975:5:48"},"nodeType":"YulFunctionCall","src":"975:12:48"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"965:6:48","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1003:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"1008:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"996:6:48"},"nodeType":"YulFunctionCall","src":"996:19:48"},"nodeType":"YulExpressionStatement","src":"996:19:48"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1050:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"1057:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:48"},"nodeType":"YulFunctionCall","src":"1046:16:48"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1068:3:48"},{"kind":"number","nodeType":"YulLiteral","src":"1073:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1064:3:48"},"nodeType":"YulFunctionCall","src":"1064:14:48"},{"name":"length","nodeType":"YulIdentifier","src":"1080:6:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1024:21:48"},"nodeType":"YulFunctionCall","src":"1024:63:48"},"nodeType":"YulExpressionStatement","src":"1024:63:48"},{"nodeType":"YulAssignment","src":"1096:57:48","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1111:3:48"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1124:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:48","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1120:3:48"},"nodeType":"YulFunctionCall","src":"1120:15:48"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1141:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1137:3:48"},"nodeType":"YulFunctionCall","src":"1137:7:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1116:3:48"},"nodeType":"YulFunctionCall","src":"1116:29:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1107:3:48"},"nodeType":"YulFunctionCall","src":"1107:39:48"},{"kind":"number","nodeType":"YulLiteral","src":"1148:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1103:3:48"},"nodeType":"YulFunctionCall","src":"1103:50:48"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1096:3:48"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"928:5:48","type":""},{"name":"pos","nodeType":"YulTypedName","src":"935:3:48","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"943:3:48","type":""}],"src":"901:258:48"},{"body":{"nodeType":"YulBlock","src":"1285:99:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1302:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1313:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1295:6:48"},"nodeType":"YulFunctionCall","src":"1295:21:48"},"nodeType":"YulExpressionStatement","src":"1295:21:48"},{"nodeType":"YulAssignment","src":"1325:53:48","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1351:6:48"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1363:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1374:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1359:3:48"},"nodeType":"YulFunctionCall","src":"1359:18:48"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1333:17:48"},"nodeType":"YulFunctionCall","src":"1333:45:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1325:4:48"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1254:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1265:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1276:4:48","type":""}],"src":"1164:220:48"},{"body":{"nodeType":"YulBlock","src":"1459:110:48","statements":[{"body":{"nodeType":"YulBlock","src":"1505:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1514:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1517:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1507:6:48"},"nodeType":"YulFunctionCall","src":"1507:12:48"},"nodeType":"YulExpressionStatement","src":"1507:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1480:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"1489:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1476:3:48"},"nodeType":"YulFunctionCall","src":"1476:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"1501:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1472:3:48"},"nodeType":"YulFunctionCall","src":"1472:32:48"},"nodeType":"YulIf","src":"1469:52:48"},{"nodeType":"YulAssignment","src":"1530:33:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1553:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1540:12:48"},"nodeType":"YulFunctionCall","src":"1540:23:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1530:6:48"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1425:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1436:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1448:6:48","type":""}],"src":"1389:180:48"},{"body":{"nodeType":"YulBlock","src":"1675:125:48","statements":[{"nodeType":"YulAssignment","src":"1685:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1697:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"1708:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:48"},"nodeType":"YulFunctionCall","src":"1693:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1685:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:48"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1742:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"1750:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1738:3:48"},"nodeType":"YulFunctionCall","src":"1738:55:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1720:6:48"},"nodeType":"YulFunctionCall","src":"1720:74:48"},"nodeType":"YulExpressionStatement","src":"1720:74:48"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1644:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1655:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1666:4:48","type":""}],"src":"1574:226:48"},{"body":{"nodeType":"YulBlock","src":"1854:147:48","statements":[{"nodeType":"YulAssignment","src":"1864:29:48","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1886:6:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1873:12:48"},"nodeType":"YulFunctionCall","src":"1873:20:48"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1864:5:48"}]},{"body":{"nodeType":"YulBlock","src":"1979:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1988:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1991:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1981:6:48"},"nodeType":"YulFunctionCall","src":"1981:12:48"},"nodeType":"YulExpressionStatement","src":"1981:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1915:5:48"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1926:5:48"},{"kind":"number","nodeType":"YulLiteral","src":"1933:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1922:3:48"},"nodeType":"YulFunctionCall","src":"1922:54:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:48"},"nodeType":"YulFunctionCall","src":"1912:65:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1905:6:48"},"nodeType":"YulFunctionCall","src":"1905:73:48"},"nodeType":"YulIf","src":"1902:93:48"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1833:6:48","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1844:5:48","type":""}],"src":"1805:196:48"},{"body":{"nodeType":"YulBlock","src":"2093:167:48","statements":[{"body":{"nodeType":"YulBlock","src":"2139:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2148:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2151:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2141:6:48"},"nodeType":"YulFunctionCall","src":"2141:12:48"},"nodeType":"YulExpressionStatement","src":"2141:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2114:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2110:3:48"},"nodeType":"YulFunctionCall","src":"2110:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2135:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2106:3:48"},"nodeType":"YulFunctionCall","src":"2106:32:48"},"nodeType":"YulIf","src":"2103:52:48"},{"nodeType":"YulAssignment","src":"2164:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2193:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2174:18:48"},"nodeType":"YulFunctionCall","src":"2174:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2164:6:48"}]},{"nodeType":"YulAssignment","src":"2212:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2239:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2250:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:48"},"nodeType":"YulFunctionCall","src":"2235:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2222:12:48"},"nodeType":"YulFunctionCall","src":"2222:32:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2212:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2051:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2062:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2074:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2082:6:48","type":""}],"src":"2006:254:48"},{"body":{"nodeType":"YulBlock","src":"2366:76:48","statements":[{"nodeType":"YulAssignment","src":"2376:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2388:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2399:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2384:3:48"},"nodeType":"YulFunctionCall","src":"2384:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2376:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2418:9:48"},{"name":"value0","nodeType":"YulIdentifier","src":"2429:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2411:6:48"},"nodeType":"YulFunctionCall","src":"2411:25:48"},"nodeType":"YulExpressionStatement","src":"2411:25:48"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2335:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2346:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2357:4:48","type":""}],"src":"2265:177:48"},{"body":{"nodeType":"YulBlock","src":"2551:224:48","statements":[{"body":{"nodeType":"YulBlock","src":"2597:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2606:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2609:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2599:6:48"},"nodeType":"YulFunctionCall","src":"2599:12:48"},"nodeType":"YulExpressionStatement","src":"2599:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2572:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2581:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2568:3:48"},"nodeType":"YulFunctionCall","src":"2568:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2593:2:48","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2564:3:48"},"nodeType":"YulFunctionCall","src":"2564:32:48"},"nodeType":"YulIf","src":"2561:52:48"},{"nodeType":"YulAssignment","src":"2622:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2651:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2632:18:48"},"nodeType":"YulFunctionCall","src":"2632:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2622:6:48"}]},{"nodeType":"YulAssignment","src":"2670:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2703:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2714:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2699:3:48"},"nodeType":"YulFunctionCall","src":"2699:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2680:18:48"},"nodeType":"YulFunctionCall","src":"2680:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2670:6:48"}]},{"nodeType":"YulAssignment","src":"2727:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"2765:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2750:3:48"},"nodeType":"YulFunctionCall","src":"2750:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2737:12:48"},"nodeType":"YulFunctionCall","src":"2737:32:48"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2727:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2501:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2512:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2524:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2532:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2540:6:48","type":""}],"src":"2447:328:48"},{"body":{"nodeType":"YulBlock","src":"2850:110:48","statements":[{"body":{"nodeType":"YulBlock","src":"2896:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2905:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2908:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2898:6:48"},"nodeType":"YulFunctionCall","src":"2898:12:48"},"nodeType":"YulExpressionStatement","src":"2898:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2871:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"2880:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2867:3:48"},"nodeType":"YulFunctionCall","src":"2867:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"2892:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2863:3:48"},"nodeType":"YulFunctionCall","src":"2863:32:48"},"nodeType":"YulIf","src":"2860:52:48"},{"nodeType":"YulAssignment","src":"2921:33:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2944:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2931:12:48"},"nodeType":"YulFunctionCall","src":"2931:23:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2921:6:48"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2816:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2827:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2839:6:48","type":""}],"src":"2780:180:48"},{"body":{"nodeType":"YulBlock","src":"3066:76:48","statements":[{"nodeType":"YulAssignment","src":"3076:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3088:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"3099:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3084:3:48"},"nodeType":"YulFunctionCall","src":"3084:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3076:4:48"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3118:9:48"},{"name":"value0","nodeType":"YulIdentifier","src":"3129:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3111:6:48"},"nodeType":"YulFunctionCall","src":"3111:25:48"},"nodeType":"YulExpressionStatement","src":"3111:25:48"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3035:9:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3046:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3057:4:48","type":""}],"src":"2965:177:48"},{"body":{"nodeType":"YulBlock","src":"3234:167:48","statements":[{"body":{"nodeType":"YulBlock","src":"3280:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3289:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3292:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3282:6:48"},"nodeType":"YulFunctionCall","src":"3282:12:48"},"nodeType":"YulExpressionStatement","src":"3282:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3255:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"3264:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3251:3:48"},"nodeType":"YulFunctionCall","src":"3251:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"3276:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3247:3:48"},"nodeType":"YulFunctionCall","src":"3247:32:48"},"nodeType":"YulIf","src":"3244:52:48"},{"nodeType":"YulAssignment","src":"3305:33:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3328:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3315:12:48"},"nodeType":"YulFunctionCall","src":"3315:23:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3305:6:48"}]},{"nodeType":"YulAssignment","src":"3347:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3380:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"3391:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3376:3:48"},"nodeType":"YulFunctionCall","src":"3376:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3357:18:48"},"nodeType":"YulFunctionCall","src":"3357:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3347:6:48"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3192:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3203:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3215:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3223:6:48","type":""}],"src":"3147:254:48"},{"body":{"nodeType":"YulBlock","src":"3476:116:48","statements":[{"body":{"nodeType":"YulBlock","src":"3522:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3534:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3524:6:48"},"nodeType":"YulFunctionCall","src":"3524:12:48"},"nodeType":"YulExpressionStatement","src":"3524:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3497:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"3506:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3493:3:48"},"nodeType":"YulFunctionCall","src":"3493:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"3518:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3489:3:48"},"nodeType":"YulFunctionCall","src":"3489:32:48"},"nodeType":"YulIf","src":"3486:52:48"},{"nodeType":"YulAssignment","src":"3547:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3576:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3557:18:48"},"nodeType":"YulFunctionCall","src":"3557:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3547:6:48"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3442:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3453:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3465:6:48","type":""}],"src":"3406:186:48"},{"body":{"nodeType":"YulBlock","src":"3684:161:48","statements":[{"body":{"nodeType":"YulBlock","src":"3730:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3739:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3742:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3732:6:48"},"nodeType":"YulFunctionCall","src":"3732:12:48"},"nodeType":"YulExpressionStatement","src":"3732:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3705:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"3714:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3701:3:48"},"nodeType":"YulFunctionCall","src":"3701:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"3726:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3697:3:48"},"nodeType":"YulFunctionCall","src":"3697:32:48"},"nodeType":"YulIf","src":"3694:52:48"},{"nodeType":"YulAssignment","src":"3755:33:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3778:9:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3765:12:48"},"nodeType":"YulFunctionCall","src":"3765:23:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3755:6:48"}]},{"nodeType":"YulAssignment","src":"3797:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3824:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"3835:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3820:3:48"},"nodeType":"YulFunctionCall","src":"3820:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3807:12:48"},"nodeType":"YulFunctionCall","src":"3807:32:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3797:6:48"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3642:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3653:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3665:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3673:6:48","type":""}],"src":"3597:248:48"},{"body":{"nodeType":"YulBlock","src":"3934:263:48","statements":[{"body":{"nodeType":"YulBlock","src":"3980:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3989:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3992:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3982:6:48"},"nodeType":"YulFunctionCall","src":"3982:12:48"},"nodeType":"YulExpressionStatement","src":"3982:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3955:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"3964:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3951:3:48"},"nodeType":"YulFunctionCall","src":"3951:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"3976:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3947:3:48"},"nodeType":"YulFunctionCall","src":"3947:32:48"},"nodeType":"YulIf","src":"3944:52:48"},{"nodeType":"YulAssignment","src":"4005:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4034:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4015:18:48"},"nodeType":"YulFunctionCall","src":"4015:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4005:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"4053:45:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:48"},"nodeType":"YulFunctionCall","src":"4079:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4066:12:48"},"nodeType":"YulFunctionCall","src":"4066:32:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4057:5:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4151:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4160:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4163:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4153:6:48"},"nodeType":"YulFunctionCall","src":"4153:12:48"},"nodeType":"YulExpressionStatement","src":"4153:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4120:5:48"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4141:5:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4134:6:48"},"nodeType":"YulFunctionCall","src":"4134:13:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4127:6:48"},"nodeType":"YulFunctionCall","src":"4127:21:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4117:2:48"},"nodeType":"YulFunctionCall","src":"4117:32:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4110:6:48"},"nodeType":"YulFunctionCall","src":"4110:40:48"},"nodeType":"YulIf","src":"4107:60:48"},{"nodeType":"YulAssignment","src":"4176:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"4186:5:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4176:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3892:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3903:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3915:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3923:6:48","type":""}],"src":"3850:347:48"},{"body":{"nodeType":"YulBlock","src":"4234:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4251:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4254:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4244:6:48"},"nodeType":"YulFunctionCall","src":"4244:88:48"},"nodeType":"YulExpressionStatement","src":"4244:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4348:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4351:4:48","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4341:6:48"},"nodeType":"YulFunctionCall","src":"4341:15:48"},"nodeType":"YulExpressionStatement","src":"4341:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4372:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4375:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4365:6:48"},"nodeType":"YulFunctionCall","src":"4365:15:48"},"nodeType":"YulExpressionStatement","src":"4365:15:48"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4202:184:48"},{"body":{"nodeType":"YulBlock","src":"4521:1008:48","statements":[{"body":{"nodeType":"YulBlock","src":"4568:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4577:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4580:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4570:6:48"},"nodeType":"YulFunctionCall","src":"4570:12:48"},"nodeType":"YulExpressionStatement","src":"4570:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4542:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"4551:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4538:3:48"},"nodeType":"YulFunctionCall","src":"4538:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"4563:3:48","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4534:3:48"},"nodeType":"YulFunctionCall","src":"4534:33:48"},"nodeType":"YulIf","src":"4531:53:48"},{"nodeType":"YulAssignment","src":"4593:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4622:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4603:18:48"},"nodeType":"YulFunctionCall","src":"4603:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4593:6:48"}]},{"nodeType":"YulAssignment","src":"4641:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4670:3:48"},"nodeType":"YulFunctionCall","src":"4670:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4651:18:48"},"nodeType":"YulFunctionCall","src":"4651:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4641:6:48"}]},{"nodeType":"YulAssignment","src":"4698:42:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4725:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4736:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4721:3:48"},"nodeType":"YulFunctionCall","src":"4721:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4708:12:48"},"nodeType":"YulFunctionCall","src":"4708:32:48"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4698:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"4749:46:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4780:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"4791:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4776:3:48"},"nodeType":"YulFunctionCall","src":"4776:18:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4763:12:48"},"nodeType":"YulFunctionCall","src":"4763:32:48"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4753:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4804:28:48","value":{"kind":"number","nodeType":"YulLiteral","src":"4814:18:48","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4808:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4859:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4868:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4871:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4861:6:48"},"nodeType":"YulFunctionCall","src":"4861:12:48"},"nodeType":"YulExpressionStatement","src":"4861:12:48"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4847:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"4855:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4844:2:48"},"nodeType":"YulFunctionCall","src":"4844:14:48"},"nodeType":"YulIf","src":"4841:34:48"},{"nodeType":"YulVariableDeclaration","src":"4884:32:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4898:9:48"},{"name":"offset","nodeType":"YulIdentifier","src":"4909:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4894:3:48"},"nodeType":"YulFunctionCall","src":"4894:22:48"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4888:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"4964:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4973:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4976:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4966:6:48"},"nodeType":"YulFunctionCall","src":"4966:12:48"},"nodeType":"YulExpressionStatement","src":"4966:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4943:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"4947:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4939:3:48"},"nodeType":"YulFunctionCall","src":"4939:13:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4954:7:48"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4935:3:48"},"nodeType":"YulFunctionCall","src":"4935:27:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4928:6:48"},"nodeType":"YulFunctionCall","src":"4928:35:48"},"nodeType":"YulIf","src":"4925:55:48"},{"nodeType":"YulVariableDeclaration","src":"4989:26:48","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5012:2:48"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4999:12:48"},"nodeType":"YulFunctionCall","src":"4999:16:48"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4993:2:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"5038:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5040:16:48"},"nodeType":"YulFunctionCall","src":"5040:18:48"},"nodeType":"YulExpressionStatement","src":"5040:18:48"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5030:2:48"},{"name":"_1","nodeType":"YulIdentifier","src":"5034:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5027:2:48"},"nodeType":"YulFunctionCall","src":"5027:10:48"},"nodeType":"YulIf","src":"5024:36:48"},{"nodeType":"YulVariableDeclaration","src":"5069:17:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5083:2:48","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5079:3:48"},"nodeType":"YulFunctionCall","src":"5079:7:48"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5073:2:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5095:23:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5115:2:48","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5109:5:48"},"nodeType":"YulFunctionCall","src":"5109:9:48"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5099:6:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5127:71:48","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5149:6:48"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5173:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:48","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5169:3:48"},"nodeType":"YulFunctionCall","src":"5169:13:48"},{"name":"_4","nodeType":"YulIdentifier","src":"5184:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5165:3:48"},"nodeType":"YulFunctionCall","src":"5165:22:48"},{"kind":"number","nodeType":"YulLiteral","src":"5189:2:48","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5161:3:48"},"nodeType":"YulFunctionCall","src":"5161:31:48"},{"name":"_4","nodeType":"YulIdentifier","src":"5194:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5157:3:48"},"nodeType":"YulFunctionCall","src":"5157:40:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5145:3:48"},"nodeType":"YulFunctionCall","src":"5145:53:48"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5131:10:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"5257:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5259:16:48"},"nodeType":"YulFunctionCall","src":"5259:18:48"},"nodeType":"YulExpressionStatement","src":"5259:18:48"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5216:10:48"},{"name":"_1","nodeType":"YulIdentifier","src":"5228:2:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5213:2:48"},"nodeType":"YulFunctionCall","src":"5213:18:48"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5236:10:48"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5248:6:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5233:2:48"},"nodeType":"YulFunctionCall","src":"5233:22:48"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5210:2:48"},"nodeType":"YulFunctionCall","src":"5210:46:48"},"nodeType":"YulIf","src":"5207:72:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5295:2:48","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5299:10:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5288:6:48"},"nodeType":"YulFunctionCall","src":"5288:22:48"},"nodeType":"YulExpressionStatement","src":"5288:22:48"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5326:6:48"},{"name":"_3","nodeType":"YulIdentifier","src":"5334:2:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5319:6:48"},"nodeType":"YulFunctionCall","src":"5319:18:48"},"nodeType":"YulExpressionStatement","src":"5319:18:48"},{"body":{"nodeType":"YulBlock","src":"5383:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5392:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5395:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5385:6:48"},"nodeType":"YulFunctionCall","src":"5385:12:48"},"nodeType":"YulExpressionStatement","src":"5385:12:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5360:2:48"},{"name":"_3","nodeType":"YulIdentifier","src":"5364:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5356:3:48"},"nodeType":"YulFunctionCall","src":"5356:11:48"},{"kind":"number","nodeType":"YulLiteral","src":"5369:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5352:3:48"},"nodeType":"YulFunctionCall","src":"5352:20:48"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5374:7:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5349:2:48"},"nodeType":"YulFunctionCall","src":"5349:33:48"},"nodeType":"YulIf","src":"5346:53:48"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5425:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"5433:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:48"},"nodeType":"YulFunctionCall","src":"5421:15:48"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5442:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"5446:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5438:3:48"},"nodeType":"YulFunctionCall","src":"5438:11:48"},{"name":"_3","nodeType":"YulIdentifier","src":"5451:2:48"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5408:12:48"},"nodeType":"YulFunctionCall","src":"5408:46:48"},"nodeType":"YulExpressionStatement","src":"5408:46:48"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5478:6:48"},{"name":"_3","nodeType":"YulIdentifier","src":"5486:2:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5474:3:48"},"nodeType":"YulFunctionCall","src":"5474:15:48"},{"kind":"number","nodeType":"YulLiteral","src":"5491:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5470:3:48"},"nodeType":"YulFunctionCall","src":"5470:24:48"},{"kind":"number","nodeType":"YulLiteral","src":"5496:1:48","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5463:6:48"},"nodeType":"YulFunctionCall","src":"5463:35:48"},"nodeType":"YulExpressionStatement","src":"5463:35:48"},{"nodeType":"YulAssignment","src":"5507:16:48","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5517:6:48"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5507:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4463:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4474:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4486:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4494:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4502:6:48","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4510:6:48","type":""}],"src":"4391:1138:48"},{"body":{"nodeType":"YulBlock","src":"5621:173:48","statements":[{"body":{"nodeType":"YulBlock","src":"5667:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5676:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5679:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5669:6:48"},"nodeType":"YulFunctionCall","src":"5669:12:48"},"nodeType":"YulExpressionStatement","src":"5669:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5642:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"5651:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5638:3:48"},"nodeType":"YulFunctionCall","src":"5638:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:48","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5634:3:48"},"nodeType":"YulFunctionCall","src":"5634:32:48"},"nodeType":"YulIf","src":"5631:52:48"},{"nodeType":"YulAssignment","src":"5692:39:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5721:9:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5702:18:48"},"nodeType":"YulFunctionCall","src":"5702:29:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5692:6:48"}]},{"nodeType":"YulAssignment","src":"5740:48:48","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5773:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"5784:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5769:3:48"},"nodeType":"YulFunctionCall","src":"5769:18:48"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5750:18:48"},"nodeType":"YulFunctionCall","src":"5750:38:48"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5740:6:48"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5579:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5590:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5602:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5610:6:48","type":""}],"src":"5534:260:48"},{"body":{"nodeType":"YulBlock","src":"5854:382:48","statements":[{"nodeType":"YulAssignment","src":"5864:22:48","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5878:1:48","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5881:4:48"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5874:3:48"},"nodeType":"YulFunctionCall","src":"5874:12:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5864:6:48"}]},{"nodeType":"YulVariableDeclaration","src":"5895:38:48","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5925:4:48"},{"kind":"number","nodeType":"YulLiteral","src":"5931:1:48","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5921:3:48"},"nodeType":"YulFunctionCall","src":"5921:12:48"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5899:18:48","type":""}]},{"body":{"nodeType":"YulBlock","src":"5972:31:48","statements":[{"nodeType":"YulAssignment","src":"5974:27:48","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5988:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"5996:4:48","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5984:3:48"},"nodeType":"YulFunctionCall","src":"5984:17:48"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5974:6:48"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5952:18:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5945:6:48"},"nodeType":"YulFunctionCall","src":"5945:26:48"},"nodeType":"YulIf","src":"5942:61:48"},{"body":{"nodeType":"YulBlock","src":"6062:168:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6083:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6086:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6076:6:48"},"nodeType":"YulFunctionCall","src":"6076:88:48"},"nodeType":"YulExpressionStatement","src":"6076:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6184:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6187:4:48","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6177:6:48"},"nodeType":"YulFunctionCall","src":"6177:15:48"},"nodeType":"YulExpressionStatement","src":"6177:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6212:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6215:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6205:6:48"},"nodeType":"YulFunctionCall","src":"6205:15:48"},"nodeType":"YulExpressionStatement","src":"6205:15:48"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6018:18:48"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6041:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"6049:2:48","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6038:2:48"},"nodeType":"YulFunctionCall","src":"6038:14:48"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6015:2:48"},"nodeType":"YulFunctionCall","src":"6015:38:48"},"nodeType":"YulIf","src":"6012:218:48"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5834:4:48","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5843:6:48","type":""}],"src":"5799:437:48"},{"body":{"nodeType":"YulBlock","src":"6415:223:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6432:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6443:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6425:6:48"},"nodeType":"YulFunctionCall","src":"6425:21:48"},"nodeType":"YulExpressionStatement","src":"6425:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6466:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6477:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6462:3:48"},"nodeType":"YulFunctionCall","src":"6462:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"6482:2:48","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6455:6:48"},"nodeType":"YulFunctionCall","src":"6455:30:48"},"nodeType":"YulExpressionStatement","src":"6455:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6505:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6516:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6501:3:48"},"nodeType":"YulFunctionCall","src":"6501:18:48"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"6521:34:48","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6494:6:48"},"nodeType":"YulFunctionCall","src":"6494:62:48"},"nodeType":"YulExpressionStatement","src":"6494:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6576:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6587:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6572:3:48"},"nodeType":"YulFunctionCall","src":"6572:18:48"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"6592:3:48","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6565:6:48"},"nodeType":"YulFunctionCall","src":"6565:31:48"},"nodeType":"YulExpressionStatement","src":"6565:31:48"},{"nodeType":"YulAssignment","src":"6605:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6617:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6628:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:48"},"nodeType":"YulFunctionCall","src":"6613:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6605:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6392:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6406:4:48","type":""}],"src":"6241:397:48"},{"body":{"nodeType":"YulBlock","src":"6817:251:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6834:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6845:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6827:6:48"},"nodeType":"YulFunctionCall","src":"6827:21:48"},"nodeType":"YulExpressionStatement","src":"6827:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6868:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6879:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6864:3:48"},"nodeType":"YulFunctionCall","src":"6864:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"6884:2:48","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6857:6:48"},"nodeType":"YulFunctionCall","src":"6857:30:48"},"nodeType":"YulExpressionStatement","src":"6857:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6907:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6918:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6903:3:48"},"nodeType":"YulFunctionCall","src":"6903:18:48"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"6923:34:48","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6896:6:48"},"nodeType":"YulFunctionCall","src":"6896:62:48"},"nodeType":"YulExpressionStatement","src":"6896:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"6989:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6974:3:48"},"nodeType":"YulFunctionCall","src":"6974:18:48"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"6994:31:48","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6967:6:48"},"nodeType":"YulFunctionCall","src":"6967:59:48"},"nodeType":"YulExpressionStatement","src":"6967:59:48"},{"nodeType":"YulAssignment","src":"7035:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7047:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7058:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7043:3:48"},"nodeType":"YulFunctionCall","src":"7043:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7035:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6794:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6808:4:48","type":""}],"src":"6643:425:48"},{"body":{"nodeType":"YulBlock","src":"7247:235:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7264:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7275:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7257:6:48"},"nodeType":"YulFunctionCall","src":"7257:21:48"},"nodeType":"YulExpressionStatement","src":"7257:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7298:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7309:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7294:3:48"},"nodeType":"YulFunctionCall","src":"7294:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"7314:2:48","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7287:6:48"},"nodeType":"YulFunctionCall","src":"7287:30:48"},"nodeType":"YulExpressionStatement","src":"7287:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7337:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7348:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7333:3:48"},"nodeType":"YulFunctionCall","src":"7333:18:48"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"7353:34:48","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7326:6:48"},"nodeType":"YulFunctionCall","src":"7326:62:48"},"nodeType":"YulExpressionStatement","src":"7326:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7408:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7419:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7404:3:48"},"nodeType":"YulFunctionCall","src":"7404:18:48"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"7424:15:48","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7397:6:48"},"nodeType":"YulFunctionCall","src":"7397:43:48"},"nodeType":"YulExpressionStatement","src":"7397:43:48"},{"nodeType":"YulAssignment","src":"7449:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7461:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7472:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7457:3:48"},"nodeType":"YulFunctionCall","src":"7457:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7449:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7224:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7238:4:48","type":""}],"src":"7073:409:48"},{"body":{"nodeType":"YulBlock","src":"7661:233:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7678:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7689:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7671:6:48"},"nodeType":"YulFunctionCall","src":"7671:21:48"},"nodeType":"YulExpressionStatement","src":"7671:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7712:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7723:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7708:3:48"},"nodeType":"YulFunctionCall","src":"7708:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"7728:2:48","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7701:6:48"},"nodeType":"YulFunctionCall","src":"7701:30:48"},"nodeType":"YulExpressionStatement","src":"7701:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7751:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7762:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7747:3:48"},"nodeType":"YulFunctionCall","src":"7747:18:48"},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f75","kind":"string","nodeType":"YulLiteral","src":"7767:34:48","type":"","value":"ERC721Enumerable: owner index ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7740:6:48"},"nodeType":"YulFunctionCall","src":"7740:62:48"},"nodeType":"YulExpressionStatement","src":"7740:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7822:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7833:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7818:3:48"},"nodeType":"YulFunctionCall","src":"7818:18:48"},{"hexValue":"74206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"7838:13:48","type":"","value":"t of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7811:6:48"},"nodeType":"YulFunctionCall","src":"7811:41:48"},"nodeType":"YulExpressionStatement","src":"7811:41:48"},{"nodeType":"YulAssignment","src":"7861:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7873:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"7884:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7869:3:48"},"nodeType":"YulFunctionCall","src":"7869:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7861:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7638:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7652:4:48","type":""}],"src":"7487:407:48"},{"body":{"nodeType":"YulBlock","src":"8073:237:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8090:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8101:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8083:6:48"},"nodeType":"YulFunctionCall","src":"8083:21:48"},"nodeType":"YulExpressionStatement","src":"8083:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8124:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8135:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8120:3:48"},"nodeType":"YulFunctionCall","src":"8120:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8140:2:48","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8113:6:48"},"nodeType":"YulFunctionCall","src":"8113:30:48"},"nodeType":"YulExpressionStatement","src":"8113:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8163:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8174:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:48"},"nodeType":"YulFunctionCall","src":"8159:18:48"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"8179:34:48","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8152:6:48"},"nodeType":"YulFunctionCall","src":"8152:62:48"},"nodeType":"YulExpressionStatement","src":"8152:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8234:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8245:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8230:3:48"},"nodeType":"YulFunctionCall","src":"8230:18:48"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"8250:17:48","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8223:6:48"},"nodeType":"YulFunctionCall","src":"8223:45:48"},"nodeType":"YulExpressionStatement","src":"8223:45:48"},{"nodeType":"YulAssignment","src":"8277:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8289:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8300:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8285:3:48"},"nodeType":"YulFunctionCall","src":"8285:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8277:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8050:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8064:4:48","type":""}],"src":"7899:411:48"},{"body":{"nodeType":"YulBlock","src":"8489:254:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8506:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8517:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8499:6:48"},"nodeType":"YulFunctionCall","src":"8499:21:48"},"nodeType":"YulExpressionStatement","src":"8499:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8540:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8551:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8536:3:48"},"nodeType":"YulFunctionCall","src":"8536:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8556:2:48","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8529:6:48"},"nodeType":"YulFunctionCall","src":"8529:30:48"},"nodeType":"YulExpressionStatement","src":"8529:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8579:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8590:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8575:3:48"},"nodeType":"YulFunctionCall","src":"8575:18:48"},{"hexValue":"4552433732315072657365744d696e7465725061757365724175746f49643a20","kind":"string","nodeType":"YulLiteral","src":"8595:34:48","type":"","value":"ERC721PresetMinterPauserAutoId: "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8568:6:48"},"nodeType":"YulFunctionCall","src":"8568:62:48"},"nodeType":"YulExpressionStatement","src":"8568:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8650:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8661:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8646:3:48"},"nodeType":"YulFunctionCall","src":"8646:18:48"},{"hexValue":"6d75737420686176652070617573657220726f6c6520746f20756e7061757365","kind":"string","nodeType":"YulLiteral","src":"8666:34:48","type":"","value":"must have pauser role to unpause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8639:6:48"},"nodeType":"YulFunctionCall","src":"8639:62:48"},"nodeType":"YulExpressionStatement","src":"8639:62:48"},{"nodeType":"YulAssignment","src":"8710:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8722:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8733:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8718:3:48"},"nodeType":"YulFunctionCall","src":"8718:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8710:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8466:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8480:4:48","type":""}],"src":"8315:428:48"},{"body":{"nodeType":"YulBlock","src":"8922:234:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8939:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8950:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8932:6:48"},"nodeType":"YulFunctionCall","src":"8932:21:48"},"nodeType":"YulExpressionStatement","src":"8932:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"8984:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:48"},"nodeType":"YulFunctionCall","src":"8969:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"8989:2:48","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8962:6:48"},"nodeType":"YulFunctionCall","src":"8962:30:48"},"nodeType":"YulExpressionStatement","src":"8962:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9012:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9023:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9008:3:48"},"nodeType":"YulFunctionCall","src":"9008:18:48"},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f","kind":"string","nodeType":"YulLiteral","src":"9028:34:48","type":"","value":"ERC721Enumerable: global index o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9001:6:48"},"nodeType":"YulFunctionCall","src":"9001:62:48"},"nodeType":"YulExpressionStatement","src":"9001:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9083:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9094:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9079:3:48"},"nodeType":"YulFunctionCall","src":"9079:18:48"},{"hexValue":"7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"9099:14:48","type":"","value":"ut of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9072:6:48"},"nodeType":"YulFunctionCall","src":"9072:42:48"},"nodeType":"YulExpressionStatement","src":"9072:42:48"},{"nodeType":"YulAssignment","src":"9123:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9135:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9146:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9131:3:48"},"nodeType":"YulFunctionCall","src":"9131:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9123:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8899:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8913:4:48","type":""}],"src":"8748:408:48"},{"body":{"nodeType":"YulBlock","src":"9193:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9210:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9213:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9203:6:48"},"nodeType":"YulFunctionCall","src":"9203:88:48"},"nodeType":"YulExpressionStatement","src":"9203:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9307:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9310:4:48","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9300:6:48"},"nodeType":"YulFunctionCall","src":"9300:15:48"},"nodeType":"YulExpressionStatement","src":"9300:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9331:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9334:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9324:6:48"},"nodeType":"YulFunctionCall","src":"9324:15:48"},"nodeType":"YulExpressionStatement","src":"9324:15:48"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9161:184:48"},{"body":{"nodeType":"YulBlock","src":"9524:174:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9541:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9552:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9534:6:48"},"nodeType":"YulFunctionCall","src":"9534:21:48"},"nodeType":"YulExpressionStatement","src":"9534:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9575:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9586:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9571:3:48"},"nodeType":"YulFunctionCall","src":"9571:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"9591:2:48","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9564:6:48"},"nodeType":"YulFunctionCall","src":"9564:30:48"},"nodeType":"YulExpressionStatement","src":"9564:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9614:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9625:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9610:3:48"},"nodeType":"YulFunctionCall","src":"9610:18:48"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"9630:26:48","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9603:6:48"},"nodeType":"YulFunctionCall","src":"9603:54:48"},"nodeType":"YulExpressionStatement","src":"9603:54:48"},{"nodeType":"YulAssignment","src":"9666:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9678:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9689:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9674:3:48"},"nodeType":"YulFunctionCall","src":"9674:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9666:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9501:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9515:4:48","type":""}],"src":"9350:348:48"},{"body":{"nodeType":"YulBlock","src":"9877:251:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9894:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9905:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9887:6:48"},"nodeType":"YulFunctionCall","src":"9887:21:48"},"nodeType":"YulExpressionStatement","src":"9887:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9928:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9939:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9924:3:48"},"nodeType":"YulFunctionCall","src":"9924:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"9944:2:48","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9917:6:48"},"nodeType":"YulFunctionCall","src":"9917:30:48"},"nodeType":"YulExpressionStatement","src":"9917:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9967:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"9978:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9963:3:48"},"nodeType":"YulFunctionCall","src":"9963:18:48"},{"hexValue":"4552433732315072657365744d696e7465725061757365724175746f49643a20","kind":"string","nodeType":"YulLiteral","src":"9983:34:48","type":"","value":"ERC721PresetMinterPauserAutoId: "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9956:6:48"},"nodeType":"YulFunctionCall","src":"9956:62:48"},"nodeType":"YulExpressionStatement","src":"9956:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10038:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10049:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10034:3:48"},"nodeType":"YulFunctionCall","src":"10034:18:48"},{"hexValue":"6d7573742068617665206d696e74657220726f6c6520746f206d696e74","kind":"string","nodeType":"YulLiteral","src":"10054:31:48","type":"","value":"must have minter role to mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10027:6:48"},"nodeType":"YulFunctionCall","src":"10027:59:48"},"nodeType":"YulExpressionStatement","src":"10027:59:48"},{"nodeType":"YulAssignment","src":"10095:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10107:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10118:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10103:3:48"},"nodeType":"YulFunctionCall","src":"10103:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10095:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9854:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9868:4:48","type":""}],"src":"9703:425:48"},{"body":{"nodeType":"YulBlock","src":"10307:231:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10324:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10335:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10317:6:48"},"nodeType":"YulFunctionCall","src":"10317:21:48"},"nodeType":"YulExpressionStatement","src":"10317:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10358:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10369:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10354:3:48"},"nodeType":"YulFunctionCall","src":"10354:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"10374:2:48","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10347:6:48"},"nodeType":"YulFunctionCall","src":"10347:30:48"},"nodeType":"YulExpressionStatement","src":"10347:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10397:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10408:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10393:3:48"},"nodeType":"YulFunctionCall","src":"10393:18:48"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"10413:34:48","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10386:6:48"},"nodeType":"YulFunctionCall","src":"10386:62:48"},"nodeType":"YulExpressionStatement","src":"10386:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10468:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10479:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10464:3:48"},"nodeType":"YulFunctionCall","src":"10464:18:48"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10484:11:48","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10457:6:48"},"nodeType":"YulFunctionCall","src":"10457:39:48"},"nodeType":"YulExpressionStatement","src":"10457:39:48"},{"nodeType":"YulAssignment","src":"10505:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10517:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10528:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10513:3:48"},"nodeType":"YulFunctionCall","src":"10513:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10505:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10284:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10298:4:48","type":""}],"src":"10133:405:48"},{"body":{"nodeType":"YulBlock","src":"10717:252:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10734:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10745:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10727:6:48"},"nodeType":"YulFunctionCall","src":"10727:21:48"},"nodeType":"YulExpressionStatement","src":"10727:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10768:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10779:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10764:3:48"},"nodeType":"YulFunctionCall","src":"10764:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"10784:2:48","type":"","value":"62"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10757:6:48"},"nodeType":"YulFunctionCall","src":"10757:30:48"},"nodeType":"YulExpressionStatement","src":"10757:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10807:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10818:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10803:3:48"},"nodeType":"YulFunctionCall","src":"10803:18:48"},{"hexValue":"4552433732315072657365744d696e7465725061757365724175746f49643a20","kind":"string","nodeType":"YulLiteral","src":"10823:34:48","type":"","value":"ERC721PresetMinterPauserAutoId: "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10796:6:48"},"nodeType":"YulFunctionCall","src":"10796:62:48"},"nodeType":"YulExpressionStatement","src":"10796:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10878:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10889:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10874:3:48"},"nodeType":"YulFunctionCall","src":"10874:18:48"},{"hexValue":"6d75737420686176652070617573657220726f6c6520746f207061757365","kind":"string","nodeType":"YulLiteral","src":"10894:32:48","type":"","value":"must have pauser role to pause"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10867:6:48"},"nodeType":"YulFunctionCall","src":"10867:60:48"},"nodeType":"YulExpressionStatement","src":"10867:60:48"},{"nodeType":"YulAssignment","src":"10936:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10948:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"10959:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10944:3:48"},"nodeType":"YulFunctionCall","src":"10944:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10936:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10694:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10708:4:48","type":""}],"src":"10543:426:48"},{"body":{"nodeType":"YulBlock","src":"11161:283:48","statements":[{"nodeType":"YulVariableDeclaration","src":"11171:27:48","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11191:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11185:5:48"},"nodeType":"YulFunctionCall","src":"11185:13:48"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11175:6:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11233:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"11241:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11229:3:48"},"nodeType":"YulFunctionCall","src":"11229:17:48"},{"name":"pos","nodeType":"YulIdentifier","src":"11248:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"11253:6:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11207:21:48"},"nodeType":"YulFunctionCall","src":"11207:53:48"},"nodeType":"YulExpressionStatement","src":"11207:53:48"},{"nodeType":"YulVariableDeclaration","src":"11269:29:48","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11286:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"11291:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11282:3:48"},"nodeType":"YulFunctionCall","src":"11282:16:48"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"11273:5:48","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11307:29:48","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11329:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11323:5:48"},"nodeType":"YulFunctionCall","src":"11323:13:48"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"11311:8:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11371:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"11379:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11367:3:48"},"nodeType":"YulFunctionCall","src":"11367:17:48"},{"name":"end_1","nodeType":"YulIdentifier","src":"11386:5:48"},{"name":"length_1","nodeType":"YulIdentifier","src":"11393:8:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11345:21:48"},"nodeType":"YulFunctionCall","src":"11345:57:48"},"nodeType":"YulExpressionStatement","src":"11345:57:48"},{"nodeType":"YulAssignment","src":"11411:27:48","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"11422:5:48"},{"name":"length_1","nodeType":"YulIdentifier","src":"11429:8:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:48"},"nodeType":"YulFunctionCall","src":"11418:20:48"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11411:3:48"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11129:3:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11134:6:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11142:6:48","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11153:3:48","type":""}],"src":"10974:470:48"},{"body":{"nodeType":"YulBlock","src":"11623:227:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11640:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11651:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11633:6:48"},"nodeType":"YulFunctionCall","src":"11633:21:48"},"nodeType":"YulExpressionStatement","src":"11633:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11674:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11685:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11670:3:48"},"nodeType":"YulFunctionCall","src":"11670:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"11690:2:48","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11663:6:48"},"nodeType":"YulFunctionCall","src":"11663:30:48"},"nodeType":"YulExpressionStatement","src":"11663:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11713:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11724:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11709:3:48"},"nodeType":"YulFunctionCall","src":"11709:18:48"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"11729:34:48","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11702:6:48"},"nodeType":"YulFunctionCall","src":"11702:62:48"},"nodeType":"YulExpressionStatement","src":"11702:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11784:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11780:3:48"},"nodeType":"YulFunctionCall","src":"11780:18:48"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"11800:7:48","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11773:6:48"},"nodeType":"YulFunctionCall","src":"11773:35:48"},"nodeType":"YulExpressionStatement","src":"11773:35:48"},{"nodeType":"YulAssignment","src":"11817:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11829:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"11840:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11825:3:48"},"nodeType":"YulFunctionCall","src":"11825:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11817:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11600:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11614:4:48","type":""}],"src":"11449:401:48"},{"body":{"nodeType":"YulBlock","src":"12029:226:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12046:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12057:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12039:6:48"},"nodeType":"YulFunctionCall","src":"12039:21:48"},"nodeType":"YulExpressionStatement","src":"12039:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12080:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12091:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12076:3:48"},"nodeType":"YulFunctionCall","src":"12076:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"12096:2:48","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12069:6:48"},"nodeType":"YulFunctionCall","src":"12069:30:48"},"nodeType":"YulExpressionStatement","src":"12069:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12119:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12130:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12115:3:48"},"nodeType":"YulFunctionCall","src":"12115:18:48"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"12135:34:48","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12108:6:48"},"nodeType":"YulFunctionCall","src":"12108:62:48"},"nodeType":"YulExpressionStatement","src":"12108:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12190:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12201:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12186:3:48"},"nodeType":"YulFunctionCall","src":"12186:18:48"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"12206:6:48","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12179:6:48"},"nodeType":"YulFunctionCall","src":"12179:34:48"},"nodeType":"YulExpressionStatement","src":"12179:34:48"},{"nodeType":"YulAssignment","src":"12222:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12234:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12245:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12230:3:48"},"nodeType":"YulFunctionCall","src":"12230:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12222:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12006:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12020:4:48","type":""}],"src":"11855:400:48"},{"body":{"nodeType":"YulBlock","src":"12434:182:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12451:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12462:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12444:6:48"},"nodeType":"YulFunctionCall","src":"12444:21:48"},"nodeType":"YulExpressionStatement","src":"12444:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12485:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12496:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12481:3:48"},"nodeType":"YulFunctionCall","src":"12481:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"12501:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12474:6:48"},"nodeType":"YulFunctionCall","src":"12474:30:48"},"nodeType":"YulExpressionStatement","src":"12474:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12524:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12535:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12520:3:48"},"nodeType":"YulFunctionCall","src":"12520:18:48"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"12540:34:48","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12513:6:48"},"nodeType":"YulFunctionCall","src":"12513:62:48"},"nodeType":"YulExpressionStatement","src":"12513:62:48"},{"nodeType":"YulAssignment","src":"12584:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12596:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12607:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12592:3:48"},"nodeType":"YulFunctionCall","src":"12592:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12584:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12411:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12425:4:48","type":""}],"src":"12260:356:48"},{"body":{"nodeType":"YulBlock","src":"12795:178:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12812:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12823:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12805:6:48"},"nodeType":"YulFunctionCall","src":"12805:21:48"},"nodeType":"YulExpressionStatement","src":"12805:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12846:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12857:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12842:3:48"},"nodeType":"YulFunctionCall","src":"12842:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"12862:2:48","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12835:6:48"},"nodeType":"YulFunctionCall","src":"12835:30:48"},"nodeType":"YulExpressionStatement","src":"12835:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12885:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12896:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12881:3:48"},"nodeType":"YulFunctionCall","src":"12881:18:48"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"12901:30:48","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12874:6:48"},"nodeType":"YulFunctionCall","src":"12874:58:48"},"nodeType":"YulExpressionStatement","src":"12874:58:48"},{"nodeType":"YulAssignment","src":"12941:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12953:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"12964:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12949:3:48"},"nodeType":"YulFunctionCall","src":"12949:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12941:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12772:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12786:4:48","type":""}],"src":"12621:352:48"},{"body":{"nodeType":"YulBlock","src":"13152:175:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13169:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13180:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13162:6:48"},"nodeType":"YulFunctionCall","src":"13162:21:48"},"nodeType":"YulExpressionStatement","src":"13162:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13203:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13214:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13199:3:48"},"nodeType":"YulFunctionCall","src":"13199:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"13219:2:48","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13192:6:48"},"nodeType":"YulFunctionCall","src":"13192:30:48"},"nodeType":"YulExpressionStatement","src":"13192:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13242:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13253:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13238:3:48"},"nodeType":"YulFunctionCall","src":"13238:18:48"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"13258:27:48","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13231:6:48"},"nodeType":"YulFunctionCall","src":"13231:55:48"},"nodeType":"YulExpressionStatement","src":"13231:55:48"},{"nodeType":"YulAssignment","src":"13295:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13307:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13318:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13303:3:48"},"nodeType":"YulFunctionCall","src":"13303:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13295:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13129:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13143:4:48","type":""}],"src":"12978:349:48"},{"body":{"nodeType":"YulBlock","src":"13506:240:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13523:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13534:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13516:6:48"},"nodeType":"YulFunctionCall","src":"13516:21:48"},"nodeType":"YulExpressionStatement","src":"13516:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13557:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13568:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13553:3:48"},"nodeType":"YulFunctionCall","src":"13553:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"13573:2:48","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13546:6:48"},"nodeType":"YulFunctionCall","src":"13546:30:48"},"nodeType":"YulExpressionStatement","src":"13546:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13596:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13607:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13592:3:48"},"nodeType":"YulFunctionCall","src":"13592:18:48"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"13612:34:48","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13585:6:48"},"nodeType":"YulFunctionCall","src":"13585:62:48"},"nodeType":"YulExpressionStatement","src":"13585:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13678:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:48"},"nodeType":"YulFunctionCall","src":"13663:18:48"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"13683:20:48","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:48"},"nodeType":"YulFunctionCall","src":"13656:48:48"},"nodeType":"YulExpressionStatement","src":"13656:48:48"},{"nodeType":"YulAssignment","src":"13713:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13725:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"13736:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13721:3:48"},"nodeType":"YulFunctionCall","src":"13721:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13713:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13483:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13497:4:48","type":""}],"src":"13332:414:48"},{"body":{"nodeType":"YulBlock","src":"13783:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13800:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13803:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13793:6:48"},"nodeType":"YulFunctionCall","src":"13793:88:48"},"nodeType":"YulExpressionStatement","src":"13793:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13897:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13900:4:48","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13890:6:48"},"nodeType":"YulFunctionCall","src":"13890:15:48"},"nodeType":"YulExpressionStatement","src":"13890:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13921:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13924:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13914:6:48"},"nodeType":"YulFunctionCall","src":"13914:15:48"},"nodeType":"YulExpressionStatement","src":"13914:15:48"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"13751:184:48"},{"body":{"nodeType":"YulBlock","src":"14329:397:48","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14346:3:48"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"14351:25:48","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14339:6:48"},"nodeType":"YulFunctionCall","src":"14339:38:48"},"nodeType":"YulExpressionStatement","src":"14339:38:48"},{"nodeType":"YulVariableDeclaration","src":"14386:27:48","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14406:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14400:5:48"},"nodeType":"YulFunctionCall","src":"14400:13:48"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14390:6:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14448:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"14456:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14444:3:48"},"nodeType":"YulFunctionCall","src":"14444:17:48"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14467:3:48"},{"kind":"number","nodeType":"YulLiteral","src":"14472:2:48","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14463:3:48"},"nodeType":"YulFunctionCall","src":"14463:12:48"},{"name":"length","nodeType":"YulIdentifier","src":"14477:6:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"14422:21:48"},"nodeType":"YulFunctionCall","src":"14422:62:48"},"nodeType":"YulExpressionStatement","src":"14422:62:48"},{"nodeType":"YulVariableDeclaration","src":"14493:26:48","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14507:3:48"},{"name":"length","nodeType":"YulIdentifier","src":"14512:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14503:3:48"},"nodeType":"YulFunctionCall","src":"14503:16:48"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14497:2:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14539:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"14543:2:48","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14535:3:48"},"nodeType":"YulFunctionCall","src":"14535:11:48"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"14548:19:48","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14528:6:48"},"nodeType":"YulFunctionCall","src":"14528:40:48"},"nodeType":"YulExpressionStatement","src":"14528:40:48"},{"nodeType":"YulVariableDeclaration","src":"14577:29:48","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14599:6:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14593:5:48"},"nodeType":"YulFunctionCall","src":"14593:13:48"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"14581:8:48","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14641:6:48"},{"kind":"number","nodeType":"YulLiteral","src":"14649:4:48","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14637:3:48"},"nodeType":"YulFunctionCall","src":"14637:17:48"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14660:2:48"},{"kind":"number","nodeType":"YulLiteral","src":"14664:2:48","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14656:3:48"},"nodeType":"YulFunctionCall","src":"14656:11:48"},{"name":"length_1","nodeType":"YulIdentifier","src":"14669:8:48"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"14615:21:48"},"nodeType":"YulFunctionCall","src":"14615:63:48"},"nodeType":"YulExpressionStatement","src":"14615:63:48"},{"nodeType":"YulAssignment","src":"14687:33:48","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14702:2:48"},{"name":"length_1","nodeType":"YulIdentifier","src":"14706:8:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14698:3:48"},"nodeType":"YulFunctionCall","src":"14698:17:48"},{"kind":"number","nodeType":"YulLiteral","src":"14717:2:48","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14694:3:48"},"nodeType":"YulFunctionCall","src":"14694:26:48"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14687:3:48"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14297:3:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14302:6:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14310:6:48","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14321:3:48","type":""}],"src":"13940:786:48"},{"body":{"nodeType":"YulBlock","src":"14905:170:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14922:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"14933:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14915:6:48"},"nodeType":"YulFunctionCall","src":"14915:21:48"},"nodeType":"YulExpressionStatement","src":"14915:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14956:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"14967:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14952:3:48"},"nodeType":"YulFunctionCall","src":"14952:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"14972:2:48","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14945:6:48"},"nodeType":"YulFunctionCall","src":"14945:30:48"},"nodeType":"YulExpressionStatement","src":"14945:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14995:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15006:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14991:3:48"},"nodeType":"YulFunctionCall","src":"14991:18:48"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"15011:22:48","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14984:6:48"},"nodeType":"YulFunctionCall","src":"14984:50:48"},"nodeType":"YulExpressionStatement","src":"14984:50:48"},{"nodeType":"YulAssignment","src":"15043:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15055:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15066:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15051:3:48"},"nodeType":"YulFunctionCall","src":"15051:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15043:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14882:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14896:4:48","type":""}],"src":"14731:344:48"},{"body":{"nodeType":"YulBlock","src":"15254:166:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15271:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15282:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15264:6:48"},"nodeType":"YulFunctionCall","src":"15264:21:48"},"nodeType":"YulExpressionStatement","src":"15264:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15305:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15301:3:48"},"nodeType":"YulFunctionCall","src":"15301:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"15321:2:48","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15294:6:48"},"nodeType":"YulFunctionCall","src":"15294:30:48"},"nodeType":"YulExpressionStatement","src":"15294:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15344:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15355:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15340:3:48"},"nodeType":"YulFunctionCall","src":"15340:18:48"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"15360:18:48","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15333:6:48"},"nodeType":"YulFunctionCall","src":"15333:46:48"},"nodeType":"YulExpressionStatement","src":"15333:46:48"},{"nodeType":"YulAssignment","src":"15388:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15400:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15411:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15396:3:48"},"nodeType":"YulFunctionCall","src":"15396:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15388:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15231:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15245:4:48","type":""}],"src":"15080:340:48"},{"body":{"nodeType":"YulBlock","src":"15628:309:48","statements":[{"nodeType":"YulVariableDeclaration","src":"15638:52:48","value":{"kind":"number","nodeType":"YulLiteral","src":"15648:42:48","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15642:2:48","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15706:9:48"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15721:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"15729:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15717:3:48"},"nodeType":"YulFunctionCall","src":"15717:15:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15699:6:48"},"nodeType":"YulFunctionCall","src":"15699:34:48"},"nodeType":"YulExpressionStatement","src":"15699:34:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15753:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15764:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15749:3:48"},"nodeType":"YulFunctionCall","src":"15749:18:48"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15773:6:48"},{"name":"_1","nodeType":"YulIdentifier","src":"15781:2:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15769:3:48"},"nodeType":"YulFunctionCall","src":"15769:15:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15742:6:48"},"nodeType":"YulFunctionCall","src":"15742:43:48"},"nodeType":"YulExpressionStatement","src":"15742:43:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15805:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15816:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15801:3:48"},"nodeType":"YulFunctionCall","src":"15801:18:48"},{"name":"value2","nodeType":"YulIdentifier","src":"15821:6:48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15794:6:48"},"nodeType":"YulFunctionCall","src":"15794:34:48"},"nodeType":"YulExpressionStatement","src":"15794:34:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15848:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15859:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15844:3:48"},"nodeType":"YulFunctionCall","src":"15844:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"15864:3:48","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15837:6:48"},"nodeType":"YulFunctionCall","src":"15837:31:48"},"nodeType":"YulExpressionStatement","src":"15837:31:48"},{"nodeType":"YulAssignment","src":"15877:54:48","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15903:6:48"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15915:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"15926:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15911:3:48"},"nodeType":"YulFunctionCall","src":"15911:19:48"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"15885:17:48"},"nodeType":"YulFunctionCall","src":"15885:46:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15877:4:48"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15573:9:48","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15584:6:48","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15592:6:48","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15600:6:48","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15608:6:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15619:4:48","type":""}],"src":"15425:512:48"},{"body":{"nodeType":"YulBlock","src":"16022:169:48","statements":[{"body":{"nodeType":"YulBlock","src":"16068:16:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16077:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16080:1:48","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16070:6:48"},"nodeType":"YulFunctionCall","src":"16070:12:48"},"nodeType":"YulExpressionStatement","src":"16070:12:48"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16043:7:48"},{"name":"headStart","nodeType":"YulIdentifier","src":"16052:9:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16039:3:48"},"nodeType":"YulFunctionCall","src":"16039:23:48"},{"kind":"number","nodeType":"YulLiteral","src":"16064:2:48","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16035:3:48"},"nodeType":"YulFunctionCall","src":"16035:32:48"},"nodeType":"YulIf","src":"16032:52:48"},{"nodeType":"YulVariableDeclaration","src":"16093:29:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16112:9:48"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16106:5:48"},"nodeType":"YulFunctionCall","src":"16106:16:48"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16097:5:48","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16155:5:48"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"16131:23:48"},"nodeType":"YulFunctionCall","src":"16131:30:48"},"nodeType":"YulExpressionStatement","src":"16131:30:48"},{"nodeType":"YulAssignment","src":"16170:15:48","value":{"name":"value","nodeType":"YulIdentifier","src":"16180:5:48"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16170:6:48"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15988:9:48","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15999:7:48","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16011:6:48","type":""}],"src":"15942:249:48"},{"body":{"nodeType":"YulBlock","src":"16370:233:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16387:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"16398:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16380:6:48"},"nodeType":"YulFunctionCall","src":"16380:21:48"},"nodeType":"YulExpressionStatement","src":"16380:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16421:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"16432:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16417:3:48"},"nodeType":"YulFunctionCall","src":"16417:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"16437:2:48","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16410:6:48"},"nodeType":"YulFunctionCall","src":"16410:30:48"},"nodeType":"YulExpressionStatement","src":"16410:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16460:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"16471:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16456:3:48"},"nodeType":"YulFunctionCall","src":"16456:18:48"},{"hexValue":"4552433732315061757361626c653a20746f6b656e207472616e736665722077","kind":"string","nodeType":"YulLiteral","src":"16476:34:48","type":"","value":"ERC721Pausable: token transfer w"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16449:6:48"},"nodeType":"YulFunctionCall","src":"16449:62:48"},"nodeType":"YulExpressionStatement","src":"16449:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16531:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"16542:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16527:3:48"},"nodeType":"YulFunctionCall","src":"16527:18:48"},{"hexValue":"68696c6520706175736564","kind":"string","nodeType":"YulLiteral","src":"16547:13:48","type":"","value":"hile paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16520:6:48"},"nodeType":"YulFunctionCall","src":"16520:41:48"},"nodeType":"YulExpressionStatement","src":"16520:41:48"},{"nodeType":"YulAssignment","src":"16570:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16582:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"16593:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16578:3:48"},"nodeType":"YulFunctionCall","src":"16578:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16570:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_08db93f8e1c3024ee7c131cc7a109eb4e5cb2ff5f9a23b64fb5b344cedec8968__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16347:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16361:4:48","type":""}],"src":"16196:407:48"},{"body":{"nodeType":"YulBlock","src":"16640:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16657:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16660:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16650:6:48"},"nodeType":"YulFunctionCall","src":"16650:88:48"},"nodeType":"YulExpressionStatement","src":"16650:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16754:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16757:4:48","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16747:6:48"},"nodeType":"YulFunctionCall","src":"16747:15:48"},"nodeType":"YulExpressionStatement","src":"16747:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16778:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16781:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16771:6:48"},"nodeType":"YulFunctionCall","src":"16771:15:48"},"nodeType":"YulExpressionStatement","src":"16771:15:48"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16608:184:48"},{"body":{"nodeType":"YulBlock","src":"16849:116:48","statements":[{"body":{"nodeType":"YulBlock","src":"16908:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16910:16:48"},"nodeType":"YulFunctionCall","src":"16910:18:48"},"nodeType":"YulExpressionStatement","src":"16910:18:48"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16880:1:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16873:6:48"},"nodeType":"YulFunctionCall","src":"16873:9:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16866:6:48"},"nodeType":"YulFunctionCall","src":"16866:17:48"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16888:1:48"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16899:1:48","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16895:3:48"},"nodeType":"YulFunctionCall","src":"16895:6:48"},{"name":"x","nodeType":"YulIdentifier","src":"16903:1:48"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16891:3:48"},"nodeType":"YulFunctionCall","src":"16891:14:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16885:2:48"},"nodeType":"YulFunctionCall","src":"16885:21:48"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16862:3:48"},"nodeType":"YulFunctionCall","src":"16862:45:48"},"nodeType":"YulIf","src":"16859:71:48"},{"nodeType":"YulAssignment","src":"16939:20:48","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16954:1:48"},{"name":"y","nodeType":"YulIdentifier","src":"16957:1:48"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16950:3:48"},"nodeType":"YulFunctionCall","src":"16950:9:48"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16939:7:48"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16828:1:48","type":""},{"name":"y","nodeType":"YulTypedName","src":"16831:1:48","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"16837:7:48","type":""}],"src":"16797:168:48"},{"body":{"nodeType":"YulBlock","src":"17018:80:48","statements":[{"body":{"nodeType":"YulBlock","src":"17045:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17047:16:48"},"nodeType":"YulFunctionCall","src":"17047:18:48"},"nodeType":"YulExpressionStatement","src":"17047:18:48"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17034:1:48"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17041:1:48"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17037:3:48"},"nodeType":"YulFunctionCall","src":"17037:6:48"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17031:2:48"},"nodeType":"YulFunctionCall","src":"17031:13:48"},"nodeType":"YulIf","src":"17028:39:48"},{"nodeType":"YulAssignment","src":"17076:16:48","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17087:1:48"},{"name":"y","nodeType":"YulIdentifier","src":"17090:1:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17083:3:48"},"nodeType":"YulFunctionCall","src":"17083:9:48"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17076:3:48"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17001:1:48","type":""},{"name":"y","nodeType":"YulTypedName","src":"17004:1:48","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17010:3:48","type":""}],"src":"16970:128:48"},{"body":{"nodeType":"YulBlock","src":"17150:89:48","statements":[{"body":{"nodeType":"YulBlock","src":"17177:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17179:16:48"},"nodeType":"YulFunctionCall","src":"17179:18:48"},"nodeType":"YulExpressionStatement","src":"17179:18:48"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17170:5:48"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17163:6:48"},"nodeType":"YulFunctionCall","src":"17163:13:48"},"nodeType":"YulIf","src":"17160:39:48"},{"nodeType":"YulAssignment","src":"17208:25:48","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17219:5:48"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17230:1:48","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17226:3:48"},"nodeType":"YulFunctionCall","src":"17226:6:48"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17215:3:48"},"nodeType":"YulFunctionCall","src":"17215:18:48"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17208:3:48"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17132:5:48","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17142:3:48","type":""}],"src":"17103:136:48"},{"body":{"nodeType":"YulBlock","src":"17418:182:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17435:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"17446:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17428:6:48"},"nodeType":"YulFunctionCall","src":"17428:21:48"},"nodeType":"YulExpressionStatement","src":"17428:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17469:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"17480:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17465:3:48"},"nodeType":"YulFunctionCall","src":"17465:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"17485:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17458:6:48"},"nodeType":"YulFunctionCall","src":"17458:30:48"},"nodeType":"YulExpressionStatement","src":"17458:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17508:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"17519:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17504:3:48"},"nodeType":"YulFunctionCall","src":"17504:18:48"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"17524:34:48","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17497:6:48"},"nodeType":"YulFunctionCall","src":"17497:62:48"},"nodeType":"YulExpressionStatement","src":"17497:62:48"},{"nodeType":"YulAssignment","src":"17568:26:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17580:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"17591:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17576:3:48"},"nodeType":"YulFunctionCall","src":"17576:18:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17568:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17395:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17409:4:48","type":""}],"src":"17244:356:48"},{"body":{"nodeType":"YulBlock","src":"17654:76:48","statements":[{"body":{"nodeType":"YulBlock","src":"17676:22:48","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17678:16:48"},"nodeType":"YulFunctionCall","src":"17678:18:48"},"nodeType":"YulExpressionStatement","src":"17678:18:48"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17670:1:48"},{"name":"y","nodeType":"YulIdentifier","src":"17673:1:48"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17667:2:48"},"nodeType":"YulFunctionCall","src":"17667:8:48"},"nodeType":"YulIf","src":"17664:34:48"},{"nodeType":"YulAssignment","src":"17707:17:48","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17719:1:48"},{"name":"y","nodeType":"YulIdentifier","src":"17722:1:48"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17715:3:48"},"nodeType":"YulFunctionCall","src":"17715:9:48"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17707:4:48"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17636:1:48","type":""},{"name":"y","nodeType":"YulTypedName","src":"17639:1:48","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17645:4:48","type":""}],"src":"17605:125:48"},{"body":{"nodeType":"YulBlock","src":"17767:152:48","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17784:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17787:77:48","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17777:6:48"},"nodeType":"YulFunctionCall","src":"17777:88:48"},"nodeType":"YulExpressionStatement","src":"17777:88:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17881:1:48","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17884:4:48","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17874:6:48"},"nodeType":"YulFunctionCall","src":"17874:15:48"},"nodeType":"YulExpressionStatement","src":"17874:15:48"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17905:1:48","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17908:4:48","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17898:6:48"},"nodeType":"YulFunctionCall","src":"17898:15:48"},"nodeType":"YulExpressionStatement","src":"17898:15:48"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"17735:184:48"},{"body":{"nodeType":"YulBlock","src":"18098:243:48","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18115:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"18126:2:48","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18108:6:48"},"nodeType":"YulFunctionCall","src":"18108:21:48"},"nodeType":"YulExpressionStatement","src":"18108:21:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18149:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"18160:2:48","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18145:3:48"},"nodeType":"YulFunctionCall","src":"18145:18:48"},{"kind":"number","nodeType":"YulLiteral","src":"18165:2:48","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18138:6:48"},"nodeType":"YulFunctionCall","src":"18138:30:48"},"nodeType":"YulExpressionStatement","src":"18138:30:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18188:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"18199:2:48","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18184:3:48"},"nodeType":"YulFunctionCall","src":"18184:18:48"},{"hexValue":"455243373231456e756d657261626c653a20636f6e7365637574697665207472","kind":"string","nodeType":"YulLiteral","src":"18204:34:48","type":"","value":"ERC721Enumerable: consecutive tr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18177:6:48"},"nodeType":"YulFunctionCall","src":"18177:62:48"},"nodeType":"YulExpressionStatement","src":"18177:62:48"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18259:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"18270:2:48","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18255:3:48"},"nodeType":"YulFunctionCall","src":"18255:18:48"},{"hexValue":"616e7366657273206e6f7420737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"18275:23:48","type":"","value":"ansfers not supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18248:6:48"},"nodeType":"YulFunctionCall","src":"18248:51:48"},"nodeType":"YulExpressionStatement","src":"18248:51:48"},{"nodeType":"YulAssignment","src":"18308:27:48","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18320:9:48"},{"kind":"number","nodeType":"YulLiteral","src":"18331:3:48","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18316:3:48"},"nodeType":"YulFunctionCall","src":"18316:19:48"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18308:4:48"}]}]},"name":"abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18075:9:48","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18089:4:48","type":""}],"src":"17924:417:48"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721Enumerable: owner index ou\")\n        mstore(add(headStart, 96), \"t of bounds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"ERC721PresetMinterPauserAutoId: \")\n        mstore(add(headStart, 96), \"must have pauser role to unpause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721Enumerable: global index o\")\n        mstore(add(headStart, 96), \"ut of bounds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721PresetMinterPauserAutoId: \")\n        mstore(add(headStart, 96), \"must have minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"ERC721PresetMinterPauserAutoId: \")\n        mstore(add(headStart, 96), \"must have pauser role to pause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_08db93f8e1c3024ee7c131cc7a109eb4e5cb2ff5f9a23b64fb5b344cedec8968__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721Pausable: token transfer w\")\n        mstore(add(headStart, 96), \"hile paused\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"ERC721Enumerable: consecutive tr\")\n        mstore(add(headStart, 96), \"ansfers not supported\")\n        tail := add(headStart, 128)\n    }\n}","id":48,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063d539139311610071578063d53913931461041b578063d547741f14610442578063e63ab1e914610455578063e985e9c51461047c57600080fd5b8063a22cb465146103cf578063b88d4fde146103e2578063c87b56dd146103f5578063ca15c8731461040857600080fd5b80639010d07c116100de5780639010d07c1461037557806391d148541461038857806395d89b41146103bf578063a217fddf146103c757600080fd5b80636352211e146103345780636a6278421461034757806370a082311461035a5780638456cb591461036d57600080fd5b80632f2ff15d1161018757806342842e0e1161015657806342842e0e146102f057806342966c68146103035780634f6ccce7146103165780635c975abb1461032957600080fd5b80632f2ff15d146102af5780632f745c59146102c257806336568abe146102d55780633f4ba83a146102e857600080fd5b8063095ea7b3116101c3578063095ea7b31461025257806318160ddd1461026757806323b872dd14610279578063248a9ca31461028c57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f83660046123b6565b6104b8565b60405190151581526020015b60405180910390f35b61021a6104c9565b604051610209919061242b565b61023a61023536600461243e565b61055b565b6040516001600160a01b039091168152602001610209565b610265610260366004612473565b610582565b005b600a545b604051908152602001610209565b61026561028736600461249d565b6106b9565b61026b61029a36600461243e565b60009081526020819052604090206001015490565b6102656102bd3660046124d9565b610731565b61026b6102d0366004612473565b610756565b6102656102e33660046124d9565b6107fe565b61026561088a565b6102656102fe36600461249d565b610932565b61026561031136600461243e565b61094d565b61026b61032436600461243e565b6109c4565b600c5460ff166101fd565b61023a61034236600461243e565b610a68565b610265610355366004612505565b610acd565b61026b610368366004612505565b610b89565b610265610c23565b61023a610383366004612520565b610cc7565b6101fd6103963660046124d9565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61021a610ce6565b61026b600081565b6102656103dd366004612542565b610cf5565b6102656103f0366004612594565b610d00565b61021a61040336600461243e565b610d7e565b61026b61041636600461243e565b610de4565b61026b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102656104503660046124d9565b610dfb565b61026b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6101fd61048a366004612670565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006104c382610ed3565b92915050565b6060600280546104d89061269a565b80601f01602080910402602001604051908101604052809291908181526020018280546105049061269a565b80156105515780601f1061052657610100808354040283529160200191610551565b820191906000526020600020905b81548152906001019060200180831161053457829003601f168201915b5050505050905090565b600061056682610f11565b506000908152600660205260409020546001600160a01b031690565b600061058d82610a68565b9050806001600160a01b0316836001600160a01b0316141561061c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806106385750610638813361048a565b6106aa5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610613565b6106b48383610f75565b505050565b6106c4335b82610ff0565b6107265760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610613565b6106b483838361106f565b60008281526020819052604090206001015461074c81611282565b6106b4838361128c565b600061076183610b89565b82106107d55760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610613565b506001600160a01b03919091166000908152600860209081526040808320938352929052205490565b6001600160a01b038116331461087c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610613565b61088682826112ae565b5050565b6108b47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610396565b610928576040805162461bcd60e51b81526020600482015260248101919091527f4552433732315072657365744d696e7465725061757365724175746f49643a2060448201527f6d75737420686176652070617573657220726f6c6520746f20756e70617573656064820152608401610613565b6109306112d0565b565b6106b483838360405180602001604052806000815250610d00565b610956336106be565b6109b85760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610613565b6109c181611322565b50565b60006109cf600a5490565b8210610a435760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610613565b600a8281548110610a5657610a566126d5565b90600052602060002001549050919050565b6000818152600460205260408120546001600160a01b0316806104c35760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610613565b610af77f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610396565b610b695760405162461bcd60e51b815260206004820152603d60248201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060448201527f6d7573742068617665206d696e74657220726f6c6520746f206d696e740000006064820152608401610613565b610b7b81610b76600d5490565b6113d2565b6109c1600d80546001019055565b60006001600160a01b038216610c075760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610613565b506001600160a01b031660009081526005602052604090205490565b610c4d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610396565b610cbf5760405162461bcd60e51b815260206004820152603e60248201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060448201527f6d75737420686176652070617573657220726f6c6520746f20706175736500006064820152608401610613565b610930611578565b6000828152600160205260408120610cdf90836115b5565b9392505050565b6060600380546104d89061269a565b6108863383836115c1565b610d0a3383610ff0565b610d6c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610613565b610d7884848484611690565b50505050565b6060610d8982610f11565b6000610d93611719565b90506000815111610db35760405180602001604052806000815250610cdf565b80610dbd84611728565b604051602001610dce9291906126eb565b6040516020818303038152906040529392505050565b60008181526001602052604081206104c3906117d2565b600082815260208190526040902060010154610e1681611282565b6106b483836112ae565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610886576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e7a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610cdf836001600160a01b0384166117dc565b60006001600160e01b031982167f780e9d630000000000000000000000000000000000000000000000000000000014806104c357506104c38261182b565b6000818152600460205260409020546001600160a01b03166109c15760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610613565b6000818152600660205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610fb782610a68565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ffc83610a68565b9050806001600160a01b0316846001600160a01b0316148061104357506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b806110675750836001600160a01b031661105c8461055b565b6001600160a01b0316145b949350505050565b826001600160a01b031661108282610a68565b6001600160a01b0316146110e65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610613565b6001600160a01b0382166111615760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610613565b61116e838383600161189d565b826001600160a01b031661118182610a68565b6001600160a01b0316146111e55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610613565b6000818152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260058552838620805460001901905590871680865283862080546001019055868652600490945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6109c181336118a9565b6112968282610e20565b60008281526001602052604090206106b49082610ebe565b6112b8828261191c565b60008281526001602052604090206106b4908261199b565b6112d86119b0565b600c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600061132d82610a68565b905061133d81600084600161189d565b61134682610a68565b6000838152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0385168085526005845282852080546000190190558785526004909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166114285760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610613565b6000818152600460205260409020546001600160a01b03161561148d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610613565b61149b60008383600161189d565b6000818152600460205260409020546001600160a01b0316156115005760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610613565b6001600160a01b0382166000818152600560209081526040808320805460010190558483526004909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611580611a02565b600c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113053390565b6000610cdf8383611a55565b816001600160a01b0316836001600160a01b031614156116235760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610613565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61169b84848461106f565b6116a784848484611a7f565b610d785760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610613565b6060600e80546104d89061269a565b6060600061173583611be2565b600101905060008167ffffffffffffffff8111156117555761175561257e565b6040519080825280601f01601f19166020018201604052801561177f576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846117c5576117ca565b611789565b509392505050565b60006104c3825490565b6000818152600183016020526040812054611823575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104c3565b5060006104c3565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061188e57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806104c357506104c382611cc4565b610d7884848484611d02565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610886576118da81611d87565b6118e5836020611d99565b6040516020016118f692919061271a565b60408051601f198184030181529082905262461bcd60e51b82526106139160040161242b565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610886576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610cdf836001600160a01b038416611f7a565b600c5460ff166109305760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610613565b600c5460ff16156109305760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610613565b6000826000018281548110611a6c57611a6c6126d5565b9060005260206000200154905092915050565b60006001600160a01b0384163b15611bd757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ac390339089908890889060040161279b565b602060405180830381600087803b158015611add57600080fd5b505af1925050508015611b0d575060408051601f3d908101601f19168201909252611b0a918101906127d7565b60015b611bbd573d808015611b3b576040519150601f19603f3d011682016040523d82523d6000602084013e611b40565b606091505b508051611bb55760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610613565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611067565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c2b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611c57576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611c7557662386f26fc10000830492506010015b6305f5e1008310611c8d576305f5e100830492506008015b6127108310611ca157612710830492506004015b60648310611cb3576064830492506002015b600a83106104c35760010192915050565b60006001600160e01b031982167f5a05180f0000000000000000000000000000000000000000000000000000000014806104c357506104c38261206d565b611d0e848484846120d4565b600c5460ff1615610d785760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c65207061757365640000000000000000000000000000000000000000006064820152608401610613565b60606104c36001600160a01b03831660145b60606000611da883600261280a565b611db3906002612829565b67ffffffffffffffff811115611dcb57611dcb61257e565b6040519080825280601f01601f191660200182016040528015611df5576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611e2c57611e2c6126d5565b60200101906001600160f81b031916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611e7757611e776126d5565b60200101906001600160f81b031916908160001a9053506000611e9b84600261280a565b611ea6906001612829565b90505b6001811115611f2b577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611ee757611ee76126d5565b1a60f81b828281518110611efd57611efd6126d5565b60200101906001600160f81b031916908160001a90535060049490941c93611f2481612841565b9050611ea9565b508315610cdf5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610613565b60008181526001830160205260408120548015612063576000611f9e600183612858565b8554909150600090611fb290600190612858565b9050818114612017576000866000018281548110611fd257611fd26126d5565b9060005260206000200154905080876000018481548110611ff557611ff56126d5565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806120285761202861286f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104c3565b60009150506104c3565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806104c357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146104c3565b600181111561214b5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f7274656400000000000000000000006064820152608401610613565b816001600160a01b0385166121a7576121a281600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b6121ca565b836001600160a01b0316856001600160a01b0316146121ca576121ca8582612210565b6001600160a01b0384166121e6576121e1816122ad565b612209565b846001600160a01b0316846001600160a01b03161461220957612209848261235c565b5050505050565b6000600161221d84610b89565b6122279190612858565b60008381526009602052604090205490915080821461227a576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a546000906122bf90600190612858565b6000838152600b6020526040812054600a80549394509092849081106122e7576122e76126d5565b9060005260206000200154905080600a8381548110612308576123086126d5565b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a8054806123405761234061286f565b6001900381819060005260206000200160009055905550505050565b600061236783610b89565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b6001600160e01b0319811681146109c157600080fd5b6000602082840312156123c857600080fd5b8135610cdf816123a0565b60005b838110156123ee5781810151838201526020016123d6565b83811115610d785750506000910152565b600081518084526124178160208601602086016123d3565b601f01601f19169290920160200192915050565b602081526000610cdf60208301846123ff565b60006020828403121561245057600080fd5b5035919050565b80356001600160a01b038116811461246e57600080fd5b919050565b6000806040838503121561248657600080fd5b61248f83612457565b946020939093013593505050565b6000806000606084860312156124b257600080fd5b6124bb84612457565b92506124c960208501612457565b9150604084013590509250925092565b600080604083850312156124ec57600080fd5b823591506124fc60208401612457565b90509250929050565b60006020828403121561251757600080fd5b610cdf82612457565b6000806040838503121561253357600080fd5b50508035926020909101359150565b6000806040838503121561255557600080fd5b61255e83612457565b91506020830135801515811461257357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156125aa57600080fd5b6125b385612457565b93506125c160208601612457565b925060408501359150606085013567ffffffffffffffff808211156125e557600080fd5b818701915087601f8301126125f957600080fd5b81358181111561260b5761260b61257e565b604051601f8201601f19908116603f011681019083821181831017156126335761263361257e565b816040528281528a602084870101111561264c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561268357600080fd5b61268c83612457565b91506124fc60208401612457565b600181811c908216806126ae57607f821691505b602082108114156126cf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516126fd8184602088016123d3565b8351908301906127118183602088016123d3565b01949350505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516127528160178501602088016123d3565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161278f8160288401602088016123d3565b01602801949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526127cd60808301846123ff565b9695505050505050565b6000602082840312156127e957600080fd5b8151610cdf816123a0565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612824576128246127f4565b500290565b6000821982111561283c5761283c6127f4565b500190565b600081612850576128506127f4565b506000190190565b60008282101561286a5761286a6127f4565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220639ead0cfadfa92f8633043a32160285e8eb8f87e0938fdffec592bf4b8281db64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH2 0x23A PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x209 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x2473 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x209 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x249D JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2473 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x265 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x265 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x249D JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x23A PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0xA68 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0x26B PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x265 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x21A PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x26B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2594 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x26B PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x243E JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x26B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x26B PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x2670 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3 DUP3 PUSH2 0xED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x269A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x504 SWAP1 PUSH2 0x269A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x551 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x526 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x551 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x534 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP3 PUSH2 0xF11 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D DUP3 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x638 JUMPI POP PUSH2 0x638 DUP2 CALLER PUSH2 0x48A JUMP JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 PUSH2 0xF75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6C4 CALLER JUMPDEST DUP3 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 DUP4 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x74C DUP2 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x761 DUP4 PUSH2 0xB89 JUMP JUMPDEST DUP3 LT PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74206F6620626F756E6473000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x886 DUP3 DUP3 PUSH2 0x12AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B4 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x396 JUMP JUMPDEST PUSH2 0x928 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4552433732315072657365744D696E7465725061757365724175746F49643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D75737420686176652070617573657220726F6C6520746F20756E7061757365 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x930 PUSH2 0x12D0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD00 JUMP JUMPDEST PUSH2 0x956 CALLER PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x9C1 DUP2 PUSH2 0x1322 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7574206F6620626F756E64730000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0xAF7 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x396 JUMP JUMPDEST PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732315072657365744D696E7465725061757365724175746F49643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D7573742068617665206D696E74657220726F6C6520746F206D696E74000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB76 PUSH1 0xD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x9C1 PUSH1 0xD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC4D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x396 JUMP JUMPDEST PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732315072657365744D696E7465725061757365724175746F49643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D75737420686176652070617573657220726F6C6520746F2070617573650000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x930 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xCDF SWAP1 DUP4 PUSH2 0x15B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x886 CALLER DUP4 DUP4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0xD0A CALLER DUP4 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0xD78 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1690 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD89 DUP3 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD93 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDF JUMP JUMPDEST DUP1 PUSH2 0xDBD DUP5 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDCE SWAP3 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x4C3 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xE16 DUP2 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x6B4 DUP4 DUP4 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x886 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE7A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C3 JUMPI POP PUSH2 0x4C3 DUP3 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xFB7 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFFC DUP4 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1043 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1067 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x105C DUP5 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1082 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x116E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1181 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x11E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x5 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x9C1 DUP2 CALLER PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x1296 DUP3 DUP3 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x6B4 SWAP1 DUP3 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x12B8 DUP3 DUP3 PUSH2 0x191C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x6B4 SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132D DUP3 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP PUSH2 0x133D DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x1346 DUP3 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x148D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x149B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1305 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF DUP4 DUP4 PUSH2 0x1A55 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x169B DUP5 DUP5 DUP5 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x16A7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1735 DUP4 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1755 JUMPI PUSH2 0x1755 PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x177F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x17C5 JUMPI PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1789 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C3 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1823 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4C3 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x188E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x4C3 JUMPI POP PUSH2 0x4C3 DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0xD78 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x886 JUMPI PUSH2 0x18DA DUP2 PUSH2 0x1D87 JUMP JUMPDEST PUSH2 0x18E5 DUP4 PUSH1 0x20 PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F6 SWAP3 SWAP2 SWAP1 PUSH2 0x271A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x613 SWAP2 PUSH1 0x4 ADD PUSH2 0x242B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x886 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A6C JUMPI PUSH2 0x1A6C PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1BD7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1AC3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x279B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B0D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B0A SWAP2 DUP2 ADD SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BBD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1BB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1067 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C2B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C57 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C75 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C8D JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CA1 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CB3 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4C3 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C3 JUMPI POP PUSH2 0x4C3 DUP3 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x1D0E DUP5 DUP5 DUP5 DUP5 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732315061757361626C653A20746F6B656E207472616E736665722077 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68696C6520706175736564000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4C3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1DA8 DUP4 PUSH1 0x2 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1DB3 SWAP1 PUSH1 0x2 PUSH2 0x2829 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DCB JUMPI PUSH2 0x1DCB PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E2C JUMPI PUSH2 0x1E2C PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E77 JUMPI PUSH2 0x1E77 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1E9B DUP5 PUSH1 0x2 PUSH2 0x280A JUMP JUMPDEST PUSH2 0x1EA6 SWAP1 PUSH1 0x1 PUSH2 0x2829 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F2B JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1EE7 JUMPI PUSH2 0x1EE7 PUSH2 0x26D5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EFD JUMPI PUSH2 0x1EFD PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1F24 DUP2 PUSH2 0x2841 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EA9 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x613 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 PUSH2 0x1F9E PUSH1 0x1 DUP4 PUSH2 0x2858 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1FB2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2858 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2017 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1FD2 JUMPI PUSH2 0x1FD2 PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FF5 JUMPI PUSH2 0x1FF5 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2028 JUMPI PUSH2 0x2028 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C3 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x214B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20636F6E7365637574697665207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E7366657273206E6F7420737570706F727465640000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x613 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x21A7 JUMPI PUSH2 0x21A2 DUP2 PUSH1 0xA DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SSTORE JUMP JUMPDEST PUSH2 0x21CA JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x21CA JUMPI PUSH2 0x21CA DUP6 DUP3 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x21E6 JUMPI PUSH2 0x21E1 DUP2 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x2209 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2209 JUMPI PUSH2 0x2209 DUP5 DUP3 PUSH2 0x235C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x221D DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x2227 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x227A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x8 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x22BF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x22E7 JUMPI PUSH2 0x22E7 PUSH2 0x26D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2308 JUMPI PUSH2 0x2308 PUSH2 0x26D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x2340 JUMPI PUSH2 0x2340 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2367 DUP4 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCDF DUP2 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23D6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD78 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2417 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xCDF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x246E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x248F DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24BB DUP5 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP PUSH2 0x24C9 PUSH1 0x20 DUP6 ADD PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x24FC PUSH1 0x20 DUP5 ADD PUSH2 0x2457 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCDF DUP3 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255E DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x25AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25B3 DUP6 PUSH2 0x2457 JUMP JUMPDEST SWAP4 POP PUSH2 0x25C1 PUSH1 0x20 DUP7 ADD PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x260B JUMPI PUSH2 0x260B PUSH2 0x257E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2633 JUMPI PUSH2 0x2633 PUSH2 0x257E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x264C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x268C DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FC PUSH1 0x20 DUP5 ADD PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x26AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x26CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x26FD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2711 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2752 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x278F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x23D3 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x27CD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x23FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCDF DUP2 PUSH2 0x23A0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2824 PUSH2 0x27F4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x283C JUMPI PUSH2 0x283C PUSH2 0x27F4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2850 JUMPI PUSH2 0x2850 PUSH2 0x27F4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x286A JUMPI PUSH2 0x286A PUSH2 0x27F4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x9EAD0CFA 0xDF 0xA9 0x2F DUP7 CALLER DIV GASPRICE ORIGIN AND MUL DUP6 0xE8 0xEB DUP16 DUP8 0xE0 SWAP4 DUP16 0xDF INVALID 0xC5 SWAP3 0xBF 0x4B DUP3 DUP2 0xDB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1138:3201:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4121:216;;;;;;:::i;:::-;;:::i;:::-;;;611:14:48;;604:22;586:41;;574:2;559:18;4121:216:30;;;;;;;;2471:98:16;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1738:55:48;;;1720:74;;1708:2;1693:18;3935:167:16;1574:226:48;3468:406:16;;;;;;:::i;:::-;;:::i;:::-;;1630:111:21;1717:10;:17;1630:111;;;2411:25:48;;;2399:2;2384:18;1630:111:21;2265:177:48;4612:296:16;;;;;;:::i;:::-;;:::i;4504:129:1:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;4929:145;;;;;;:::i;:::-;;:::i;1306:253:21:-;;;;;;:::i;:::-;;:::i;6038:214:1:-;;;;;;:::i;:::-;;:::i;3585:182:30:-;;;:::i;4974:149:16:-;;;;;;:::i;:::-;;:::i;531:238:19:-;;;;;;:::i;:::-;;:::i;1813:230:21:-;;;;;;:::i;:::-;;:::i;1615:84:15:-;1685:7;;;;1615:84;;2190:219:16;;;;;;:::i;:::-;;:::i;2597:400:30:-;;;;;;:::i;:::-;;:::i;1929:204:16:-;;;;;;:::i;:::-;;:::i;3201:176:30:-;;;:::i;1431:151:2:-;;;;;;:::i;:::-;;:::i;3021:145:1:-;;;;;;:::i;:::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:1;;;;;;;;;;;;;;;3021:145;2633:102:16;;;:::i;2153:49:1:-;;2198:4;2153:49;;4169:153:16;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;1750:140:2:-;;;;;;:::i;:::-;;:::i;1332:62:30:-;;1370:24;1332:62;;5354:147:1;;;;;;:::i;:::-;;:::i;1400:62:30:-;;1438:24;1400:62;;4388:162:16;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;4121:216:30;4271:4;4294:36;4318:11;4294:23;:36::i;:::-;4287:43;4121:216;-1:-1:-1;;4121:216:30:o;2471:98:16:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:16;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:16;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:16;:2;-1:-1:-1;;;;;3605:11:16;;;3597:57;;;;-1:-1:-1;;;3597:57:16;;6443:2:48;3597:57:16;;;6425:21:48;6482:2;6462:18;;;6455:30;6521:34;6501:18;;;6494:62;6592:3;6572:18;;;6565:31;6613:19;;3597:57:16;;;;;;;;;719:10:34;-1:-1:-1;;;;;3686:21:16;;;;:62;;-1:-1:-1;3711:37:16;3728:5;719:10:34;4388:162:16;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:16;;6845:2:48;3665:170:16;;;6827:21:48;6884:2;6864:18;;;6857:30;6923:34;6903:18;;;6896:62;6994:31;6974:18;;;6967:59;7043:19;;3665:170:16;6643:425:48;3665:170:16;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;719:10:34;4790:12:16;4804:7;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:16;;7275:2:48;4763:99:16;;;7257:21:48;7314:2;7294:18;;;7287:30;7353:34;7333:18;;;7326:62;-1:-1:-1;;;7404:18:48;;;7397:43;7457:19;;4763:99:16;7073:409:48;4763:99:16;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4929:145:1:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;1306:253:21:-:0;1403:7;1438:23;1455:5;1438:16;:23::i;:::-;1430:5;:31;1422:87;;;;-1:-1:-1;;;1422:87:21;;7689:2:48;1422:87:21;;;7671:21:48;7728:2;7708:18;;;7701:30;7767:34;7747:18;;;7740:62;7838:13;7818:18;;;7811:41;7869:19;;1422:87:21;7487:407:48;1422:87:21;-1:-1:-1;;;;;;1526:19:21;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1306:253::o;6038:214:1:-;-1:-1:-1;;;;;6133:23:1;;719:10:34;6133:23:1;6125:83;;;;-1:-1:-1;;;6125:83:1;;8101:2:48;6125:83:1;;;8083:21:48;8140:2;8120:18;;;8113:30;8179:34;8159:18;;;8152:62;8250:17;8230:18;;;8223:45;8285:19;;6125:83:1;7899:411:48;6125:83:1;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;3585:182:30:-;3637:34;1438:24;719:10:34;3021:145:1;:::i;3637:34:30:-;3629:111;;;;;-1:-1:-1;;;3629:111:30;;8517:2:48;3629:111:30;;;8499:21:48;8536:18;;;8529:30;;;;8595:34;8575:18;;;8568:62;8666:34;8646:18;;;8639:62;8718:19;;3629:111:30;8315:428:48;3629:111:30;3750:10;:8;:10::i;:::-;3585:182::o;4974:149:16:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;531:238:19:-;647:41;719:10:34;666:12:19;640:96:34;647:41:19;639:99;;;;-1:-1:-1;;;639:99:19;;7275:2:48;639:99:19;;;7257:21:48;7314:2;7294:18;;;7287:30;7353:34;7333:18;;;7326:62;-1:-1:-1;;;7404:18:48;;;7397:43;7457:19;;639:99:19;7073:409:48;639:99:19;748:14;754:7;748:5;:14::i;:::-;531:238;:::o;1813:230:21:-;1888:7;1923:30;1717:10;:17;;1630:111;1923:30;1915:5;:38;1907:95;;;;-1:-1:-1;;;1907:95:21;;8950:2:48;1907:95:21;;;8932:21:48;8989:2;8969:18;;;8962:30;9028:34;9008:18;;;9001:62;9099:14;9079:18;;;9072:42;9131:19;;1907:95:21;8748:408:48;1907:95:21;2019:10;2030:5;2019:17;;;;;;;;:::i;:::-;;;;;;;;;2012:24;;1813:230;;;:::o;2190:219:16:-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;;2324:56;;;;-1:-1:-1;;;2324:56:16;;9552:2:48;2324:56:16;;;9534:21:48;9591:2;9571:18;;;9564:30;9630:26;9610:18;;;9603:54;9674:18;;2324:56:16;9350:348:48;2597:400:30;2656:34;1370:24;719:10:34;3021:145:1;:::i;2656:34:30:-;2648:108;;;;-1:-1:-1;;;2648:108:30;;9905:2:48;2648:108:30;;;9887:21:48;9944:2;9924:18;;;9917:30;9983:34;9963:18;;;9956:62;10054:31;10034:18;;;10027:59;10103:19;;2648:108:30;9703:425:48;2648:108:30;2917:36;2923:2;2927:25;:15;918:14:35;;827:112;2927:25:30;2917:5;:36::i;:::-;2963:27;:15;1032:19:35;;1050:1;1032:19;;;945:123;1929:204:16;2001:7;-1:-1:-1;;;;;2028:19:16;;2020:73;;;;-1:-1:-1;;;2020:73:16;;10335:2:48;2020:73:16;;;10317:21:48;10374:2;10354:18;;;10347:30;10413:34;10393:18;;;10386:62;10484:11;10464:18;;;10457:39;10513:19;;2020:73:16;10133:405:48;2020:73:16;-1:-1:-1;;;;;;2110:16:16;;;;;:9;:16;;;;;;;1929:204::o;3201:176:30:-;3251:34;1438:24;719:10:34;3021:145:1;:::i;3251:34:30:-;3243:109;;;;-1:-1:-1;;;3243:109:30;;10745:2:48;3243:109:30;;;10727:21:48;10784:2;10764:18;;;10757:30;10823:34;10803:18;;;10796:62;10894:32;10874:18;;;10867:60;10944:19;;3243:109:30;10543:426:48;3243:109:30;3362:8;:6;:8::i;1431:151:2:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:2:o;2633:102:16:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:34;4296:8:16;4306;4263:18;:52::i;5189:276::-;5319:41;719:10:34;5352:7:16;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:16;;7275:2:48;5311:99:16;;;7257:21:48;7314:2;7294:18;;;7287:30;7353:34;7333:18;;;7326:62;-1:-1:-1;;;7404:18:48;;;7397:43;7457:19;;5311:99:16;7073:409:48;5311:99:16;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2977:93;2801:276;-1:-1:-1;;;2801:276:16:o;1750:140:2:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;5354:147:1:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;7587:233::-:0;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:1;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:1;;;;;;;;;:36;;-1:-1:-1;;7708:36:1;7740:4;7708:36;;;7790:12;719:10:34;;640:96;7790:12:1;-1:-1:-1;;;;;7763:40:1;7781:7;-1:-1:-1;;;;;7763:40:1;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:47:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:47;;8398:4;:50::i;1005:222:21:-;1107:4;-1:-1:-1;;;;;;1130:50:21;;1145:35;1130:50;;:90;;;1184:36;1208:11;1184:23;:36::i;13240:133:16:-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;13313:53;;;;-1:-1:-1;;;13313:53:16;;9552:2:48;13313:53:16;;;9534:21:48;9591:2;9571:18;;;9564:30;9630:26;9610:18;;;9603:54;9674:18;;13313:53:16;9350:348:48;12572:171:16;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;12646:29:16;-1:-1:-1;;;;;12646:29:16;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:16;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:16;:7;-1:-1:-1;;;;;7570:16:16;;:52;;;-1:-1:-1;;;;;;4508:25:16;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:16;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:16;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:16:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:16;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:16;;11346:81;;;;-1:-1:-1;;;11346:81:16;;11651:2:48;11346:81:16;;;11633:21:48;11690:2;11670:18;;;11663:30;11729:34;11709:18;;;11702:62;-1:-1:-1;;;11780:18:48;;;11773:35;11825:19;;11346:81:16;11449:401:48;11346:81:16;-1:-1:-1;;;;;11445:16:16;;11437:65;;;;-1:-1:-1;;;11437:65:16;;12057:2:48;11437:65:16;;;12039:21:48;12096:2;12076:18;;;12069:30;12135:34;12115:18;;;12108:62;12206:6;12186:18;;;12179:34;12230:19;;11437:65:16;11855:400:48;11437:65:16;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;-1:-1:-1;;;;;11655:31:16;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:16;;11647:81;;;;-1:-1:-1;;;11647:81:16;;11651:2:48;11647:81:16;;;11633:21:48;11690:2;11670:18;;;11663:30;11729:34;11709:18;;;11702:62;-1:-1:-1;;;11780:18:48;;;11773:35;11825:19;;11647:81:16;11449:401:48;11647:81:16;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;11790:31:16;;;;;;-1:-1:-1;;;;;12265:15:16;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:16;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;3460:103:1:-;3526:30;3537:4;719:10:34;3526::1;:30::i;1978:166:2:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;2433:117:15:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:15::1;::::0;;2521:22:::1;719:10:34::0;2530:12:15::1;2521:22;::::0;-1:-1:-1;;;;;1738:55:48;;;1720:74;;1708:2;1693:18;2521:22:15::1;;;;;;;2433:117::o:0;10171:762:16:-;10230:13;10246:23;10261:7;10246:14;:23::i;:::-;10230:39;;10280:51;10301:5;10316:1;10320:7;10329:1;10280:20;:51::i;:::-;10441:23;10456:7;10441:14;:23::i;:::-;10509:24;;;;:15;:24;;;;;;;;10502:31;;-1:-1:-1;;10502:31:16;;;;;;-1:-1:-1;;;;;10749:16:16;;;;;:9;:16;;;;;:21;;-1:-1:-1;;10749:21:16;;;10797:16;;;:7;:16;;;;;;10790:23;;;;;;;10829:36;10433:31;;-1:-1:-1;10525:7:16;;10829:36;;10509:24;;10829:36;6038:214:1;;:::o;8925:920:16:-;-1:-1:-1;;;;;9004:16:16;;8996:61;;;;-1:-1:-1;;;8996:61:16;;12462:2:48;8996:61:16;;;12444:21:48;;;12481:18;;;12474:30;12540:34;12520:18;;;12513:62;12592:18;;8996:61:16;12260:356:48;8996:61:16;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:16;;12823:2:48;9067:58:16;;;12805:21:48;12862:2;12842:18;;;12835:30;12901;12881:18;;;12874:58;12949:18;;9067:58:16;12621:352:48;9067:58:16;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:16;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:16;;12823:2:48;9271:58:16;;;12805:21:48;12862:2;12842:18;;;12835:30;12901;12881:18;;;12874:58;12949:18;;9271:58:16;12621:352:48;9271:58:16;-1:-1:-1;;;;;9671:13:16;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;9710:21:16;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;6038:214:1;;:::o;2186:115:15:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:15::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:34::0;;640:96;9563:156:47;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;12879:277:16:-;12999:8;-1:-1:-1;;;;;12990:17:16;:5;-1:-1:-1;;;;;12990:17:16;;;12982:55;;;;-1:-1:-1;;;12982:55:16;;13180:2:48;12982:55:16;;;13162:21:48;13219:2;13199:18;;;13192:30;13258:27;13238:18;;;13231:55;13303:18;;12982:55:16;12978:349:48;12982:55:16;-1:-1:-1;;;;;13047:25:16;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:16;;;;;;;;;;13108:41;;586::48;;;13108::16;;559:18:48;13108:41:16;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:16;;13534:2:48;6476:110:16;;;13516:21:48;13573:2;13553:18;;;13546:30;13612:34;13592:18;;;13585:62;13683:20;13663:18;;;13656:48;13721:19;;6476:110:16;13332:414:48;2110:112:30;2170:13;2202;2195:20;;;;;:::i;447:696:38:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:38;-1:-1:-1;604:41:38;-1:-1:-1;765:28:38;;;781:2;765:28;820:280;-1:-1:-1;;851:5:38;990:8;985:2;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1068:10:38;1064:21;;1080:5;;1064:21;820:280;;;-1:-1:-1;1120:6:38;447:696;-1:-1:-1;;;447:696:38:o;9106:115:47:-;9169:7;9195:19;9203:3;4545:18;;4463:107;2214:404;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:47;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:47;2589:12;;1570:300:16;1672:4;-1:-1:-1;;;;;;1707:40:16;;1722:25;1707:40;;:104;;-1:-1:-1;;;;;;;1763:48:16;;1778:33;1763:48;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;3773:281:30:-;3986:61;4013:4;4019:2;4023:12;4037:9;3986:26;:61::i;3844:479:1:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:1;;;;;;;;;;;;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:1;;;;;;;;;;-1:-1:-1;;;3970:336:1;;;;;;;:::i;7991:234::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:1;;;;;;;;;;;;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:1;;;;;;;;;;:37;;-1:-1:-1;;8112:37:1;;;8168:40;719:10:34;;8112:12:1;;8168:40;;8144:5;8168:40;7991:234;;:::o;8623:156:47:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:47;;8719:7;:53::i;1945:106:15:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:15;;14933:2:48;2003:41:15;;;14915:21:48;14972:2;14952:18;;;14945:30;15011:22;14991:18;;;14984:50;15051:18;;2003:41:15;14731:344:48;1767:106:15;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:15;;15282:2:48;1828:38:15;;;15264:21:48;15321:2;15301:18;;;15294:30;15360:18;15340;;;15333:46;15396:18;;1828:38:15;15080:340:48;4912:118:47;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;13925:831:16:-;14074:4;-1:-1:-1;;;;;14094:13:16;;1702:19:32;:23;14090:660:16;;14129:71;;-1:-1:-1;;;14129:71:16;;-1:-1:-1;;;;;14129:36:16;;;;;:71;;719:10:34;;14180:4:16;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:16;;;;;;;;-1:-1:-1;;14129:71:16;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14367:13:16;;14363:321;;14409:60;;-1:-1:-1;;;14409:60:16;;13534:2:48;14409:60:16;;;13516:21:48;13573:2;13553:18;;;13546:30;13612:34;13592:18;;;13585:62;13683:20;13663:18;;;13656:48;13721:19;;14409:60:16;13332:414:48;14363:321:16;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:16;-1:-1:-1;;;14250:51:16;;-1:-1:-1;14243:58:16;;14090:660;-1:-1:-1;14735:4:16;13925:831;;;;;;:::o;10139:916:43:-;10192:7;;10276:8;10267:17;;10263:103;;10313:8;10304:17;;;-1:-1:-1;10349:2:43;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:43;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:43;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:43;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:43;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:43;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:43:o;634:212:2:-;719:4;-1:-1:-1;;;;;;742:57:2;;757:42;742:57;;:97;;;803:36;827:11;803:23;:36::i;1053:315:22:-;1224:61;1251:4;1257:2;1261:12;1275:9;1224:26;:61::i;:::-;1685:7:15;;;;1304:9:22;1296:65;;;;-1:-1:-1;;;1296:65:22;;16398:2:48;1296:65:22;;;16380:21:48;16437:2;16417:18;;;16410:30;16476:34;16456:18;;;16449:62;16547:13;16527:18;;;16520:41;16578:19;;1296:65:22;16196:407:48;2407:149:38;2465:13;2497:52;-1:-1:-1;;;;;2509:22:38;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:38;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:38;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:38;;;;;;;;-1:-1:-1;2030:9:38;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2105:5;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:38;;;;;;;;-1:-1:-1;2141:1:38;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:38;;2162:55;;;;-1:-1:-1;;;2162:55:38;;17446:2:48;2162:55:38;;;17428:21:48;;;17465:18;;;17458:30;17524:34;17504:18;;;17497:62;17576:18;;2162:55:38;17244:356:48;2786:1388:47;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:47;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;2732:202:1;2817:4;-1:-1:-1;;;;;;2840:47:1;;2855:32;2840:47;;:87;;-1:-1:-1;952:25:41;-1:-1:-1;;;;;;937:40:41;;;2891:36:1;829:155:41;2112:890:21;2371:1;2359:9;:13;2355:219;;;2500:63;;-1:-1:-1;;;2500:63:21;;18126:2:48;2500:63:21;;;18108:21:48;18165:2;18145:18;;;18138:30;18204:34;18184:18;;;18177:62;18275:23;18255:18;;;18248:51;18316:19;;2500:63:21;17924:417:48;2355:219:21;2602:12;-1:-1:-1;;;;;2629:18:21;;2625:183;;2663:40;2695:7;3811:10;:17;;3784:24;;;;:15;:24;;;;;:44;;;3838:24;;;;;;;;;;;;3708:161;2663:40;2625:183;;;2732:2;-1:-1:-1;;;;;2724:10:21;:4;-1:-1:-1;;;;;2724:10:21;;2720:88;;2750:47;2783:4;2789:7;2750:32;:47::i;:::-;-1:-1:-1;;;;;2821:16:21;;2817:179;;2853:45;2890:7;2853:36;:45::i;:::-;2817:179;;;2925:4;-1:-1:-1;;;;;2919:10:21;:2;-1:-1:-1;;;;;2919:10:21;;2915:81;;2945:40;2973:2;2977:7;2945:27;:40::i;:::-;2273:729;2112:890;;;;:::o;4486:970::-;4748:22;4798:1;4773:22;4790:4;4773:16;:22::i;:::-;:26;;;;:::i;:::-;4809:18;4830:26;;;:17;:26;;;;;;4748:51;;-1:-1:-1;4960:28:21;;;4956:323;;-1:-1:-1;;;;;5026:18:21;;5004:19;5026:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5075:30;;;;;;:44;;;5191:30;;:17;:30;;;;;:43;;;4956:323;-1:-1:-1;5372:26:21;;;;:17;:26;;;;;;;;5365:33;;;-1:-1:-1;;;;;5415:18:21;;;;;:12;:18;;;;;:34;;;;;;;5408:41;4486:970::o;5744:1061::-;6018:10;:17;5993:22;;6018:21;;6038:1;;6018:21;:::i;:::-;6049:18;6070:24;;;:15;:24;;;;;;6438:10;:26;;5993:46;;-1:-1:-1;6070:24:21;;5993:46;;6438:26;;;;;;:::i;:::-;;;;;;;;;6416:48;;6500:11;6475:10;6486;6475:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6579:28;;;:15;:28;;;;;;;:41;;;6748:24;;;;;6741:31;6782:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5815:990;;;5744:1061;:::o;3296:217::-;3380:14;3397:20;3414:2;3397:16;:20::i;:::-;-1:-1:-1;;;;;3427:16:21;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3471:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3296:217:21:o;14:177:48:-;-1:-1:-1;;;;;;92:5:48;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:258::-;710:1;720:113;734:6;731:1;728:13;720:113;;;810:11;;;804:18;791:11;;;784:39;756:2;749:10;720:113;;;851:6;848:1;845:13;842:48;;;-1:-1:-1;;886:1:48;868:16;;861:27;638:258::o;901:::-;943:3;981:5;975:12;1008:6;1003:3;996:19;1024:63;1080:6;1073:4;1068:3;1064:14;1057:4;1050:5;1046:16;1024:63;:::i;:::-;1141:2;1120:15;-1:-1:-1;;1116:29:48;1107:39;;;;1148:4;1103:50;;901:258;-1:-1:-1;;901:258:48:o;1164:220::-;1313:2;1302:9;1295:21;1276:4;1333:45;1374:2;1363:9;1359:18;1351:6;1333:45;:::i;1389:180::-;1448:6;1501:2;1489:9;1480:7;1476:23;1472:32;1469:52;;;1517:1;1514;1507:12;1469:52;-1:-1:-1;1540:23:48;;1389:180;-1:-1:-1;1389:180:48:o;1805:196::-;1873:20;;-1:-1:-1;;;;;1922:54:48;;1912:65;;1902:93;;1991:1;1988;1981:12;1902:93;1805:196;;;:::o;2006:254::-;2074:6;2082;2135:2;2123:9;2114:7;2110:23;2106:32;2103:52;;;2151:1;2148;2141:12;2103:52;2174:29;2193:9;2174:29;:::i;:::-;2164:39;2250:2;2235:18;;;;2222:32;;-1:-1:-1;;;2006:254:48:o;2447:328::-;2524:6;2532;2540;2593:2;2581:9;2572:7;2568:23;2564:32;2561:52;;;2609:1;2606;2599:12;2561:52;2632:29;2651:9;2632:29;:::i;:::-;2622:39;;2680:38;2714:2;2703:9;2699:18;2680:38;:::i;:::-;2670:48;;2765:2;2754:9;2750:18;2737:32;2727:42;;2447:328;;;;;:::o;3147:254::-;3215:6;3223;3276:2;3264:9;3255:7;3251:23;3247:32;3244:52;;;3292:1;3289;3282:12;3244:52;3328:9;3315:23;3305:33;;3357:38;3391:2;3380:9;3376:18;3357:38;:::i;:::-;3347:48;;3147:254;;;;;:::o;3406:186::-;3465:6;3518:2;3506:9;3497:7;3493:23;3489:32;3486:52;;;3534:1;3531;3524:12;3486:52;3557:29;3576:9;3557:29;:::i;3597:248::-;3665:6;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;-1:-1:-1;;3765:23:48;;;3835:2;3820:18;;;3807:32;;-1:-1:-1;3597:248:48:o;3850:347::-;3915:6;3923;3976:2;3964:9;3955:7;3951:23;3947:32;3944:52;;;3992:1;3989;3982:12;3944:52;4015:29;4034:9;4015:29;:::i;:::-;4005:39;;4094:2;4083:9;4079:18;4066:32;4141:5;4134:13;4127:21;4120:5;4117:32;4107:60;;4163:1;4160;4153:12;4107:60;4186:5;4176:15;;;3850:347;;;;;:::o;4202:184::-;-1:-1:-1;;;4251:1:48;4244:88;4351:4;4348:1;4341:15;4375:4;4372:1;4365:15;4391:1138;4486:6;4494;4502;4510;4563:3;4551:9;4542:7;4538:23;4534:33;4531:53;;;4580:1;4577;4570:12;4531:53;4603:29;4622:9;4603:29;:::i;:::-;4593:39;;4651:38;4685:2;4674:9;4670:18;4651:38;:::i;:::-;4641:48;;4736:2;4725:9;4721:18;4708:32;4698:42;;4791:2;4780:9;4776:18;4763:32;4814:18;4855:2;4847:6;4844:14;4841:34;;;4871:1;4868;4861:12;4841:34;4909:6;4898:9;4894:22;4884:32;;4954:7;4947:4;4943:2;4939:13;4935:27;4925:55;;4976:1;4973;4966:12;4925:55;5012:2;4999:16;5034:2;5030;5027:10;5024:36;;;5040:18;;:::i;:::-;5115:2;5109:9;5083:2;5169:13;;-1:-1:-1;;5165:22:48;;;5189:2;5161:31;5157:40;5145:53;;;5213:18;;;5233:22;;;5210:46;5207:72;;;5259:18;;:::i;:::-;5299:10;5295:2;5288:22;5334:2;5326:6;5319:18;5374:7;5369:2;5364;5360;5356:11;5352:20;5349:33;5346:53;;;5395:1;5392;5385:12;5346:53;5451:2;5446;5442;5438:11;5433:2;5425:6;5421:15;5408:46;5496:1;5491:2;5486;5478:6;5474:15;5470:24;5463:35;5517:6;5507:16;;;;;;;4391:1138;;;;;;;:::o;5534:260::-;5602:6;5610;5663:2;5651:9;5642:7;5638:23;5634:32;5631:52;;;5679:1;5676;5669:12;5631:52;5702:29;5721:9;5702:29;:::i;:::-;5692:39;;5750:38;5784:2;5773:9;5769:18;5750:38;:::i;5799:437::-;5878:1;5874:12;;;;5921;;;5942:61;;5996:4;5988:6;5984:17;5974:27;;5942:61;6049:2;6041:6;6038:14;6018:18;6015:38;6012:218;;;-1:-1:-1;;;6083:1:48;6076:88;6187:4;6184:1;6177:15;6215:4;6212:1;6205:15;6012:218;;5799:437;;;:::o;9161:184::-;-1:-1:-1;;;9210:1:48;9203:88;9310:4;9307:1;9300:15;9334:4;9331:1;9324:15;10974:470;11153:3;11191:6;11185:13;11207:53;11253:6;11248:3;11241:4;11233:6;11229:17;11207:53;:::i;:::-;11323:13;;11282:16;;;;11345:57;11323:13;11282:16;11379:4;11367:17;;11345:57;:::i;:::-;11418:20;;10974:470;-1:-1:-1;;;;10974:470:48:o;13940:786::-;14351:25;14346:3;14339:38;14321:3;14406:6;14400:13;14422:62;14477:6;14472:2;14467:3;14463:12;14456:4;14448:6;14444:17;14422:62;:::i;:::-;14548:19;14543:2;14503:16;;;14535:11;;;14528:40;14593:13;;14615:63;14593:13;14664:2;14656:11;;14649:4;14637:17;;14615:63;:::i;:::-;14698:17;14717:2;14694:26;;13940:786;-1:-1:-1;;;;13940:786:48:o;15425:512::-;15619:4;-1:-1:-1;;;;;15729:2:48;15721:6;15717:15;15706:9;15699:34;15781:2;15773:6;15769:15;15764:2;15753:9;15749:18;15742:43;;15821:6;15816:2;15805:9;15801:18;15794:34;15864:3;15859:2;15848:9;15844:18;15837:31;15885:46;15926:3;15915:9;15911:19;15903:6;15885:46;:::i;:::-;15877:54;15425:512;-1:-1:-1;;;;;;15425:512:48:o;15942:249::-;16011:6;16064:2;16052:9;16043:7;16039:23;16035:32;16032:52;;;16080:1;16077;16070:12;16032:52;16112:9;16106:16;16131:30;16155:5;16131:30;:::i;16608:184::-;-1:-1:-1;;;16657:1:48;16650:88;16757:4;16754:1;16747:15;16781:4;16778:1;16771:15;16797:168;16837:7;16903:1;16899;16895:6;16891:14;16888:1;16885:21;16880:1;16873:9;16866:17;16862:45;16859:71;;;16910:18;;:::i;:::-;-1:-1:-1;16950:9:48;;16797:168::o;16970:128::-;17010:3;17041:1;17037:6;17034:1;17031:13;17028:39;;;17047:18;;:::i;:::-;-1:-1:-1;17083:9:48;;16970:128::o;17103:136::-;17142:3;17170:5;17160:39;;17179:18;;:::i;:::-;-1:-1:-1;;;17215:18:48;;17103:136::o;17605:125::-;17645:4;17673:1;17670;17667:8;17664:34;;;17678:18;;:::i;:::-;-1:-1:-1;17715:9:48;;17605:125::o;17735:184::-;-1:-1:-1;;;17784:1:48;17777:88;17884:4;17881:1;17874:15;17908:4;17905:1;17898:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address)":"6a627842","name()":"06fdde03","ownerOf(uint256)":"6352211e","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts. _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\":\"ERC721PresetMinterPauserAutoId\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09656a37963a61e79df0b718ad0ec323cd29d409d6ead33dbb91d0770ff87fa4\",\"dweb:/ipfs/QmXLWCYoMpZ4SecK4kVaL53LZWXZNbQG8gUzACmZ6A64rE\"]},\"contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0x645230d3afe28f9108eef658e77bb6ac72cea51ac091b40951977c88f7044142\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9be3653b7c267854fe82463f1e2650ff25c428f7c5526965ec5f57ffadead8ef\",\"dweb:/ipfs/QmPYTo2h2GEynxCvKsG6EffDJMrNkUcrEYgycrCtzUk7Kx\"]},\"contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\":{\"keccak256\":\"0x28dc3d069f9a21b1624459ca4593bcef168df8343b3b5c990dd287f407805fcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fed729868e69afbf6278ae5aa6cd0cfe2d7714287dd5255ef73e7c3cff11fe77\",\"dweb:/ipfs/QmaUdoXRqXA79jcQgKPPkT4X5fav8TQNtfsuZdCLePooEJ\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034363906c1b4c895a46a3e01f38dead4fbbe4a967fedacbec8c5f4281121bf5464736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE CALLDATASIZE CODECOPY MOD 0xC1 0xB4 0xC8 SWAP6 LOG4 PUSH11 0x3E01F38DEAD4FBBE4A967F 0xED 0xAC 0xBE 0xC8 0xC5 DELEGATECALL 0x28 GT 0x21 0xBF SLOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:9169:32:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:32;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034363906c1b4c895a46a3e01f38dead4fbbe4a967fedacbec8c5f4281121bf5464736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE CALLDATASIZE CODECOPY MOD 0xC1 0xB4 0xC8 SWAP6 LOG4 PUSH11 0x3E01F38DEAD4FBBE4A967F 0xED 0xAC 0xBE 0xC8 0xC5 DELEGATECALL 0x28 GT 0x21 0xBF SLOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:9169:32:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"contracts/utils/Checkpoints.sol":{"Checkpoints":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ed111a834c8496212a78b3f80a04c9bb934833c2a86d711baef1cba81d06f4b564736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED GT BYTE DUP4 0x4C DUP5 SWAP7 0x21 0x2A PUSH25 0xB3F80A04C9BB934833C2A86D711BAEF1CBA81D06F4B564736F PUSH13 0x63430008090033000000000000 ","sourceMap":"708:19732:33:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;708:19732:33;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ed111a834c8496212a78b3f80a04c9bb934833c2a86d711baef1cba81d06f4b564736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED GT BYTE DUP4 0x4C DUP5 SWAP7 0x21 0x2A PUSH25 0xB3F80A04C9BB934833C2A86D711BAEF1CBA81D06F4B564736F PUSH13 0x63430008090033000000000000 ","sourceMap":"708:19732:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library defines the `History` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new checkpoint for the current transaction block using the {push} function. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0x3f12d280f57c96b4449de1a4e07f5ca737cac310489b7f269ce37e8f1b24fd79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8990f3cc807ac6be85fdd6935b16135b315b5ab5b8951b1f5a188596f7efd2e7\",\"dweb:/ipfs/QmdQmbWKpaAWpvLBTQfFWGKjm8xjncwEcNyRQ5M61sFaLE\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a040a6f7d0f949b872ed93511668c70aacc8041e6a66dc471e5ae598cb154cd264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 BLOCKHASH 0xA6 0xF7 0xD0 0xF9 0x49 0xB8 PUSH19 0xED93511668C70AACC8041E6A66DC471E5AE598 0xCB ISZERO 0x4C 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:35:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:35;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a040a6f7d0f949b872ed93511668c70aacc8041e6a66dc471e5ae598cb154cd264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 BLOCKHASH 0xA6 0xF7 0xD0 0xF9 0x49 0xB8 PUSH19 0xED93511668C70AACC8041E6A66DC471E5AE598 0xCB ISZERO 0x4C 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:35:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049cb79c1816fc6f6eeb5236c072a21c8bbbb598e43acbfb87c931a4a30473d6b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xCB PUSH26 0xC1816FC6F6EEB5236C072A21C8BBBB598E43ACBFB87C931A4A30 SELFBALANCE RETURNDATASIZE PUSH12 0x64736F6C6343000809003300 ","sourceMap":"1235:3050:36:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1235:3050:36;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049cb79c1816fc6f6eeb5236c072a21c8bbbb598e43acbfb87c931a4a30473d6b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xCB PUSH26 0xC1816FC6F6EEB5236C072A21C8BBBB598E43ACBFB87C931A4A30 SELFBALANCE RETURNDATASIZE PUSH12 0x64736F6C6343000809003300 ","sourceMap":"1235:3050:36:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd76f69a96349862cf7cf793c4f54d96e21fc797a25d7018234b18ae68a01cfe64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH23 0xF69A96349862CF7CF793C4F54D96E21FC797A25D701823 0x4B XOR 0xAE PUSH9 0xA01CFE64736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1420:2685:37:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:37;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd76f69a96349862cf7cf793c4f54d96e21fc797a25d7018234b18ae68a01cfe64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH23 0xF69A96349862CF7CF793C4F54D96E21FC797A25D701823 0x4B XOR 0xAE PUSH9 0xA01CFE64736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1420:2685:37:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220723a771bdee9201d29837aa95098a90c6ddc02d70ea70735e2ce92ff5c8580a764736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x3A771BDEE9201D29837AA95098A90C6DDC02D7 0xE 0xA7 SMOD CALLDATALOAD 0xE2 0xCE SWAP3 SELFDESTRUCT 0x5C DUP6 DUP1 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"220:2559:38:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:38;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220723a771bdee9201d29837aa95098a90c6ddc02d70ea70735e2ce92ff5c8580a764736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x3A771BDEE9201D29837AA95098A90C6DDC02D7 0xE 0xA7 SMOD CALLDATALOAD 0xE2 0xCE SWAP3 SELFDESTRUCT 0x5C DUP6 DUP1 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"220:2559:38:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207367d6e0c688c68ac43d90a87548aad9d78219f7a21aa70cf4c12142ea8e892164736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x67D6E0C688C68AC43D90A87548AAD9D78219F7A2 BYTE 0xA7 0xC DELEGATECALL 0xC1 0x21 TIMESTAMP 0xEA DUP15 DUP10 0x21 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8761:39:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:39;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207367d6e0c688c68ac43d90a87548aad9d78219f7a21aa70cf4c12142ea8e892164736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x67D6E0C688C68AC43D90A87548AAD9D78219F7A2 BYTE 0xA7 0xC DELEGATECALL 0xC1 0x21 TIMESTAMP 0xEA DUP15 DUP10 0x21 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8761:39:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220714d6e588875f933cfe3d304b20f6619635ff358f91e4514b55ffc8821e996c864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4D6E588875F933CFE3D304B20F6619635FF3 PC 0xF9 0x1E GASLIMIT EQ 0xB5 0x5F 0xFC DUP9 0x21 0xE9 SWAP7 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12582:43:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:43;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220714d6e588875f933cfe3d304b20f6619635ff358f91e4514b55ffc8821e996c864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4D6E588875F933CFE3D304B20F6619635FF3 PC 0xF9 0x1E GASLIMIT EQ 0xB5 0x5F 0xFC DUP9 0x21 0xE9 SWAP7 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12582:43:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b37f3c207bab6955691bfbd2fbed3c3ef851e9d5520c6db81820c7da6a13909364736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH32 0x3C207BAB6955691BFBD2FBED3C3EF851E9D5520C6DB81820C7DA6A1390936473 PUSH16 0x6C634300080900330000000000000000 ","sourceMap":"927:34153:44:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;927:34153:44;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b37f3c207bab6955691bfbd2fbed3c3ef851e9d5520c6db81820c7da6a13909364736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH32 0x3C207BAB6955691BFBD2FBED3C3EF851E9D5520C6DB81820C7DA6A1390936473 PUSH16 0x6C634300080900330000000000000000 ","sourceMap":"927:34153:44:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b29b98e6275dc1164fc2b0002d5dd1bb121accacf0a309a483c9f46ffa6531f464736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP12 SWAP9 0xE6 0x27 0x5D 0xC1 AND 0x4F 0xC2 0xB0 STOP 0x2D 0x5D 0xD1 0xBB SLT BYTE 0xCC 0xAC CREATE LOG3 MULMOD LOG4 DUP4 0xC9 DELEGATECALL PUSH16 0xFA6531F464736F6C6343000809003300 ","sourceMap":"215:1047:45:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:45;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b29b98e6275dc1164fc2b0002d5dd1bb121accacf0a309a483c9f46ffa6531f464736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP12 SWAP9 0xE6 0x27 0x5D 0xC1 AND 0x4F 0xC2 0xB0 STOP 0x2D 0x5D 0xD1 0xBB SLT BYTE 0xCC 0xAC CREATE LOG3 MULMOD LOG4 DUP4 0xC9 DELEGATECALL PUSH16 0xFA6531F464736F6C6343000809003300 ","sourceMap":"215:1047:45:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/utils/structs/BitMaps.sol":{"BitMaps":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f477b17383a6f06feae9f37a984a0409c305585066b11441f78b836ffef5fa264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SELFBALANCE PUSH28 0x17383A6F06FEAE9F37A984A0409C305585066B11441F78B836FFEF5F LOG2 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"405:1154:46:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;405:1154:46;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f477b17383a6f06feae9f37a984a0409c305585066b11441f78b836ffef5fa264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SELFBALANCE PUSH28 0x17383A6F06FEAE9F37A984A0409C305585066B11441F78B836FFEF5F LOG2 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"405:1154:46:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing uint256 to bool mapping in a compact and efficient way, providing the keys are sequential. Largely inspired by Uniswap's https://github.com/Uniswap/merkle-distributor/blob/master/contracts/MerkleDistributor.sol[merkle-distributor].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/structs/BitMaps.sol\":\"BitMaps\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/structs/BitMaps.sol\":{\"keccak256\":\"0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f6d9467f83ad116296f5d3f16734fa997cf333a6bc57b494b9d4771e7618fa6\",\"dweb:/ipfs/QmS5T3j2ijQQXv9QtQGMngekqdSRJSad4VEyeszRwDurMS\"]}},\"version\":1}"}},"contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016bcf87a474b76508083384002eac67386ee5f26ac9fd83ccbbd6cedaa5f8ffe64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBC 0xF8 PUSH27 0x474B76508083384002EAC67386EE5F26AC9FD83CCBBD6CEDAA5F8F INVALID PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1329:11630:47:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1329:11630:47;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016bcf87a474b76508083384002eac67386ee5f26ac9fd83ccbbd6cedaa5f8ffe64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBC 0xF8 PUSH27 0x474B76508083384002EAC67386EE5F26AC9FD83CCBBD6CEDAA5F8F INVALID PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1329:11630:47:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}}}}}