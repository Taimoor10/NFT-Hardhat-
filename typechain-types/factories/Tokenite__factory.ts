/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Tokenite, TokeniteInterface } from "../Tokenite";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintTokenite",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526008815267546f6b656e69746560c01b6020808301918252835180850190945260018452601560fa1b9084015281519192916200005b916000916200007a565b508051620000719060019060208401906200007a565b5050506200015d565b828054620000889062000120565b90600052602060002090601f016020900481019282620000ac5760008555620000f7565b82601f10620000c757805160ff1916838001178555620000f7565b82800160010185558215620000f7579182015b82811115620000f7578251825591602001919060010190620000da565b506200010592915062000109565b5090565b5b808211156200010557600081556001016200010a565b600181811c908216806200013557607f821691505b602082108114156200015757634e487b7160e01b600052602260045260246000fd5b50919050565b6114b7806200016d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021b57600080fd5b806370a08231146101a557806371ac0e50146101c657806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046110e1565b610257565b60405190151581526020015b60405180910390f35b61011f610282565b60405161010e919061114b565b61013f61013a36600461115e565b610314565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611193565b61033b565b005b61016a61017a3660046111bd565b610472565b61016a61018d3660046111bd565b6104e9565b61013f6101a036600461115e565b610504565b6101b86101b33660046111f9565b610569565b60405190815260200161010e565b6101b86101d43660046112a0565b610603565b61011f61063b565b61016a6101ef366004611302565b61064a565b61016a61020236600461133e565b610659565b61011f61021536600461115e565b50606090565b6101026102293660046113ba565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216632483248360e11b148061027c575061027c826106d7565b92915050565b606060008054610291906113ed565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906113ed565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b600061031f826106fc565b506000908152600460205260409020546001600160a01b031690565b600061034682610504565b9050806001600160a01b0316836001600160a01b031614156103d55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806103f157506103f18133610229565b6104635760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103cc565b61046d8383610763565b505050565b61047c33826107de565b6104de5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016103cc565b61046d83838361085d565b61046d83838360405180602001604052806000815250610659565b6000818152600260205260408120546001600160a01b03168061027c5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103cc565b60006001600160a01b0382166105e75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016103cc565b506001600160a01b031660009081526003602052604090205490565b6000610613600780546001019055565b600061061e60075490565b905061062a8482610a63565b6106348184610bfb565b9392505050565b606060018054610291906113ed565b610655338383610cdc565b5050565b61066333836107de565b6106c55760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016103cc565b6106d184848484610dab565b50505050565b60006001600160e01b03198216632483248360e11b148061027c575061027c82610e34565b6000818152600260205260409020546001600160a01b03166107605760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016103cc565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906107a582610504565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806107ea83610504565b9050806001600160a01b0316846001600160a01b0316148061083157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108555750836001600160a01b031661084a84610314565b6001600160a01b0316145b949350505050565b826001600160a01b031661087082610504565b6001600160a01b0316146108d45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103cc565b6001600160a01b03821661094f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103cc565b826001600160a01b031661096282610504565b6001600160a01b0316146109c65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103cc565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610ab95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103cc565b6000818152600260205260409020546001600160a01b031615610b1e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103cc565b6000818152600260205260409020546001600160a01b031615610b835760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103cc565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610c855760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016103cc565b60008281526006602090815260409091208251610ca492840190611032565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b816001600160a01b0316836001600160a01b03161415610d3e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103cc565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610db684848461085d565b610dc284848484610ecf565b6106d15760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103cc565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480610e9757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061027c57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461027c565b60006001600160a01b0384163b1561102757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f13903390899088908890600401611428565b602060405180830381600087803b158015610f2d57600080fd5b505af1925050508015610f5d575060408051601f3d908101601f19168201909252610f5a91810190611464565b60015b61100d573d808015610f8b576040519150601f19603f3d011682016040523d82523d6000602084013e610f90565b606091505b5080516110055760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103cc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610855565b506001949350505050565b82805461103e906113ed565b90600052602060002090601f01602090048101928261106057600085556110a6565b82601f1061107957805160ff19168380011785556110a6565b828001600101855582156110a6579182015b828111156110a657825182559160200191906001019061108b565b506110b29291506110b6565b5090565b5b808211156110b257600081556001016110b7565b6001600160e01b03198116811461076057600080fd5b6000602082840312156110f357600080fd5b8135610634816110cb565b6000815180845260005b8181101561112457602081850181015186830182015201611108565b81811115611136576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061063460208301846110fe565b60006020828403121561117057600080fd5b5035919050565b80356001600160a01b038116811461118e57600080fd5b919050565b600080604083850312156111a657600080fd5b6111af83611177565b946020939093013593505050565b6000806000606084860312156111d257600080fd5b6111db84611177565b92506111e960208501611177565b9150604084013590509250925092565b60006020828403121561120b57600080fd5b61063482611177565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561124557611245611214565b604051601f8501601f19908116603f0116810190828211818310171561126d5761126d611214565b8160405280935085815286868601111561128657600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156112b357600080fd5b6112bc83611177565b9150602083013567ffffffffffffffff8111156112d857600080fd5b8301601f810185136112e957600080fd5b6112f88582356020840161122a565b9150509250929050565b6000806040838503121561131557600080fd5b61131e83611177565b91506020830135801515811461133357600080fd5b809150509250929050565b6000806000806080858703121561135457600080fd5b61135d85611177565b935061136b60208601611177565b925060408501359150606085013567ffffffffffffffff81111561138e57600080fd5b8501601f8101871361139f57600080fd5b6113ae8782356020840161122a565b91505092959194509250565b600080604083850312156113cd57600080fd5b6113d683611177565b91506113e460208401611177565b90509250929050565b600181811c9082168061140157607f821691505b6020821081141561142257634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261145a60808301846110fe565b9695505050505050565b60006020828403121561147657600080fd5b8151610634816110cb56fea26469706673582212204c8acbf8a676ffc2784cba3c96921a488dfeafe30e6ec75e5fd79913ea6d81db64736f6c63430008090033";

type TokeniteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokeniteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tokenite__factory extends ContractFactory {
  constructor(...args: TokeniteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Tokenite> {
    return super.deploy(overrides || {}) as Promise<Tokenite>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Tokenite {
    return super.attach(address) as Tokenite;
  }
  override connect(signer: Signer): Tokenite__factory {
    return super.connect(signer) as Tokenite__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokeniteInterface {
    return new utils.Interface(_abi) as TokeniteInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tokenite {
    return new Contract(address, _abi, signerOrProvider) as Tokenite;
  }
}
