/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TokenTimelock,
  TokenTimelockInterface,
} from "../../../../token/ERC20/utils/TokenTimelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "releaseTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161086f38038061086f83398101604081905261002f916100d0565b42811161009d5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b606482015260840160405180910390fd5b6001600160a01b03928316608052911660a05260c052610113565b6001600160a01b03811681146100cd57600080fd5b50565b6000806000606084860312156100e557600080fd5b83516100f0816100b8565b6020850151909350610101816100b8565b80925050604084015190509250925092565b60805160a05160c05161071561015a60003960008181609f015260f0015260008181605301526102e501526000818160ca0152818161018d01526102c301526107156000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f00000000000000000000000000000000000000000000000000000000000000004210156101895760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527f65666f72652072656c656173652074696d65000000000000000000000000000060648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b15801561020657600080fd5b505afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e919061061e565b9050600081116102b65760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201527f61736500000000000000000000000000000000000000000000000000000000006064820152608401610180565b61030a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361030d565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261038d908490610392565b505050565b60006103e7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661047a9092919063ffffffff16565b90508051600014806104085750808060200190518101906104089190610637565b61038d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610180565b60606104898484600085610491565b949350505050565b6060824710156105095760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610180565b600080866001600160a01b031685876040516105259190610690565b60006040518083038185875af1925050503d8060008114610562576040519150601f19603f3d011682016040523d82523d6000602084013e610567565b606091505b509150915061057887838387610583565b979650505050505050565b606083156105ef5782516105e8576001600160a01b0385163b6105e85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610180565b5081610489565b61048983838151156106045781518083602001fd5b8060405162461bcd60e51b815260040161018091906106ac565b60006020828403121561063057600080fd5b5051919050565b60006020828403121561064957600080fd5b8151801515811461065957600080fd5b9392505050565b60005b8381101561067b578181015183820152602001610663565b8381111561068a576000848401525b50505050565b600082516106a2818460208701610660565b9190910192915050565b60208152600082518060208401526106cb816040850160208701610660565b601f01601f1916919091016040019291505056fea2646970667358221220c6e53c2275ec025da329dffa4d50c8619acce255e435c6657d78795fe9d50b1064736f6c63430008090033";

type TokenTimelockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTimelockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTimelock__factory extends ContractFactory {
  constructor(...args: TokenTimelockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: PromiseOrValue<string>,
    beneficiary_: PromiseOrValue<string>,
    releaseTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenTimelock> {
    return super.deploy(
      token_,
      beneficiary_,
      releaseTime_,
      overrides || {}
    ) as Promise<TokenTimelock>;
  }
  override getDeployTransaction(
    token_: PromiseOrValue<string>,
    beneficiary_: PromiseOrValue<string>,
    releaseTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      beneficiary_,
      releaseTime_,
      overrides || {}
    );
  }
  override attach(address: string): TokenTimelock {
    return super.attach(address) as TokenTimelock;
  }
  override connect(signer: Signer): TokenTimelock__factory {
    return super.connect(signer) as TokenTimelock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTimelockInterface {
    return new utils.Interface(_abi) as TokenTimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenTimelock {
    return new Contract(address, _abi, signerOrProvider) as TokenTimelock;
  }
}
