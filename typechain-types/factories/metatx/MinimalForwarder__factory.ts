/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MinimalForwarder,
  MinimalForwarderInterface,
} from "../../metatx/MinimalForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040518060400160405280601081526020016f26b4b734b6b0b62337b93bb0b93232b960811b81525060405180604001604052806005815260200164302e302e3160d81b815250620000756000836200012f60201b620004ce1790919060201c565b61012052620000928160016200012f602090811b620004ce17901c565b61014052815160208084019190912060e052815190820120610100524660a0526200012060e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526200032f565b60006020835110156200014f57620001478362000183565b90506200017d565b826200016683620001cf60201b620005071760201c565b8151620001779260200190620001d2565b5060ff90505b92915050565b600080829050601f81511115620001ba578260405163305a27a960e01b8152600401620001b1919062000278565b60405180910390fd5b8051620001c782620002d0565b179392505050565b90565b828054620001e090620002f8565b90600052602060002090601f0160209004810192826200020457600085556200024f565b82601f106200021f57805160ff19168380011785556200024f565b828001600101855582156200024f579182015b828111156200024f57825182559160200191906001019062000232565b506200025d92915062000261565b5090565b5b808211156200025d576000815560010162000262565b600060208083528351808285015260005b81811015620002a75785810183015185820160400152820162000289565b81811115620002ba576000604083870101525b50601f01601f1916929092016040019392505050565b80516020808301519190811015620002f2576000198160200360031b1b821691505b50919050565b600181811c908216806200030d57607f821691505b60208210811415620002f257634e487b7160e01b600052602260045260246000fd5b60805160a05160c05160e051610100516101205161014051610ecf6200038a60003960006102e3015260006102b90152600061078a01526000610762015260006106bd015260006106e7015260006107110152610ecf6000f3fe60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f821461008d57806384b0196e146100ae578063bf5d3bdb146100d6575b600080fd5b34801561005057600080fd5b5061007a61005f366004610b30565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b6100a061009b366004610b60565b610106565b604051610084929190610c5b565b3480156100ba57600080fd5b506100c36102ab565b6040516100849796959493929190610c7e565b3480156100e257600080fd5b506100f66100f1366004610b60565b61034f565b6040519015158152602001610084565b6000606061011585858561034f565b61018c5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b61019b60808601356001610d30565b600260006101ac6020890189610b30565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101e69190610b30565b6001600160a01b03166060880135604089013561020660a08b018b610d56565b61021360208d018d610b30565b60405160200161022593929190610d9d565b60408051601f198184030181529082905261023f91610dc3565b600060405180830381858888f193505050503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b509092509050610297603f6060890135610ddf565b5a1161029f57fe5b90969095509350505050565b6000606080828080836102de7f00000000000000000000000000000000000000000000000000000000000000008361050a565b6103097f0000000000000000000000000000000000000000000000000000000000000000600161050a565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60008061046284848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061045c92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506103bf905060208a018a610b30565b6103cf60408b0160208c01610b30565b60408b013560608c013560808d01356103eb60a08f018f610d56565b6040516103f9929190610e01565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206105ae565b906105f6565b905060808501356002600061047a6020890189610b30565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156104c557506104b06020860186610b30565b6001600160a01b0316816001600160a01b0316145b95945050505050565b60006020835110156104ea576104e38361061a565b9050610501565b828281516104fb9260200190610a97565b5060ff90505b92915050565b90565b606060ff831461051d576104e383610671565b81805461052990610e11565b80601f016020809104026020016040519081016040528092919081815260200182805461055590610e11565b80156105a25780601f10610577576101008083540402835291602001916105a2565b820191906000526020600020905b81548152906001019060200180831161058557829003601f168201915b50505050509050610501565b60006105016105bb6106b0565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b600080600061060585856107e0565b9150915061061281610826565b509392505050565b600080829050601f8151111561065e57826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016101839190610e4c565b805161066982610e5f565b179392505050565b6060600061067e83610992565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561070957507f000000000000000000000000000000000000000000000000000000000000000046145b1561073357507f000000000000000000000000000000000000000000000000000000000000000090565b6107db604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b6000808251604114156108175760208301516040840151606085015160001a61080b878285856109d3565b9450945050505061081f565b506000905060025b9250929050565b600081600481111561083a5761083a610e83565b14156108435750565b600181600481111561085757610857610e83565b14156108a55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610183565b60028160048111156108b9576108b9610e83565b14156109075760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610183565b600381600481111561091b5761091b610e83565b141561098f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610183565b50565b600060ff8216601f811115610501576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610a0a5750600090506003610a8e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610a5e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610a8757600060019250925050610a8e565b9150600090505b94509492505050565b828054610aa390610e11565b90600052602060002090601f016020900481019282610ac55760008555610b0b565b82601f10610ade57805160ff1916838001178555610b0b565b82800160010185558215610b0b579182015b82811115610b0b578251825591602001919060010190610af0565b50610b17929150610b1b565b5090565b5b80821115610b175760008155600101610b1c565b600060208284031215610b4257600080fd5b81356001600160a01b0381168114610b5957600080fd5b9392505050565b600080600060408486031215610b7557600080fd5b833567ffffffffffffffff80821115610b8d57600080fd5b9085019060c08288031215610ba157600080fd5b90935060208501359080821115610bb757600080fd5b818601915086601f830112610bcb57600080fd5b813581811115610bda57600080fd5b876020828501011115610bec57600080fd5b6020830194508093505050509250925092565b60005b83811015610c1a578181015183820152602001610c02565b83811115610c29576000848401525b50505050565b60008151808452610c47816020860160208601610bff565b601f01601f19169290920160200192915050565b8215158152604060208201526000610c766040830184610c2f565b949350505050565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e081840152610cba60e084018a610c2f565b8381036040850152610ccc818a610c2f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610d1e57835183529284019291840191600101610d02565b50909c9b505050505050505050505050565b60008219821115610d5157634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e19843603018112610d6d57600080fd5b83018035915067ffffffffffffffff821115610d8857600080fd5b60200191503681900382131561081f57600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610dd5818460208701610bff565b9190910192915050565b600082610dfc57634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b600181811c90821680610e2557607f821691505b60208210811415610e4657634e487b7160e01b600052602260045260246000fd5b50919050565b602081526000610b596020830184610c2f565b80516020808301519190811015610e465760001960209190910360031b1b16919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212202b4cb71025f89cea6ccf887bbc05133af31a5f349fdaa0ce07f9e426e5911ac964736f6c63430008090033";

type MinimalForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalForwarder__factory extends ContractFactory {
  constructor(...args: MinimalForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MinimalForwarder> {
    return super.deploy(overrides || {}) as Promise<MinimalForwarder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MinimalForwarder {
    return super.attach(address) as MinimalForwarder;
  }
  override connect(signer: Signer): MinimalForwarder__factory {
    return super.connect(signer) as MinimalForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderInterface {
    return new utils.Interface(_abi) as MinimalForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalForwarder {
    return new Contract(address, _abi, signerOrProvider) as MinimalForwarder;
  }
}
